from pathlib import Path
from datetime import datetime
BASE_DIR = Path.cwd().parent


def status_codes():
    """
    Load values from StatusCode.csv and then
    add values from StatusCodes_add.csv, but only
    if they are absent from StatusCode.csv
    """
    with open(BASE_DIR / 'schemas' / 'StatusCodes_add.csv') as inputfile:
        additional = {}
        for line in inputfile:
            name, val, doc = line.split(",", 2)
            additional[int(val, 0)] = (name, val, doc)
    with open(BASE_DIR / 'schemas' / 'UA-Nodeset-master' / 'Schema' / 'StatusCode.csv') as inputfile:
        result = []
        for line in inputfile:
            name, val, doc = line.split(",", 2)
            result.append((name, val, doc))
            additional.pop(int(val, 0), None)
        add = [additional[k] for k in sorted(additional.keys())]
    return add + result


if __name__ == "__main__":
    codes = status_codes()
    with open(BASE_DIR / "asyncua" / "ua" / "_generated.py", "w") as outputfile:
        outputfile.write(f"# AUTOGENERATED via schemas/generate_statuscode.py! Date: {datetime.utcnow()}\n"
                         "\n"
                         "\n")

        # Build names dictionary
        outputfile.write("code_list = [\n")
        for name, val, _ in codes:
            outputfile.write(f"    ('{name}', {val}),\n")
        outputfile.write("]")
        outputfile.write("\n\n\n")

        # Build doc dictionary
        outputfile.write("doc_dict = {\n")
        for _, val, doc in codes:
            outputfile.write(f"    {val}: {doc.strip()},\n")
        outputfile.write("}")
        # outputfile.write("\n\n\n")
