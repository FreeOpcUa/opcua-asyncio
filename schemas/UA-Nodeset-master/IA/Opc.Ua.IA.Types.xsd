<?xml version="1.0" encoding="utf-8" ?>
<!--
 * Copyright (c) 2005-2020 The OPC Foundation, Inc. All rights reserved.
 *
 * OPC Foundation MIT License 1.00
 * 
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 * 
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * The complete license agreement can be found here:
 * http://opcfoundation.org/License/MIT/1.00/
-->

<xs:schema elementFormDefault="qualified" targetNamespace="http://opcfoundation.org/UA/IA/Types.xsd" xmlns:tns="http://opcfoundation.org/UA/IA/Types.xsd" xmlns:ua="http://opcfoundation.org/UA/2008/02/Types.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:import namespace="http://opcfoundation.org/UA/2008/02/Types.xsd"/>
    <xs:simpleType name="LevelDisplayMode">
        <xs:annotation>
            <xs:documentation>Contains the values used to indicate how a percentual value is displayed if the stacklight unit works in Levelmeter mode.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Dimmed_0"/>
            <xs:enumeration value="Blinking_1"/>
            <xs:enumeration value="Other_2"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element type="tns:LevelDisplayMode" name="LevelDisplayMode"/>
    <xs:complexType name="ListOfLevelDisplayMode">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" type="tns:LevelDisplayMode" name="LevelDisplayMode" nillable="true"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element type="tns:ListOfLevelDisplayMode" name="ListOfLevelDisplayMode" nillable="true"/>
    <xs:simpleType name="SignalColor">
        <xs:annotation>
            <xs:documentation>Holds the possible colour values for stacklight lamps.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Off_0"/>
            <xs:enumeration value="Red_1"/>
            <xs:enumeration value="Green_2"/>
            <xs:enumeration value="Blue_3"/>
            <xs:enumeration value="Yellow_4"/>
            <xs:enumeration value="Purple_5"/>
            <xs:enumeration value="Cyan_6"/>
            <xs:enumeration value="White_7"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element type="tns:SignalColor" name="SignalColor"/>
    <xs:complexType name="ListOfSignalColor">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" type="tns:SignalColor" name="SignalColor" nillable="true"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element type="tns:ListOfSignalColor" name="ListOfSignalColor" nillable="true"/>
    <xs:simpleType name="SignalModeLight">
        <xs:annotation>
            <xs:documentation>Contains the values used to indicate in what way a lamp behaves when switched on.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Continuous_0"/>
            <xs:enumeration value="Blinking_1"/>
            <xs:enumeration value="Flashing_2"/>
            <xs:enumeration value="Other_3"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element type="tns:SignalModeLight" name="SignalModeLight"/>
    <xs:complexType name="ListOfSignalModeLight">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" type="tns:SignalModeLight" name="SignalModeLight" nillable="true"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element type="tns:ListOfSignalModeLight" name="ListOfSignalModeLight" nillable="true"/>
    <xs:simpleType name="StacklightOperationMode">
        <xs:annotation>
            <xs:documentation>Contains the values used to indicate how a stacklight (as a whole unit) is used.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Segmented_0"/>
            <xs:enumeration value="Levelmeter_1"/>
            <xs:enumeration value="Running_Light_2"/>
            <xs:enumeration value="Other_3"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element type="tns:StacklightOperationMode" name="StacklightOperationMode"/>
    <xs:complexType name="ListOfStacklightOperationMode">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" type="tns:StacklightOperationMode" name="StacklightOperationMode" nillable="true"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element type="tns:ListOfStacklightOperationMode" name="ListOfStacklightOperationMode" nillable="true"/>
</xs:schema>
