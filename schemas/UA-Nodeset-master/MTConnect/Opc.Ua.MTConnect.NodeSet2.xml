<?xml version="1.0" encoding="utf-8" ?>
<!--
 * Copyright (c) 2005-2020 The OPC Foundation, Inc. All rights reserved.
 *
 * OPC Foundation MIT License 1.00
 * 
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 * 
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * The complete license agreement can be found here:
 * http://opcfoundation.org/License/MIT/1.00/
-->

<UANodeSet xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" LastModified="2013-12-31T00:00:00Z" xmlns="http://opcfoundation.org/UA/2011/03/UANodeSet.xsd">
  <NamespaceUris>
    <Uri>http://opcfoundation.org/UA/MTConnect/v2/</Uri>
  </NamespaceUris>
  <Models>
    <Model ModelUri='http://opcfoundation.org/UA/MTConnect/v2/' Version='2.00.01' PublicationDate='2020-06-05T00:00:00Z'>
      <RequiredModel ModelUri='http://opcfoundation.org/UA/' Version='1.04.6' PublicationDate='2020-04-14T00:00:00Z'/>
    </Model>
  </Models>
  <Aliases>
    <Alias Alias='Boolean'>i=1</Alias>
    <Alias Alias='Byte'>i=3</Alias>
    <Alias Alias='ByteString'>i=15</Alias>
    <Alias Alias='DateTime'>i=13</Alias>
    <Alias Alias='Double'>i=11</Alias>
    <Alias Alias='ExpandedNodeId'>i=18</Alias>
    <Alias Alias='Float'>i=10</Alias>
    <Alias Alias='Guid'>i=14</Alias>
    <Alias Alias='HasComponent'>i=47</Alias>
    <Alias Alias='HasDescription'>i=39</Alias>
    <Alias Alias='HasEncoding'>i=38</Alias>
    <Alias Alias='HasEventSource'>i=36</Alias>
    <Alias Alias='HasModellingRule'>i=37</Alias>
    <Alias Alias='HasNotifier'>i=48</Alias>
    <Alias Alias='HasProperty'>i=46</Alias>
    <Alias Alias='HasSubtype'>i=45</Alias>
    <Alias Alias='HasTypeDefinition'>i=40</Alias>
    <Alias Alias='Int16'>i=4</Alias>
    <Alias Alias='Int32'>i=6</Alias>
    <Alias Alias='Int64'>i=8</Alias>
    <Alias Alias='Integer'>i=27</Alias>
    <Alias Alias='LocalizedText'>i=21</Alias>
    <Alias Alias='NodeId'>i=17</Alias>
    <Alias Alias='Number'>i=26</Alias>
    <Alias Alias='Organizes'>i=35</Alias>
    <Alias Alias='QualifiedName'>i=20</Alias>
    <Alias Alias='SByte'>i=2</Alias>
    <Alias Alias='StatusCode'>i=19</Alias>
    <Alias Alias='String'>i=12</Alias>
    <Alias Alias='Structure'>i=22</Alias>
    <Alias Alias='UInt16'>i=5</Alias>
    <Alias Alias='UInt32'>i=7</Alias>
    <Alias Alias='UInt64'>i=9</Alias>
    <Alias Alias='UInteger'>i=28</Alias>
    <Alias Alias='XmlElement'>i=16</Alias>
  </Aliases>
  <!-- Instantiation of Object http://opcfoundation.org/UA/MTConnect/2.0/ ns=1;i=3630 -->
  <UAObject NodeId='ns=1;i=3630' BrowseName='1:http://opcfoundation.org/UA/MTConnect/2.0/'>
    <DisplayName>http://opcfoundation.org/UA/MTConnect/2.0/</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - NamespaceMetadataType i=11616   -->
      <Reference ReferenceType='HasTypeDefinition'>i=11616</Reference>
      <!-- HasProperty -  - IsNamespaceSubset ns=1;i=3635 Boolean  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3635</Reference>
      <!-- HasProperty -  - NamespacePublicationDate ns=1;i=3634 DateTime  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3634</Reference>
      <!-- HasProperty -  - NamespaceUri ns=1;i=3632 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3632</Reference>
      <!-- HasProperty -  - NamespaceVersion ns=1;i=3633 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3633</Reference>
      <!-- HasProperty -  - StaticStringNodeIdPattern ns=1;i=3638 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3638</Reference>
      <!-- HasProperty -  - StaticNodeIdTypes ns=1;i=3636 IdType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3636</Reference>
      <!-- HasProperty -  - StaticNumericNodeIdRange ns=1;i=3637 NumericRange  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3637</Reference>
      <!-- HasComponent - (Reverse) -  i=11715 Namespaces  -->
      <Reference ReferenceType='HasComponent' IsForward='false'>i=11715</Reference>
    </References>
  </UAObject>
  <!-- http://opcfoundation.org/UA/MTConnect/2.0/::IsNamespaceSubset : Boolean[1] -->
  <UAVariable NodeId='ns=1;i=3635' BrowseName='IsNamespaceSubset' ValueRank='-1' DataType='Boolean' ParentNodeId='ns=1;i=3630'>
    <DisplayName>IsNamespaceSubset</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - Boolean i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasProperty - (Reverse) - http://opcfoundation.org/UA/MTConnect/2.0/ ns=1;i=3630   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=3630</Reference>
    </References>
    <Value>
      <Boolean xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>false</Boolean>
    </Value>
  </UAVariable>
  <!-- http://opcfoundation.org/UA/MTConnect/2.0/::NamespacePublicationDate : DateTime[1] -->
  <UAVariable NodeId='ns=1;i=3634' BrowseName='NamespacePublicationDate' ValueRank='-1' DataType='DateTime' ParentNodeId='ns=1;i=3630'>
    <DisplayName>NamespacePublicationDate</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DateTime i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasProperty - (Reverse) - http://opcfoundation.org/UA/MTConnect/2.0/ ns=1;i=3630   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=3630</Reference>
    </References>
    <Value>
      <DateTime xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>2020-06-05T00:00:00Z</DateTime>
    </Value>
  </UAVariable>
  <!-- http://opcfoundation.org/UA/MTConnect/2.0/::NamespaceUri : String[1] -->
  <UAVariable NodeId='ns=1;i=3632' BrowseName='NamespaceUri' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=3630'>
    <DisplayName>NamespaceUri</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasProperty - (Reverse) - http://opcfoundation.org/UA/MTConnect/2.0/ ns=1;i=3630   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=3630</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>http://opcfoundation.org/UA/MTConnect/2.0/</String>
    </Value>
  </UAVariable>
  <!-- http://opcfoundation.org/UA/MTConnect/2.0/::NamespaceVersion : String[1] -->
  <UAVariable NodeId='ns=1;i=3633' BrowseName='NamespaceVersion' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=3630'>
    <DisplayName>NamespaceVersion</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasProperty - (Reverse) - http://opcfoundation.org/UA/MTConnect/2.0/ ns=1;i=3630   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=3630</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>2.00.01</String>
    </Value>
  </UAVariable>
  <!-- http://opcfoundation.org/UA/MTConnect/2.0/::StaticStringNodeIdPattern : String[1] -->
  <UAVariable NodeId='ns=1;i=3638' BrowseName='StaticStringNodeIdPattern' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=3630'>
    <DisplayName>StaticStringNodeIdPattern</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasProperty - (Reverse) - http://opcfoundation.org/UA/MTConnect/2.0/ ns=1;i=3630   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=3630</Reference>
    </References>
  </UAVariable>
  <!-- http://opcfoundation.org/UA/MTConnect/2.0/::StaticNodeIdTypes : IdType[1] -->
  <UAVariable NodeId='ns=1;i=3636' BrowseName='StaticNodeIdTypes' ValueRank='1' DataType='i=256' ParentNodeId='ns=1;i=3630'>
    <DisplayName>StaticNodeIdTypes</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - IdType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasProperty - (Reverse) - http://opcfoundation.org/UA/MTConnect/2.0/ ns=1;i=3630   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=3630</Reference>
    </References>
    <Value>
      <ListOfInt32 xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <Int32>0</Int32>
      </ListOfInt32>
    </Value>
  </UAVariable>
  <!-- http://opcfoundation.org/UA/MTConnect/2.0/::StaticNumericNodeIdRange : NumericRange[1] -->
  <UAVariable NodeId='ns=1;i=3637' BrowseName='StaticNumericNodeIdRange' ValueRank='1' DataType='i=291' ParentNodeId='ns=1;i=3630'>
    <DisplayName>StaticNumericNodeIdRange</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - NumericRange i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasProperty - (Reverse) - http://opcfoundation.org/UA/MTConnect/2.0/ ns=1;i=3630   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=3630</Reference>
    </References>
    <Value>
      <ListOfString xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <String>1:1073741824</String>
      </ListOfString>
    </Value>
  </UAVariable>
  <!-- Instantiation of Object Opc.Ua.MTConnect(Binary) ns=1;i=2729 -->
  <UAVariable NodeId='ns=1;i=2729' BrowseName='1:Opc.Ua.MTConnect' DataType='ByteString'>
    <DisplayName>Opc.Ua.MTConnect</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDictionaryType i=72   -->
      <Reference ReferenceType='HasTypeDefinition'>i=72</Reference>
      <!-- HasProperty -  - Deprecated ns=1;i=2732 Boolean  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2732</Reference>
      <!-- HasProperty -  - NamespaceUri ns=1;i=2731 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2731</Reference>
      <!-- HasComponent - (Reverse) -  i=93 OPC Binary  -->
      <Reference ReferenceType='HasComponent' IsForward='false'>i=93</Reference>
      <!-- HasComponent -  - AssetEventDataType ns=1;i=2746   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2746</Reference>
      <!-- HasComponent -  - MessageDataType ns=1;i=2904   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2904</Reference>
      <!-- HasComponent -  - ThreeSpaceSampleDataType ns=1;i=2910   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2910</Reference>
    </References>
    <Value>
      <ByteString xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <![CDATA[PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4KPG9wYzpU
eXBlRGljdGlvbmFyeSBEZWZhdWx0Qnl0ZU9yZGVyPSdMaXR0bGVFbmRpYW4n
IFRhcmdldE5hbWVzcGFjZT0naHR0cDovL29wY2ZvdW5kYXRpb24ub3JnL1VB
L01UQ29ubmVjdC92Mi8nIHhtbG5zOm9wYz0naHR0cDovL29wY2ZvdW5kYXRp
b24ub3JnL0JpbmFyeVNjaGVtYS8nIHhtbG5zOnhzaT0naHR0cDovL3d3dy53
My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UnIHhtbG5zOnVhPSdodHRw
Oi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvJyB4bWxuczp0bnM9J2h0dHA6Ly9v
cGNmb3VuZGF0aW9uLm9yZy9VQS8nPgogIDxvcGM6SW1wb3J0IE5hbWVzcGFj
ZT0naHR0cDovL29wY2ZvdW5kYXRpb24ub3JnL1VBLycgTG9jYXRpb249J09w
Yy5VYS5CaW5hcnlTY2hlbWEuYnNkJy8+CiAgPG9wYzpTdHJ1Y3R1cmVkVHlw
ZSBOYW1lPSdBc3NldEV2ZW50RGF0YVR5cGUnIEJhc2VUeXBlPSd1YTpFeHRl
bnNpb25PYmplY3QnPgogICAgPG9wYzpEb2N1bWVudGF0aW9uPlRoZSBlbmNv
ZGluZyBmb3IgQXNzZXRFdmVudERhdGFUeXBlPC9vcGM6RG9jdW1lbnRhdGlv
bj4KICAgIDxvcGM6RmllbGQgTmFtZT0nQXNzZXRJZCcgVHlwZU5hbWU9J29w
YzpTdHJpbmcnLz4KICAgIDxvcGM6RmllbGQgTmFtZT0nQXNzZXRUeXBlJyBU
eXBlTmFtZT0nb3BjOlN0cmluZycvPgogIDwvb3BjOlN0cnVjdHVyZWRUeXBl
PgogIDxvcGM6RW51bWVyYXRlZFR5cGUgTmFtZT0nTVRDYXRlZ29yeVR5cGUn
IExlbmd0aEluQml0cz0nMzInIEJhc2VUeXBlPSd1YTpFeHRlbnNpb25PYmpl
Y3QnPgogICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nRVZFTlQnIFZh
bHVlPScwJy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdDT05E
SVRJT04nIFZhbHVlPScxJy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBO
YW1lPSdTQU1QTEUnIFZhbHVlPScyJy8+CiAgPC9vcGM6RW51bWVyYXRlZFR5
cGU+CiAgPG9wYzpFbnVtZXJhdGVkVHlwZSBOYW1lPSdNVENvb3JkaW5hdGVT
eXN0ZW1UeXBlJyBMZW5ndGhJbkJpdHM9JzMyJyBCYXNlVHlwZT0ndWE6RXh0
ZW5zaW9uT2JqZWN0Jz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9
J01BQ0hJTkUnIFZhbHVlPScwJy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1
ZSBOYW1lPSdXT1JLJyBWYWx1ZT0nMScvPgogIDwvb3BjOkVudW1lcmF0ZWRU
eXBlPgogIDxvcGM6RW51bWVyYXRlZFR5cGUgTmFtZT0nTVRSZXByZXNlbnRh
dGlvblR5cGUnIExlbmd0aEluQml0cz0nMzInIEJhc2VUeXBlPSd1YTpFeHRl
bnNpb25PYmplY3QnPgogICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0n
RElTQ1JFVEUnIFZhbHVlPScwJy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1
ZSBOYW1lPSdUSU1FX1NFUklFUycgVmFsdWU9JzEnLz4KICAgIDxvcGM6RW51
bWVyYXRlZFZhbHVlIE5hbWU9J1ZBTFVFJyBWYWx1ZT0nMicvPgogIDwvb3Bj
OkVudW1lcmF0ZWRUeXBlPgogIDxvcGM6RW51bWVyYXRlZFR5cGUgTmFtZT0n
TVRSZXNldFRyaWdnZXJUeXBlJyBMZW5ndGhJbkJpdHM9JzMyJyBCYXNlVHlw
ZT0ndWE6RXh0ZW5zaW9uT2JqZWN0Jz4KICAgIDxvcGM6RW51bWVyYXRlZFZh
bHVlIE5hbWU9J0FDVElPTl9DT01QTEVURScgVmFsdWU9JzAnLz4KICAgIDxv
cGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J0FOTlVBTCcgVmFsdWU9JzEnLz4K
ICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J0RBWScgVmFsdWU9JzIn
Lz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J01BSU5URU5BTkNF
JyBWYWx1ZT0nMycvPgogICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0n
TUFOVUFMJyBWYWx1ZT0nNCcvPgogICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUg
TmFtZT0nTU9OVEgnIFZhbHVlPSc1Jy8+CiAgICA8b3BjOkVudW1lcmF0ZWRW
YWx1ZSBOYW1lPSdQT1dFUl9PTicgVmFsdWU9JzYnLz4KICAgIDxvcGM6RW51
bWVyYXRlZFZhbHVlIE5hbWU9J1NISUZUJyBWYWx1ZT0nNycvPgogICAgPG9w
YzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nV0VFSycgVmFsdWU9JzgnLz4KICA8
L29wYzpFbnVtZXJhdGVkVHlwZT4KICA8b3BjOkVudW1lcmF0ZWRUeXBlIE5h
bWU9J01UU3RhdGlzdGljVHlwZScgTGVuZ3RoSW5CaXRzPSczMicgQmFzZVR5
cGU9J3VhOkV4dGVuc2lvbk9iamVjdCc+CiAgICA8b3BjOkVudW1lcmF0ZWRW
YWx1ZSBOYW1lPSdBVkVSQUdFJyBWYWx1ZT0nMCcvPgogICAgPG9wYzpFbnVt
ZXJhdGVkVmFsdWUgTmFtZT0nTUFYSU1VTScgVmFsdWU9JzEnLz4KICAgIDxv
cGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J01FRElBTicgVmFsdWU9JzInLz4K
ICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J01JTklNVU0nIFZhbHVl
PSczJy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdNT0RFJyBW
YWx1ZT0nNCcvPgogICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nUkFO
R0UnIFZhbHVlPSc1Jy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1l
PSdST09UX01FQU5fU1FVQVJFJyBWYWx1ZT0nNicvPgogICAgPG9wYzpFbnVt
ZXJhdGVkVmFsdWUgTmFtZT0nU1RBTkRBUkRfREVWSUFUSU9OJyBWYWx1ZT0n
NycvPgogIDwvb3BjOkVudW1lcmF0ZWRUeXBlPgogIDxvcGM6U3RydWN0dXJl
ZFR5cGUgTmFtZT0nTWVzc2FnZURhdGFUeXBlJyBCYXNlVHlwZT0ndWE6RXh0
ZW5zaW9uT2JqZWN0Jz4KICAgIDxvcGM6RG9jdW1lbnRhdGlvbj5UaGUgZW5j
b2RpbmcgZm9yIE1lc3NhZ2VEYXRhVHlwZTwvb3BjOkRvY3VtZW50YXRpb24+
CiAgICA8b3BjOkZpZWxkIE5hbWU9J05hdGl2ZUNvZGUnIFR5cGVOYW1lPSdv
cGM6U3RyaW5nJy8+CiAgICA8b3BjOkZpZWxkIE5hbWU9J1RleHQnIFR5cGVO
YW1lPSdvcGM6U3RyaW5nJy8+CiAgPC9vcGM6U3RydWN0dXJlZFR5cGU+CiAg
PG9wYzpTdHJ1Y3R1cmVkVHlwZSBOYW1lPSdUaHJlZVNwYWNlU2FtcGxlRGF0
YVR5cGUnIEJhc2VUeXBlPSd1YTpFeHRlbnNpb25PYmplY3QnPgogICAgPG9w
YzpEb2N1bWVudGF0aW9uPlRoZSBlbmNvZGluZyBmb3IgVGhyZWVTcGFjZVNh
bXBsZURhdGFUeXBlPC9vcGM6RG9jdW1lbnRhdGlvbj4KICAgIDxvcGM6Rmll
bGQgTmFtZT0nWCcgVHlwZU5hbWU9J29wYzpEb3VibGUnLz4KICAgIDxvcGM6
RmllbGQgTmFtZT0nWScgVHlwZU5hbWU9J29wYzpEb3VibGUnLz4KICAgIDxv
cGM6RmllbGQgTmFtZT0nWicgVHlwZU5hbWU9J29wYzpEb3VibGUnLz4KICA8
L29wYzpTdHJ1Y3R1cmVkVHlwZT4KICA8b3BjOkVudW1lcmF0ZWRUeXBlIE5h
bWU9J01UU2V2ZXJpdHlEYXRhVHlwZScgTGVuZ3RoSW5CaXRzPSczMicgQmFz
ZVR5cGU9J3VhOkV4dGVuc2lvbk9iamVjdCc+CiAgICA8b3BjOkVudW1lcmF0
ZWRWYWx1ZSBOYW1lPSdGQVVMVCcgVmFsdWU9JzAnLz4KICAgIDxvcGM6RW51
bWVyYXRlZFZhbHVlIE5hbWU9J05PUk1BTCcgVmFsdWU9JzEnLz4KICAgIDxv
cGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J1dBUk5JTkcnIFZhbHVlPScyJy8+
CiAgPC9vcGM6RW51bWVyYXRlZFR5cGU+CiAgPG9wYzpFbnVtZXJhdGVkVHlw
ZSBOYW1lPSdRdWFsaWZpZXJEYXRhVHlwZScgTGVuZ3RoSW5CaXRzPSczMicg
QmFzZVR5cGU9J3VhOkV4dGVuc2lvbk9iamVjdCc+CiAgICA8b3BjOkVudW1l
cmF0ZWRWYWx1ZSBOYW1lPSdISUdIJyBWYWx1ZT0nMCcvPgogICAgPG9wYzpF
bnVtZXJhdGVkVmFsdWUgTmFtZT0nTE9XJyBWYWx1ZT0nMScvPgogIDwvb3Bj
OkVudW1lcmF0ZWRUeXBlPgogIDxvcGM6RW51bWVyYXRlZFR5cGUgTmFtZT0n
QWN0aXZlU3RhdGVEYXRhVHlwZScgTGVuZ3RoSW5CaXRzPSczMicgQmFzZVR5
cGU9J3VhOkV4dGVuc2lvbk9iamVjdCc+CiAgICA8b3BjOkVudW1lcmF0ZWRW
YWx1ZSBOYW1lPSdBQ1RJVkUnIFZhbHVlPScwJy8+CiAgICA8b3BjOkVudW1l
cmF0ZWRWYWx1ZSBOYW1lPSdJTkFDVElWRScgVmFsdWU9JzEnLz4KICA8L29w
YzpFbnVtZXJhdGVkVHlwZT4KICA8b3BjOkVudW1lcmF0ZWRUeXBlIE5hbWU9
J0F2YWlsYWJpbGl0eURhdGFUeXBlJyBMZW5ndGhJbkJpdHM9JzMyJyBCYXNl
VHlwZT0ndWE6RXh0ZW5zaW9uT2JqZWN0Jz4KICAgIDxvcGM6RW51bWVyYXRl
ZFZhbHVlIE5hbWU9J0FWQUlMQUJMRScgVmFsdWU9JzAnLz4KICAgIDxvcGM6
RW51bWVyYXRlZFZhbHVlIE5hbWU9J1VOQVZBSUxBQkxFJyBWYWx1ZT0nMScv
PgogIDwvb3BjOkVudW1lcmF0ZWRUeXBlPgogIDxvcGM6RW51bWVyYXRlZFR5
cGUgTmFtZT0nQXhpc0NvdXBsaW5nRGF0YVR5cGUnIExlbmd0aEluQml0cz0n
MzInIEJhc2VUeXBlPSd1YTpFeHRlbnNpb25PYmplY3QnPgogICAgPG9wYzpF
bnVtZXJhdGVkVmFsdWUgTmFtZT0nTUFTVEVSJyBWYWx1ZT0nMCcvPgogICAg
PG9wYzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nU0xBVkUnIFZhbHVlPScxJy8+
CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdTWU5DSFJPTk9VUycg
VmFsdWU9JzInLz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J1RB
TkRFTScgVmFsdWU9JzMnLz4KICA8L29wYzpFbnVtZXJhdGVkVHlwZT4KICA8
b3BjOkVudW1lcmF0ZWRUeXBlIE5hbWU9J0F4aXNTdGF0ZURhdGFUeXBlJyBM
ZW5ndGhJbkJpdHM9JzMyJyBCYXNlVHlwZT0ndWE6RXh0ZW5zaW9uT2JqZWN0
Jz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J0hPTUUnIFZhbHVl
PScwJy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdQQVJLRUQn
IFZhbHVlPScxJy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdT
VE9QUEVEJyBWYWx1ZT0nMicvPgogICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUg
TmFtZT0nVFJBVkVMJyBWYWx1ZT0nMycvPgogIDwvb3BjOkVudW1lcmF0ZWRU
eXBlPgogIDxvcGM6RW51bWVyYXRlZFR5cGUgTmFtZT0nQ29tcG9zaXRpb25T
dGF0ZURhdGFUeXBlJyBMZW5ndGhJbkJpdHM9JzMyJyBCYXNlVHlwZT0ndWE6
RXh0ZW5zaW9uT2JqZWN0Jz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5h
bWU9J0FDVElWRScgVmFsdWU9JzAnLz4KICAgIDxvcGM6RW51bWVyYXRlZFZh
bHVlIE5hbWU9J0NMT1NFRCcgVmFsdWU9JzEnLz4KICAgIDxvcGM6RW51bWVy
YXRlZFZhbHVlIE5hbWU9J0RPV04nIFZhbHVlPScyJy8+CiAgICA8b3BjOkVu
dW1lcmF0ZWRWYWx1ZSBOYW1lPSdJTkFDVElWRScgVmFsdWU9JzMnLz4KICAg
IDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J0xFRlQnIFZhbHVlPSc0Jy8+
CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdPRkYnIFZhbHVlPSc1
Jy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdPTicgVmFsdWU9
JzYnLz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J09QRU4nIFZh
bHVlPSc3Jy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdSSUdI
VCcgVmFsdWU9JzgnLz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9
J1RSQU5TSVRJT05JTkcnIFZhbHVlPSc5Jy8+CiAgICA8b3BjOkVudW1lcmF0
ZWRWYWx1ZSBOYW1lPSdVTkxBVENIRUQnIFZhbHVlPScxMCcvPgogICAgPG9w
YzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nVVAnIFZhbHVlPScxMScvPgogIDwv
b3BjOkVudW1lcmF0ZWRUeXBlPgogIDxvcGM6RW51bWVyYXRlZFR5cGUgTmFt
ZT0nQ29udHJvbGxlck1vZGVEYXRhVHlwZScgTGVuZ3RoSW5CaXRzPSczMicg
QmFzZVR5cGU9J3VhOkV4dGVuc2lvbk9iamVjdCc+CiAgICA8b3BjOkVudW1l
cmF0ZWRWYWx1ZSBOYW1lPSdBVVRPTUFUSUMnIFZhbHVlPScwJy8+CiAgICA8
b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdFRElUJyBWYWx1ZT0nMScvPgog
ICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nTUFOVUFMJyBWYWx1ZT0n
MicvPgogICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nTUFOVUFMX0RB
VEFfSU5QVVQnIFZhbHVlPSczJy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1
ZSBOYW1lPSdTRU1JX0FVVE9NQVRJQycgVmFsdWU9JzQnLz4KICA8L29wYzpF
bnVtZXJhdGVkVHlwZT4KICA8b3BjOkVudW1lcmF0ZWRUeXBlIE5hbWU9J0Rp
cmVjdGlvbkRhdGFUeXBlJyBMZW5ndGhJbkJpdHM9JzMyJyBCYXNlVHlwZT0n
dWE6RXh0ZW5zaW9uT2JqZWN0Jz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVl
IE5hbWU9J0NMT0NLV0lTRScgVmFsdWU9JzAnLz4KICAgIDxvcGM6RW51bWVy
YXRlZFZhbHVlIE5hbWU9J0NPVU5URVJfQ0xPQ0tXSVNFJyBWYWx1ZT0nMScv
PgogICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nTkVHQVRJVkUnIFZh
bHVlPScyJy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdQT1NJ
VElWRScgVmFsdWU9JzMnLz4KICA8L29wYzpFbnVtZXJhdGVkVHlwZT4KICA8
b3BjOkVudW1lcmF0ZWRUeXBlIE5hbWU9J0VtZXJnZW5jeVN0b3BEYXRhVHlw
ZScgTGVuZ3RoSW5CaXRzPSczMicgQmFzZVR5cGU9J3VhOkV4dGVuc2lvbk9i
amVjdCc+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdBUk1FRCcg
VmFsdWU9JzAnLz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J1RS
SUdHRVJFRCcgVmFsdWU9JzEnLz4KICA8L29wYzpFbnVtZXJhdGVkVHlwZT4K
ICA8b3BjOkVudW1lcmF0ZWRUeXBlIE5hbWU9J0V4ZWN1dGlvbkRhdGFUeXBl
JyBMZW5ndGhJbkJpdHM9JzMyJyBCYXNlVHlwZT0ndWE6RXh0ZW5zaW9uT2Jq
ZWN0Jz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J0FDVElWRScg
VmFsdWU9JzAnLz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J0ZF
RURfSE9MRCcgVmFsdWU9JzEnLz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVl
IE5hbWU9J0lOVEVSUlVQVEVEJyBWYWx1ZT0nMicvPgogICAgPG9wYzpFbnVt
ZXJhdGVkVmFsdWUgTmFtZT0nT1BUSU9OQUxfU1RPUCcgVmFsdWU9JzMnLz4K
ICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J1JFQURZJyBWYWx1ZT0n
NCcvPgogICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nUFJPR1JBTV9D
T01QTEVURUQnIFZhbHVlPSc1Jy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1
ZSBOYW1lPSdQUk9HUkFNX1NUT1BQRUQnIFZhbHVlPSc2Jy8+CiAgICA8b3Bj
OkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdTVE9QUEVEJyBWYWx1ZT0nNycvPgog
IDwvb3BjOkVudW1lcmF0ZWRUeXBlPgogIDxvcGM6RW51bWVyYXRlZFR5cGUg
TmFtZT0nRnVuY3Rpb25hbE1vZGVEYXRhVHlwZScgTGVuZ3RoSW5CaXRzPScz
MicgQmFzZVR5cGU9J3VhOkV4dGVuc2lvbk9iamVjdCc+CiAgICA8b3BjOkVu
dW1lcmF0ZWRWYWx1ZSBOYW1lPSdNQUlOVEVOQU5DRScgVmFsdWU9JzAnLz4K
ICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J1BST0RVQ1RJT04nIFZh
bHVlPScxJy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdQUk9D
RVNTX0RFVkVMT1BNRU5UJyBWYWx1ZT0nMicvPgogICAgPG9wYzpFbnVtZXJh
dGVkVmFsdWUgTmFtZT0nU0VUVVAnIFZhbHVlPSczJy8+CiAgICA8b3BjOkVu
dW1lcmF0ZWRWYWx1ZSBOYW1lPSdURUFSRE9XTicgVmFsdWU9JzQnLz4KICA8
L29wYzpFbnVtZXJhdGVkVHlwZT4KICA8b3BjOkVudW1lcmF0ZWRUeXBlIE5h
bWU9J0ludGVyZmFjZVN0YXRlRGF0YVR5cGUnIExlbmd0aEluQml0cz0nMzIn
IEJhc2VUeXBlPSd1YTpFeHRlbnNpb25PYmplY3QnPgogICAgPG9wYzpFbnVt
ZXJhdGVkVmFsdWUgTmFtZT0nQUNUSVZFJyBWYWx1ZT0nMCcvPgogICAgPG9w
YzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nQ09NUExFVEUnIFZhbHVlPScxJy8+
CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdGQUlMJyBWYWx1ZT0n
MicvPgogICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nTk9UX1JFQURZ
JyBWYWx1ZT0nNCcvPgogICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0n
UkVBRFknIFZhbHVlPSc1Jy8+CiAgPC9vcGM6RW51bWVyYXRlZFR5cGU+CiAg
PG9wYzpFbnVtZXJhdGVkVHlwZSBOYW1lPSdJbnRlcmZhY2VTdGF0dXNEYXRh
VHlwZScgTGVuZ3RoSW5CaXRzPSczMicgQmFzZVR5cGU9J3VhOkV4dGVuc2lv
bk9iamVjdCc+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdESVNB
QkxFRCcgVmFsdWU9JzAnLz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5h
bWU9J0VOQUJMRUQnIFZhbHVlPScxJy8+CiAgPC9vcGM6RW51bWVyYXRlZFR5
cGU+CiAgPG9wYzpFbnVtZXJhdGVkVHlwZSBOYW1lPSdPbk9mZkRhdGFUeXBl
JyBMZW5ndGhJbkJpdHM9JzMyJyBCYXNlVHlwZT0ndWE6RXh0ZW5zaW9uT2Jq
ZWN0Jz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J09GRicgVmFs
dWU9JzAnLz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J09OJyBW
YWx1ZT0nMScvPgogIDwvb3BjOkVudW1lcmF0ZWRUeXBlPgogIDxvcGM6RW51
bWVyYXRlZFR5cGUgTmFtZT0nT3BlblN0YXRlRGF0YVR5cGUnIExlbmd0aElu
Qml0cz0nMzInIEJhc2VUeXBlPSd1YTpFeHRlbnNpb25PYmplY3QnPgogICAg
PG9wYzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nQ0xPU0VEJyBWYWx1ZT0nMCcv
PgogICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nT1BFTicgVmFsdWU9
JzEnLz4KICAgIDxvcGM6RW51bWVyYXRlZFZhbHVlIE5hbWU9J1VOTEFUQ0hF
RCcgVmFsdWU9JzInLz4KICA8L29wYzpFbnVtZXJhdGVkVHlwZT4KICA8b3Bj
OkVudW1lcmF0ZWRUeXBlIE5hbWU9J1BhdGhNb2RlRGF0YVR5cGUnIExlbmd0
aEluQml0cz0nMzInIEJhc2VUeXBlPSd1YTpFeHRlbnNpb25PYmplY3QnPgog
ICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nSU5ERVBFTkRFTlQnIFZh
bHVlPScwJy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1lPSdNQVNU
RVInIFZhbHVlPScxJy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1ZSBOYW1l
PSdNSVJST1InIFZhbHVlPScyJy8+CiAgICA8b3BjOkVudW1lcmF0ZWRWYWx1
ZSBOYW1lPSdTWU5DSFJPTk9VUycgVmFsdWU9JzMnLz4KICA8L29wYzpFbnVt
ZXJhdGVkVHlwZT4KICA8b3BjOkVudW1lcmF0ZWRUeXBlIE5hbWU9J1Byb2dy
YW1FZGl0RGF0YVR5cGUnIExlbmd0aEluQml0cz0nMzInIEJhc2VUeXBlPSd1
YTpFeHRlbnNpb25PYmplY3QnPgogICAgPG9wYzpFbnVtZXJhdGVkVmFsdWUg
TmFtZT0nQUNUSVZFJyBWYWx1ZT0nMCcvPgogICAgPG9wYzpFbnVtZXJhdGVk
VmFsdWUgTmFtZT0nTk9UX1JFQURZJyBWYWx1ZT0nMScvPgogICAgPG9wYzpF
bnVtZXJhdGVkVmFsdWUgTmFtZT0nUkVBRFknIFZhbHVlPScyJy8+CiAgPC9v
cGM6RW51bWVyYXRlZFR5cGU+CiAgPG9wYzpFbnVtZXJhdGVkVHlwZSBOYW1l
PSdSb3RhcnlNb2RlRGF0YVR5cGUnIExlbmd0aEluQml0cz0nMzInIEJhc2VU
eXBlPSd1YTpFeHRlbnNpb25PYmplY3QnPgogICAgPG9wYzpFbnVtZXJhdGVk
VmFsdWUgTmFtZT0nQ09OVE9VUicgVmFsdWU9JzAnLz4KICAgIDxvcGM6RW51
bWVyYXRlZFZhbHVlIE5hbWU9J0lOREVYJyBWYWx1ZT0nMScvPgogICAgPG9w
YzpFbnVtZXJhdGVkVmFsdWUgTmFtZT0nU1BJTkRMRScgVmFsdWU9JzInLz4K
ICA8L29wYzpFbnVtZXJhdGVkVHlwZT4KICA8b3BjOkVudW1lcmF0ZWRUeXBl
IE5hbWU9J1llc05vRGF0YVR5cGUnIExlbmd0aEluQml0cz0nMzInIEJhc2VU
eXBlPSd1YTpFeHRlbnNpb25PYmplY3QnPgogICAgPG9wYzpFbnVtZXJhdGVk
VmFsdWUgTmFtZT0nTk8nIFZhbHVlPScwJy8+CiAgICA8b3BjOkVudW1lcmF0
ZWRWYWx1ZSBOYW1lPSdZRVMnIFZhbHVlPScxJy8+CiAgPC9vcGM6RW51bWVy
YXRlZFR5cGU+Cjwvb3BjOlR5cGVEaWN0aW9uYXJ5Pg==
]]>
      </ByteString>
    </Value>
  </UAVariable>
  <!-- Opc.Ua.MTConnect(Binary)::Deprecated : Boolean[1] -->
  <UAVariable NodeId='ns=1;i=2732' BrowseName='Deprecated' ValueRank='-1' DataType='Boolean' ParentNodeId='ns=1;i=2729'>
    <DisplayName>Deprecated</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - Boolean i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasProperty - (Reverse) - Opc.Ua.MTConnect(Binary) ns=1;i=2729   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2729</Reference>
    </References>
    <Value>
      <Boolean xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>true</Boolean>
    </Value>
  </UAVariable>
  <!-- Opc.Ua.MTConnect(Binary)::NamespaceUri : String[1] -->
  <UAVariable NodeId='ns=1;i=2731' BrowseName='NamespaceUri' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2729'>
    <DisplayName>NamespaceUri</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasProperty - (Reverse) - Opc.Ua.MTConnect(Binary) ns=1;i=2729   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2729</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>http://opcfoundation.org/UA/MTConnect/v2/</String>
    </Value>
  </UAVariable>
  <!-- Instantiation of Object Opc.Ua.MTConnect(XML) ns=1;i=2733 -->
  <UAVariable NodeId='ns=1;i=2733' BrowseName='1:Opc.Ua.MTConnect' DataType='ByteString'>
    <DisplayName>Opc.Ua.MTConnect</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDictionaryType i=72   -->
      <Reference ReferenceType='HasTypeDefinition'>i=72</Reference>
      <!-- HasProperty -  - Deprecated ns=1;i=2736 Boolean  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2736</Reference>
      <!-- HasProperty -  - NamespaceUri ns=1;i=2735 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2735</Reference>
      <!-- HasComponent - (Reverse) -  i=92 XML Schema  -->
      <Reference ReferenceType='HasComponent' IsForward='false'>i=92</Reference>
      <!-- HasComponent -  - AssetEventDataType ns=1;i=2749   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2749</Reference>
      <!-- HasComponent -  - MTCategoryType ns=1;i=2770   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2770</Reference>
      <!-- HasComponent -  - MTCoordinateSystemType ns=1;i=2790   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2790</Reference>
      <!-- HasComponent -  - MTRepresentationType ns=1;i=2832   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2832</Reference>
      <!-- HasComponent -  - MTResetTriggerType ns=1;i=2838   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2838</Reference>
      <!-- HasComponent -  - MTStatisticType ns=1;i=2866   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2866</Reference>
      <!-- HasComponent -  - MessageDataType ns=1;i=2907   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2907</Reference>
      <!-- HasComponent -  - ThreeSpaceSampleDataType ns=1;i=2913   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2913</Reference>
      <!-- HasComponent -  - MTSeverityDataType ns=1;i=2942   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2942</Reference>
      <!-- HasComponent -  - QualifierDataType ns=1;i=2948   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2948</Reference>
      <!-- HasComponent -  - ActiveStateDataType ns=1;i=2954   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2954</Reference>
      <!-- HasComponent -  - AvailabilityDataType ns=1;i=2960   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2960</Reference>
      <!-- HasComponent -  - AxisCouplingDataType ns=1;i=2966   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2966</Reference>
      <!-- HasComponent -  - AxisStateDataType ns=1;i=2972   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2972</Reference>
      <!-- HasComponent -  - CompositionStateDataType ns=1;i=2978   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2978</Reference>
      <!-- HasComponent -  - ControllerModeDataType ns=1;i=2984   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2984</Reference>
      <!-- HasComponent -  - DirectionDataType ns=1;i=2990   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2990</Reference>
      <!-- HasComponent -  - EmergencyStopDataType ns=1;i=2996   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2996</Reference>
      <!-- HasComponent -  - ExecutionDataType ns=1;i=3002   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=3002</Reference>
      <!-- HasComponent -  - FunctionalModeDataType ns=1;i=3008   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=3008</Reference>
      <!-- HasComponent -  - InterfaceStateDataType ns=1;i=3014   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=3014</Reference>
      <!-- HasComponent -  - InterfaceStatusDataType ns=1;i=3020   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=3020</Reference>
      <!-- HasComponent -  - OnOffDataType ns=1;i=3026   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=3026</Reference>
      <!-- HasComponent -  - OpenStateDataType ns=1;i=3032   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=3032</Reference>
      <!-- HasComponent -  - PathModeDataType ns=1;i=3038   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=3038</Reference>
      <!-- HasComponent -  - ProgramEditDataType ns=1;i=3044   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=3044</Reference>
      <!-- HasComponent -  - RotaryModeDataType ns=1;i=3050   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=3050</Reference>
      <!-- HasComponent -  - YesNoDataType ns=1;i=3056   -->
      <Reference ReferenceType='HasComponent'>ns=1;i=3056</Reference>
    </References>
    <Value>
      <ByteString xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <![CDATA[PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4KPHhzOnNj
aGVtYSB4bWxuczp4cz0naHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hl
bWEnIHhtbG5zOnVhPSdodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvMjAw
OC8wMi9UeXBlcy54c2QnIHhtbG5zOm10Yz0naHR0cDovL29wY2ZvdW5kYXRp
b24ub3JnL1VBL01UQ29ubmVjdC92Mi8vVHlwZXMueHNkJyB0YXJnZXROYW1l
c3BhY2U9J2h0dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NVENvbm5lY3Qv
djIvL1R5cGVzLnhzZCcgZWxlbWVudEZvcm1EZWZhdWx0PSdxdWFsaWZpZWQn
PgogIDx4czppbXBvcnQgbmFtZXNwYWNlPSdodHRwOi8vb3BjZm91bmRhdGlv
bi5vcmcvVUEvMjAwOC8wMi9UeXBlcy54c2QnLz4KICA8eHM6Y29tcGxleFR5
cGUgbmFtZT0nQXNzZXRFdmVudERhdGFUeXBlRGF0YVR5cGUnPgogICAgPHhz
OnNlcXVlbmNlPgogICAgICA8eHM6ZWxlbWVudCBuYW1lPSdBc3NldElkJyB0
eXBlPSd4czpzdHJpbmcnIG1pbk9jY3Vycz0nMScgbWF4T2NjdXJzPScxJy8+
CiAgICAgIDx4czplbGVtZW50IG5hbWU9J0Fzc2V0VHlwZScgdHlwZT0neHM6
c3RyaW5nJyBtaW5PY2N1cnM9JzEnIG1heE9jY3Vycz0nMScvPgogICAgPC94
czpzZXF1ZW5jZT4KICA8L3hzOmNvbXBsZXhUeXBlPgogIDx4czplbGVtZW50
IG5hbWU9J0Fzc2V0RXZlbnREYXRhVHlwZScgdHlwZT0nbXRjOkFzc2V0RXZl
bnREYXRhVHlwZURhdGFUeXBlJy8+CiAgPHhzOnNpbXBsZVR5cGUgbmFtZT0n
TVRDYXRlZ29yeVR5cGVFbnVtJz4KICAgIDx4czpyZXN0cmljdGlvbiBiYXNl
PSd4czpzdHJpbmcnPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J0VW
RU5UJy8+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nQ09ORElUSU9O
Jy8+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nU0FNUExFJy8+CiAg
ICA8L3hzOnJlc3RyaWN0aW9uPgogIDwveHM6c2ltcGxlVHlwZT4KICA8eHM6
ZWxlbWVudCBuYW1lPSdNVENhdGVnb3J5VHlwZScgdHlwZT0nbXRjOk1UQ2F0
ZWdvcnlUeXBlRW51bScvPgogIDx4czpzaW1wbGVUeXBlIG5hbWU9J01UQ29v
cmRpbmF0ZVN5c3RlbVR5cGVFbnVtJz4KICAgIDx4czpyZXN0cmljdGlvbiBi
YXNlPSd4czpzdHJpbmcnPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9
J01BQ0hJTkUnLz4KICAgICAgPHhzOmVudW1lcmF0aW9uIHZhbHVlPSdXT1JL
Jy8+CiAgICA8L3hzOnJlc3RyaWN0aW9uPgogIDwveHM6c2ltcGxlVHlwZT4K
ICA8eHM6ZWxlbWVudCBuYW1lPSdNVENvb3JkaW5hdGVTeXN0ZW1UeXBlJyB0
eXBlPSdtdGM6TVRDb29yZGluYXRlU3lzdGVtVHlwZUVudW0nLz4KICA8eHM6
c2ltcGxlVHlwZSBuYW1lPSdNVFJlcHJlc2VudGF0aW9uVHlwZUVudW0nPgog
ICAgPHhzOnJlc3RyaWN0aW9uIGJhc2U9J3hzOnN0cmluZyc+CiAgICAgIDx4
czplbnVtZXJhdGlvbiB2YWx1ZT0nRElTQ1JFVEUnLz4KICAgICAgPHhzOmVu
dW1lcmF0aW9uIHZhbHVlPSdUSU1FX1NFUklFUycvPgogICAgICA8eHM6ZW51
bWVyYXRpb24gdmFsdWU9J1ZBTFVFJy8+CiAgICA8L3hzOnJlc3RyaWN0aW9u
PgogIDwveHM6c2ltcGxlVHlwZT4KICA8eHM6ZWxlbWVudCBuYW1lPSdNVFJl
cHJlc2VudGF0aW9uVHlwZScgdHlwZT0nbXRjOk1UUmVwcmVzZW50YXRpb25U
eXBlRW51bScvPgogIDx4czpzaW1wbGVUeXBlIG5hbWU9J01UUmVzZXRUcmln
Z2VyVHlwZUVudW0nPgogICAgPHhzOnJlc3RyaWN0aW9uIGJhc2U9J3hzOnN0
cmluZyc+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nQUNUSU9OX0NP
TVBMRVRFJy8+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nQU5OVUFM
Jy8+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nREFZJy8+CiAgICAg
IDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nTUFJTlRFTkFOQ0UnLz4KICAgICAg
PHhzOmVudW1lcmF0aW9uIHZhbHVlPSdNQU5VQUwnLz4KICAgICAgPHhzOmVu
dW1lcmF0aW9uIHZhbHVlPSdNT05USCcvPgogICAgICA8eHM6ZW51bWVyYXRp
b24gdmFsdWU9J1BPV0VSX09OJy8+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2
YWx1ZT0nU0hJRlQnLz4KICAgICAgPHhzOmVudW1lcmF0aW9uIHZhbHVlPSdX
RUVLJy8+CiAgICA8L3hzOnJlc3RyaWN0aW9uPgogIDwveHM6c2ltcGxlVHlw
ZT4KICA8eHM6ZWxlbWVudCBuYW1lPSdNVFJlc2V0VHJpZ2dlclR5cGUnIHR5
cGU9J210YzpNVFJlc2V0VHJpZ2dlclR5cGVFbnVtJy8+CiAgPHhzOnNpbXBs
ZVR5cGUgbmFtZT0nTVRTdGF0aXN0aWNUeXBlRW51bSc+CiAgICA8eHM6cmVz
dHJpY3Rpb24gYmFzZT0neHM6c3RyaW5nJz4KICAgICAgPHhzOmVudW1lcmF0
aW9uIHZhbHVlPSdBVkVSQUdFJy8+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2
YWx1ZT0nTUFYSU1VTScvPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9
J01FRElBTicvPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J01JTklN
VU0nLz4KICAgICAgPHhzOmVudW1lcmF0aW9uIHZhbHVlPSdNT0RFJy8+CiAg
ICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nUkFOR0UnLz4KICAgICAgPHhz
OmVudW1lcmF0aW9uIHZhbHVlPSdST09UX01FQU5fU1FVQVJFJy8+CiAgICAg
IDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nU1RBTkRBUkRfREVWSUFUSU9OJy8+
CiAgICA8L3hzOnJlc3RyaWN0aW9uPgogIDwveHM6c2ltcGxlVHlwZT4KICA8
eHM6ZWxlbWVudCBuYW1lPSdNVFN0YXRpc3RpY1R5cGUnIHR5cGU9J210YzpN
VFN0YXRpc3RpY1R5cGVFbnVtJy8+CiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9
J01lc3NhZ2VEYXRhVHlwZURhdGFUeXBlJz4KICAgIDx4czpzZXF1ZW5jZT4K
ICAgICAgPHhzOmVsZW1lbnQgbmFtZT0nTmF0aXZlQ29kZScgdHlwZT0neHM6
c3RyaW5nJyBtaW5PY2N1cnM9JzEnIG1heE9jY3Vycz0nMScvPgogICAgICA8
eHM6ZWxlbWVudCBuYW1lPSdUZXh0JyB0eXBlPSd4czpzdHJpbmcnIG1pbk9j
Y3Vycz0nMScgbWF4T2NjdXJzPScxJy8+CiAgICA8L3hzOnNlcXVlbmNlPgog
IDwveHM6Y29tcGxleFR5cGU+CiAgPHhzOmVsZW1lbnQgbmFtZT0nTWVzc2Fn
ZURhdGFUeXBlJyB0eXBlPSdtdGM6TWVzc2FnZURhdGFUeXBlRGF0YVR5cGUn
Lz4KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0nVGhyZWVTcGFjZVNhbXBsZURh
dGFUeXBlRGF0YVR5cGUnPgogICAgPHhzOnNlcXVlbmNlPgogICAgICA8eHM6
ZWxlbWVudCBuYW1lPSdYJyB0eXBlPSd4czpmbG9hdCcgbWluT2NjdXJzPScx
JyBtYXhPY2N1cnM9JzEnLz4KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0nWScg
dHlwZT0neHM6ZmxvYXQnIG1pbk9jY3Vycz0nMScgbWF4T2NjdXJzPScxJy8+
CiAgICAgIDx4czplbGVtZW50IG5hbWU9J1onIHR5cGU9J3hzOmZsb2F0JyBt
aW5PY2N1cnM9JzEnIG1heE9jY3Vycz0nMScvPgogICAgPC94czpzZXF1ZW5j
ZT4KICA8L3hzOmNvbXBsZXhUeXBlPgogIDx4czplbGVtZW50IG5hbWU9J1Ro
cmVlU3BhY2VTYW1wbGVEYXRhVHlwZScgdHlwZT0nbXRjOlRocmVlU3BhY2VT
YW1wbGVEYXRhVHlwZURhdGFUeXBlJy8+CiAgPHhzOnNpbXBsZVR5cGUgbmFt
ZT0nTVRTZXZlcml0eURhdGFUeXBlRW51bSc+CiAgICA8eHM6cmVzdHJpY3Rp
b24gYmFzZT0neHM6c3RyaW5nJz4KICAgICAgPHhzOmVudW1lcmF0aW9uIHZh
bHVlPSdGQVVMVCcvPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J05P
Uk1BTCcvPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J1dBUk5JTkcn
Lz4KICAgIDwveHM6cmVzdHJpY3Rpb24+CiAgPC94czpzaW1wbGVUeXBlPgog
IDx4czplbGVtZW50IG5hbWU9J01UU2V2ZXJpdHlEYXRhVHlwZScgdHlwZT0n
bXRjOk1UU2V2ZXJpdHlEYXRhVHlwZUVudW0nLz4KICA8eHM6c2ltcGxlVHlw
ZSBuYW1lPSdRdWFsaWZpZXJEYXRhVHlwZUVudW0nPgogICAgPHhzOnJlc3Ry
aWN0aW9uIGJhc2U9J3hzOnN0cmluZyc+CiAgICAgIDx4czplbnVtZXJhdGlv
biB2YWx1ZT0nSElHSCcvPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9
J0xPVycvPgogICAgPC94czpyZXN0cmljdGlvbj4KICA8L3hzOnNpbXBsZVR5
cGU+CiAgPHhzOmVsZW1lbnQgbmFtZT0nUXVhbGlmaWVyRGF0YVR5cGUnIHR5
cGU9J210YzpRdWFsaWZpZXJEYXRhVHlwZUVudW0nLz4KICA8eHM6c2ltcGxl
VHlwZSBuYW1lPSdBY3RpdmVTdGF0ZURhdGFUeXBlRW51bSc+CiAgICA8eHM6
cmVzdHJpY3Rpb24gYmFzZT0neHM6c3RyaW5nJz4KICAgICAgPHhzOmVudW1l
cmF0aW9uIHZhbHVlPSdBQ1RJVkUnLz4KICAgICAgPHhzOmVudW1lcmF0aW9u
IHZhbHVlPSdJTkFDVElWRScvPgogICAgPC94czpyZXN0cmljdGlvbj4KICA8
L3hzOnNpbXBsZVR5cGU+CiAgPHhzOmVsZW1lbnQgbmFtZT0nQWN0aXZlU3Rh
dGVEYXRhVHlwZScgdHlwZT0nbXRjOkFjdGl2ZVN0YXRlRGF0YVR5cGVFbnVt
Jy8+CiAgPHhzOnNpbXBsZVR5cGUgbmFtZT0nQXZhaWxhYmlsaXR5RGF0YVR5
cGVFbnVtJz4KICAgIDx4czpyZXN0cmljdGlvbiBiYXNlPSd4czpzdHJpbmcn
PgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J0FWQUlMQUJMRScvPgog
ICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J1VOQVZBSUxBQkxFJy8+CiAg
ICA8L3hzOnJlc3RyaWN0aW9uPgogIDwveHM6c2ltcGxlVHlwZT4KICA8eHM6
ZWxlbWVudCBuYW1lPSdBdmFpbGFiaWxpdHlEYXRhVHlwZScgdHlwZT0nbXRj
OkF2YWlsYWJpbGl0eURhdGFUeXBlRW51bScvPgogIDx4czpzaW1wbGVUeXBl
IG5hbWU9J0F4aXNDb3VwbGluZ0RhdGFUeXBlRW51bSc+CiAgICA8eHM6cmVz
dHJpY3Rpb24gYmFzZT0neHM6c3RyaW5nJz4KICAgICAgPHhzOmVudW1lcmF0
aW9uIHZhbHVlPSdNQVNURVInLz4KICAgICAgPHhzOmVudW1lcmF0aW9uIHZh
bHVlPSdTTEFWRScvPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J1NZ
TkNIUk9OT1VTJy8+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nVEFO
REVNJy8+CiAgICA8L3hzOnJlc3RyaWN0aW9uPgogIDwveHM6c2ltcGxlVHlw
ZT4KICA8eHM6ZWxlbWVudCBuYW1lPSdBeGlzQ291cGxpbmdEYXRhVHlwZScg
dHlwZT0nbXRjOkF4aXNDb3VwbGluZ0RhdGFUeXBlRW51bScvPgogIDx4czpz
aW1wbGVUeXBlIG5hbWU9J0F4aXNTdGF0ZURhdGFUeXBlRW51bSc+CiAgICA8
eHM6cmVzdHJpY3Rpb24gYmFzZT0neHM6c3RyaW5nJz4KICAgICAgPHhzOmVu
dW1lcmF0aW9uIHZhbHVlPSdIT01FJy8+CiAgICAgIDx4czplbnVtZXJhdGlv
biB2YWx1ZT0nUEFSS0VEJy8+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1
ZT0nU1RPUFBFRCcvPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J1RS
QVZFTCcvPgogICAgPC94czpyZXN0cmljdGlvbj4KICA8L3hzOnNpbXBsZVR5
cGU+CiAgPHhzOmVsZW1lbnQgbmFtZT0nQXhpc1N0YXRlRGF0YVR5cGUnIHR5
cGU9J210YzpBeGlzU3RhdGVEYXRhVHlwZUVudW0nLz4KICA8eHM6c2ltcGxl
VHlwZSBuYW1lPSdDb21wb3NpdGlvblN0YXRlRGF0YVR5cGVFbnVtJz4KICAg
IDx4czpyZXN0cmljdGlvbiBiYXNlPSd4czpzdHJpbmcnPgogICAgICA8eHM6
ZW51bWVyYXRpb24gdmFsdWU9J0FDVElWRScvPgogICAgICA8eHM6ZW51bWVy
YXRpb24gdmFsdWU9J0NMT1NFRCcvPgogICAgICA8eHM6ZW51bWVyYXRpb24g
dmFsdWU9J0RPV04nLz4KICAgICAgPHhzOmVudW1lcmF0aW9uIHZhbHVlPSdJ
TkFDVElWRScvPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J0xFRlQn
Lz4KICAgICAgPHhzOmVudW1lcmF0aW9uIHZhbHVlPSdPRkYnLz4KICAgICAg
PHhzOmVudW1lcmF0aW9uIHZhbHVlPSdPTicvPgogICAgICA8eHM6ZW51bWVy
YXRpb24gdmFsdWU9J09QRU4nLz4KICAgICAgPHhzOmVudW1lcmF0aW9uIHZh
bHVlPSdSSUdIVCcvPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J1RS
QU5TSVRJT05JTkcnLz4KICAgICAgPHhzOmVudW1lcmF0aW9uIHZhbHVlPSdV
TkxBVENIRUQnLz4KICAgICAgPHhzOmVudW1lcmF0aW9uIHZhbHVlPSdVUCcv
PgogICAgPC94czpyZXN0cmljdGlvbj4KICA8L3hzOnNpbXBsZVR5cGU+CiAg
PHhzOmVsZW1lbnQgbmFtZT0nQ29tcG9zaXRpb25TdGF0ZURhdGFUeXBlJyB0
eXBlPSdtdGM6Q29tcG9zaXRpb25TdGF0ZURhdGFUeXBlRW51bScvPgogIDx4
czpzaW1wbGVUeXBlIG5hbWU9J0NvbnRyb2xsZXJNb2RlRGF0YVR5cGVFbnVt
Jz4KICAgIDx4czpyZXN0cmljdGlvbiBiYXNlPSd4czpzdHJpbmcnPgogICAg
ICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J0FVVE9NQVRJQycvPgogICAgICA8
eHM6ZW51bWVyYXRpb24gdmFsdWU9J0VESVQnLz4KICAgICAgPHhzOmVudW1l
cmF0aW9uIHZhbHVlPSdNQU5VQUwnLz4KICAgICAgPHhzOmVudW1lcmF0aW9u
IHZhbHVlPSdNQU5VQUxfREFUQV9JTlBVVCcvPgogICAgICA8eHM6ZW51bWVy
YXRpb24gdmFsdWU9J1NFTUlfQVVUT01BVElDJy8+CiAgICA8L3hzOnJlc3Ry
aWN0aW9uPgogIDwveHM6c2ltcGxlVHlwZT4KICA8eHM6ZWxlbWVudCBuYW1l
PSdDb250cm9sbGVyTW9kZURhdGFUeXBlJyB0eXBlPSdtdGM6Q29udHJvbGxl
ck1vZGVEYXRhVHlwZUVudW0nLz4KICA8eHM6c2ltcGxlVHlwZSBuYW1lPSdE
aXJlY3Rpb25EYXRhVHlwZUVudW0nPgogICAgPHhzOnJlc3RyaWN0aW9uIGJh
c2U9J3hzOnN0cmluZyc+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0n
Q0xPQ0tXSVNFJy8+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nQ09V
TlRFUl9DTE9DS1dJU0UnLz4KICAgICAgPHhzOmVudW1lcmF0aW9uIHZhbHVl
PSdORUdBVElWRScvPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J1BP
U0lUSVZFJy8+CiAgICA8L3hzOnJlc3RyaWN0aW9uPgogIDwveHM6c2ltcGxl
VHlwZT4KICA8eHM6ZWxlbWVudCBuYW1lPSdEaXJlY3Rpb25EYXRhVHlwZScg
dHlwZT0nbXRjOkRpcmVjdGlvbkRhdGFUeXBlRW51bScvPgogIDx4czpzaW1w
bGVUeXBlIG5hbWU9J0VtZXJnZW5jeVN0b3BEYXRhVHlwZUVudW0nPgogICAg
PHhzOnJlc3RyaWN0aW9uIGJhc2U9J3hzOnN0cmluZyc+CiAgICAgIDx4czpl
bnVtZXJhdGlvbiB2YWx1ZT0nQVJNRUQnLz4KICAgICAgPHhzOmVudW1lcmF0
aW9uIHZhbHVlPSdUUklHR0VSRUQnLz4KICAgIDwveHM6cmVzdHJpY3Rpb24+
CiAgPC94czpzaW1wbGVUeXBlPgogIDx4czplbGVtZW50IG5hbWU9J0VtZXJn
ZW5jeVN0b3BEYXRhVHlwZScgdHlwZT0nbXRjOkVtZXJnZW5jeVN0b3BEYXRh
VHlwZUVudW0nLz4KICA8eHM6c2ltcGxlVHlwZSBuYW1lPSdFeGVjdXRpb25E
YXRhVHlwZUVudW0nPgogICAgPHhzOnJlc3RyaWN0aW9uIGJhc2U9J3hzOnN0
cmluZyc+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nQUNUSVZFJy8+
CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nRkVFRF9IT0xEJy8+CiAg
ICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nSU5URVJSVVBURUQnLz4KICAg
ICAgPHhzOmVudW1lcmF0aW9uIHZhbHVlPSdPUFRJT05BTF9TVE9QJy8+CiAg
ICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nUkVBRFknLz4KICAgICAgPHhz
OmVudW1lcmF0aW9uIHZhbHVlPSdQUk9HUkFNX0NPTVBMRVRFRCcvPgogICAg
ICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J1BST0dSQU1fU1RPUFBFRCcvPgog
ICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J1NUT1BQRUQnLz4KICAgIDwv
eHM6cmVzdHJpY3Rpb24+CiAgPC94czpzaW1wbGVUeXBlPgogIDx4czplbGVt
ZW50IG5hbWU9J0V4ZWN1dGlvbkRhdGFUeXBlJyB0eXBlPSdtdGM6RXhlY3V0
aW9uRGF0YVR5cGVFbnVtJy8+CiAgPHhzOnNpbXBsZVR5cGUgbmFtZT0nRnVu
Y3Rpb25hbE1vZGVEYXRhVHlwZUVudW0nPgogICAgPHhzOnJlc3RyaWN0aW9u
IGJhc2U9J3hzOnN0cmluZyc+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1
ZT0nTUFJTlRFTkFOQ0UnLz4KICAgICAgPHhzOmVudW1lcmF0aW9uIHZhbHVl
PSdQUk9EVUNUSU9OJy8+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0n
UFJPQ0VTU19ERVZFTE9QTUVOVCcvPgogICAgICA8eHM6ZW51bWVyYXRpb24g
dmFsdWU9J1NFVFVQJy8+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0n
VEVBUkRPV04nLz4KICAgIDwveHM6cmVzdHJpY3Rpb24+CiAgPC94czpzaW1w
bGVUeXBlPgogIDx4czplbGVtZW50IG5hbWU9J0Z1bmN0aW9uYWxNb2RlRGF0
YVR5cGUnIHR5cGU9J210YzpGdW5jdGlvbmFsTW9kZURhdGFUeXBlRW51bScv
PgogIDx4czpzaW1wbGVUeXBlIG5hbWU9J0ludGVyZmFjZVN0YXRlRGF0YVR5
cGVFbnVtJz4KICAgIDx4czpyZXN0cmljdGlvbiBiYXNlPSd4czpzdHJpbmcn
PgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J0FDVElWRScvPgogICAg
ICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J0NPTVBMRVRFJy8+CiAgICAgIDx4
czplbnVtZXJhdGlvbiB2YWx1ZT0nRkFJTCcvPgogICAgICA8eHM6ZW51bWVy
YXRpb24gdmFsdWU9J05PVF9SRUFEWScvPgogICAgICA8eHM6ZW51bWVyYXRp
b24gdmFsdWU9J1JFQURZJy8+CiAgICA8L3hzOnJlc3RyaWN0aW9uPgogIDwv
eHM6c2ltcGxlVHlwZT4KICA8eHM6ZWxlbWVudCBuYW1lPSdJbnRlcmZhY2VT
dGF0ZURhdGFUeXBlJyB0eXBlPSdtdGM6SW50ZXJmYWNlU3RhdGVEYXRhVHlw
ZUVudW0nLz4KICA8eHM6c2ltcGxlVHlwZSBuYW1lPSdJbnRlcmZhY2VTdGF0
dXNEYXRhVHlwZUVudW0nPgogICAgPHhzOnJlc3RyaWN0aW9uIGJhc2U9J3hz
OnN0cmluZyc+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nRElTQUJM
RUQnLz4KICAgICAgPHhzOmVudW1lcmF0aW9uIHZhbHVlPSdFTkFCTEVEJy8+
CiAgICA8L3hzOnJlc3RyaWN0aW9uPgogIDwveHM6c2ltcGxlVHlwZT4KICA8
eHM6ZWxlbWVudCBuYW1lPSdJbnRlcmZhY2VTdGF0dXNEYXRhVHlwZScgdHlw
ZT0nbXRjOkludGVyZmFjZVN0YXR1c0RhdGFUeXBlRW51bScvPgogIDx4czpz
aW1wbGVUeXBlIG5hbWU9J09uT2ZmRGF0YVR5cGVFbnVtJz4KICAgIDx4czpy
ZXN0cmljdGlvbiBiYXNlPSd4czpzdHJpbmcnPgogICAgICA8eHM6ZW51bWVy
YXRpb24gdmFsdWU9J09GRicvPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFs
dWU9J09OJy8+CiAgICA8L3hzOnJlc3RyaWN0aW9uPgogIDwveHM6c2ltcGxl
VHlwZT4KICA8eHM6ZWxlbWVudCBuYW1lPSdPbk9mZkRhdGFUeXBlJyB0eXBl
PSdtdGM6T25PZmZEYXRhVHlwZUVudW0nLz4KICA8eHM6c2ltcGxlVHlwZSBu
YW1lPSdPcGVuU3RhdGVEYXRhVHlwZUVudW0nPgogICAgPHhzOnJlc3RyaWN0
aW9uIGJhc2U9J3hzOnN0cmluZyc+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2
YWx1ZT0nQ0xPU0VEJy8+CiAgICAgIDx4czplbnVtZXJhdGlvbiB2YWx1ZT0n
T1BFTicvPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J1VOTEFUQ0hF
RCcvPgogICAgPC94czpyZXN0cmljdGlvbj4KICA8L3hzOnNpbXBsZVR5cGU+
CiAgPHhzOmVsZW1lbnQgbmFtZT0nT3BlblN0YXRlRGF0YVR5cGUnIHR5cGU9
J210YzpPcGVuU3RhdGVEYXRhVHlwZUVudW0nLz4KICA8eHM6c2ltcGxlVHlw
ZSBuYW1lPSdQYXRoTW9kZURhdGFUeXBlRW51bSc+CiAgICA8eHM6cmVzdHJp
Y3Rpb24gYmFzZT0neHM6c3RyaW5nJz4KICAgICAgPHhzOmVudW1lcmF0aW9u
IHZhbHVlPSdJTkRFUEVOREVOVCcvPgogICAgICA8eHM6ZW51bWVyYXRpb24g
dmFsdWU9J01BU1RFUicvPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9
J01JUlJPUicvPgogICAgICA8eHM6ZW51bWVyYXRpb24gdmFsdWU9J1NZTkNI
Uk9OT1VTJy8+CiAgICA8L3hzOnJlc3RyaWN0aW9uPgogIDwveHM6c2ltcGxl
VHlwZT4KICA8eHM6ZWxlbWVudCBuYW1lPSdQYXRoTW9kZURhdGFUeXBlJyB0
eXBlPSdtdGM6UGF0aE1vZGVEYXRhVHlwZUVudW0nLz4KICA8eHM6c2ltcGxl
VHlwZSBuYW1lPSdQcm9ncmFtRWRpdERhdGFUeXBlRW51bSc+CiAgICA8eHM6
cmVzdHJpY3Rpb24gYmFzZT0neHM6c3RyaW5nJz4KICAgICAgPHhzOmVudW1l
cmF0aW9uIHZhbHVlPSdBQ1RJVkUnLz4KICAgICAgPHhzOmVudW1lcmF0aW9u
IHZhbHVlPSdOT1RfUkVBRFknLz4KICAgICAgPHhzOmVudW1lcmF0aW9uIHZh
bHVlPSdSRUFEWScvPgogICAgPC94czpyZXN0cmljdGlvbj4KICA8L3hzOnNp
bXBsZVR5cGU+CiAgPHhzOmVsZW1lbnQgbmFtZT0nUHJvZ3JhbUVkaXREYXRh
VHlwZScgdHlwZT0nbXRjOlByb2dyYW1FZGl0RGF0YVR5cGVFbnVtJy8+CiAg
PHhzOnNpbXBsZVR5cGUgbmFtZT0nUm90YXJ5TW9kZURhdGFUeXBlRW51bSc+
CiAgICA8eHM6cmVzdHJpY3Rpb24gYmFzZT0neHM6c3RyaW5nJz4KICAgICAg
PHhzOmVudW1lcmF0aW9uIHZhbHVlPSdDT05UT1VSJy8+CiAgICAgIDx4czpl
bnVtZXJhdGlvbiB2YWx1ZT0nSU5ERVgnLz4KICAgICAgPHhzOmVudW1lcmF0
aW9uIHZhbHVlPSdTUElORExFJy8+CiAgICA8L3hzOnJlc3RyaWN0aW9uPgog
IDwveHM6c2ltcGxlVHlwZT4KICA8eHM6ZWxlbWVudCBuYW1lPSdSb3RhcnlN
b2RlRGF0YVR5cGUnIHR5cGU9J210YzpSb3RhcnlNb2RlRGF0YVR5cGVFbnVt
Jy8+CiAgPHhzOnNpbXBsZVR5cGUgbmFtZT0nWWVzTm9EYXRhVHlwZUVudW0n
PgogICAgPHhzOnJlc3RyaWN0aW9uIGJhc2U9J3hzOnN0cmluZyc+CiAgICAg
IDx4czplbnVtZXJhdGlvbiB2YWx1ZT0nTk8nLz4KICAgICAgPHhzOmVudW1l
cmF0aW9uIHZhbHVlPSdZRVMnLz4KICAgIDwveHM6cmVzdHJpY3Rpb24+CiAg
PC94czpzaW1wbGVUeXBlPgogIDx4czplbGVtZW50IG5hbWU9J1llc05vRGF0
YVR5cGUnIHR5cGU9J210YzpZZXNOb0RhdGFUeXBlRW51bScvPgo8L3hzOnNj
aGVtYT4=
]]>
      </ByteString>
    </Value>
  </UAVariable>
  <!-- Opc.Ua.MTConnect(XML)::Deprecated : Boolean[1] -->
  <UAVariable NodeId='ns=1;i=2736' BrowseName='Deprecated' ValueRank='-1' DataType='Boolean' ParentNodeId='ns=1;i=2733'>
    <DisplayName>Deprecated</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - Boolean i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasProperty - (Reverse) - Opc.Ua.MTConnect(XML) ns=1;i=2733   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <Boolean xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>true</Boolean>
    </Value>
  </UAVariable>
  <!-- Opc.Ua.MTConnect(XML)::NamespaceUri : String[1] -->
  <UAVariable NodeId='ns=1;i=2735' BrowseName='NamespaceUri' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>NamespaceUri</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasProperty - (Reverse) - Opc.Ua.MTConnect(XML) ns=1;i=2733   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>http://opcfoundation.org/UA/MTConnect/v2/Types.xsd</String>
    </Value>
  </UAVariable>
  <!-- Definition of Object MTChannelType ns=1;i=2059 -->
  <UAObjectType NodeId='ns=1;i=2059' BrowseName='1:MTChannelType'>
    <DisplayName>MTChannelType</DisplayName>
    <Description>
      A Channel of a sensor. See ChannelType in type specifications. channel
      represents each sensing element connected to a sensor unit.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - BaseObjectType i=58   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=58</Reference>
      <!-- HasProperty -  - CalibrationDate ns=1;i=2063 UtcTime  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2063</Reference>
      <!-- HasProperty -  - CalibrationInitials ns=1;i=2065 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2065</Reference>
      <!-- HasProperty -  - MTDescription ns=1;i=2062 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2062</Reference>
      <!-- HasProperty -  - Name ns=1;i=2061 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2061</Reference>
      <!-- HasProperty -  - NextCalibrationDate ns=1;i=2064 UtcTime  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2064</Reference>
      <!-- HasProperty -  - Number ns=1;i=2060 Int32  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2060</Reference>
    </References>
  </UAObjectType>
  <!-- MTChannelType::CalibrationDate : UtcTime[0..1] -->
  <UAVariable NodeId='ns=1;i=2063' BrowseName='1:CalibrationDate' ValueRank='-1' DataType='i=294' ParentNodeId='ns=1;i=2059'>
    <DisplayName>CalibrationDate</DisplayName>
    <Description>
      A Channel of a sensor. See ChannelType in type specifications. channel
      represents each sensing element connected to a sensor unit.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - UtcTime i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTChannelType ns=1;i=2059   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2059</Reference>
    </References>
  </UAVariable>
  <!-- MTChannelType::CalibrationInitials : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2065' BrowseName='1:CalibrationInitials' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2059'>
    <DisplayName>CalibrationInitials</DisplayName>
    <Description>
      A Channel of a sensor. See ChannelType in type specifications. channel
      represents each sensing element connected to a sensor unit.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTChannelType ns=1;i=2059   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2059</Reference>
    </References>
  </UAVariable>
  <!-- MTChannelType::MTDescription : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2062' BrowseName='1:MTDescription' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2059'>
    <DisplayName>MTDescription</DisplayName>
    <Description>
      A Channel of a sensor. See ChannelType in type specifications. channel
      represents each sensing element connected to a sensor unit.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTChannelType ns=1;i=2059   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2059</Reference>
    </References>
  </UAVariable>
  <!-- MTChannelType::Name : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2061' BrowseName='1:Name' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2059'>
    <DisplayName>Name</DisplayName>
    <Description>
      A Channel of a sensor. See ChannelType in type specifications. channel
      represents each sensing element connected to a sensor unit.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTChannelType ns=1;i=2059   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2059</Reference>
    </References>
  </UAVariable>
  <!-- MTChannelType::NextCalibrationDate : UtcTime[0..1] -->
  <UAVariable NodeId='ns=1;i=2064' BrowseName='1:NextCalibrationDate' ValueRank='-1' DataType='i=294' ParentNodeId='ns=1;i=2059'>
    <DisplayName>NextCalibrationDate</DisplayName>
    <Description>
      A Channel of a sensor. See ChannelType in type specifications. channel
      represents each sensing element connected to a sensor unit.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - UtcTime i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTChannelType ns=1;i=2059   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2059</Reference>
    </References>
  </UAVariable>
  <!-- MTChannelType::Number : Int32[1] -->
  <UAVariable NodeId='ns=1;i=2060' BrowseName='1:Number' ValueRank='-1' DataType='Int32' ParentNodeId='ns=1;i=2059'>
    <DisplayName>Number</DisplayName>
    <Description>
      A Channel of a sensor. See ChannelType in type specifications. channel
      represents each sensing element connected to a sensor unit.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Int32 i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTChannelType ns=1;i=2059   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2059</Reference>
    </References>
  </UAVariable>
  <!-- Definition of Object MTComponentType ns=1;i=2021 -->
  <UAObjectType NodeId='ns=1;i=2021' BrowseName='1:MTComponentType' IsAbstract='true'>
    <DisplayName>MTComponentType</DisplayName>
    <Description>
      The base \gls{MTComponent} Type from which all MTConnect Components are
      derived. The component types will be created once for all
      \gls{MTComponent} \glspl{Object} of that type based on the \gls{QName} of
      the MTConnect XML element. The Component Objects will be created and
      inserted into the \mtmodel{Components} folder with a \gls{BrowseName} of
      the Component \gls{QName} and the \mtmodel{name} element if specified
      surrounded by square brackets, \texttt{[]}. For example if the MTConnect
      Element is: \xml{&lt;Linear name=&apos;X&apos;&gt;...&lt;/...&gt;} The OPC
      UA Object with \gls{BrowseName} \xml{Linear[X]} will be created with the
      \uamodel{HasTypeDefinition} referencing the \mtmodel{Linear} OPC UA
      \gls{Type}. The meta data for the component and its relationships are
      static. The dynamic data will be represented using the \cite{UAPart8}. An
      abstract XML element. Replaced in the XML document by types of component
      elements representing physical parts and logical functions of a piece of
      equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - BaseObjectType i=58   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=58</Reference>
      <!-- HasProperty -  - Name ns=1;i=2023 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2023</Reference>
      <!-- HasProperty -  - NativeName ns=1;i=2024 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2024</Reference>
      <!-- HasProperty -  - SampleInterval ns=1;i=2027 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2027</Reference>
      <!-- HasProperty -  - SampleRate ns=1;i=2026 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2026</Reference>
      <!-- HasProperty -  - Uuid ns=1;i=2025 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2025</Reference>
      <!-- HasProperty -  - XmlId ns=1;i=2022 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2022</Reference>
      <!-- HasComponent -  - Description ns=1;i=2028 MTDescriptionType  -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2028</Reference>
      <!-- HasComponent -  - Configuration ns=1;i=2029 MTConfigurationType  -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2029</Reference>
      <!-- Organizes -  - Compositions ns=1;i=2043 FolderType  -->
      <Reference ReferenceType='Organizes'>ns=1;i=2043</Reference>
      <!-- Organizes -  - Components ns=1;i=2042 FolderType  -->
      <Reference ReferenceType='Organizes'>ns=1;i=2042</Reference>
    </References>
  </UAObjectType>
  <!-- MTComponentType::Name : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2023' BrowseName='1:Name' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2021'>
    <DisplayName>Name</DisplayName>
    <Description>
      The base \gls{MTComponent} Type from which all MTConnect Components are
      derived. The component types will be created once for all
      \gls{MTComponent} \glspl{Object} of that type based on the \gls{QName} of
      the MTConnect XML element. The Component Objects will be created and
      inserted into the \mtmodel{Components} folder with a \gls{BrowseName} of
      the Component \gls{QName} and the \mtmodel{name} element if specified
      surrounded by square brackets, \texttt{[]}. For example if the MTConnect
      Element is: \xml{&lt;Linear name=&apos;X&apos;&gt;...&lt;/...&gt;} The OPC
      UA Object with \gls{BrowseName} \xml{Linear[X]} will be created with the
      \uamodel{HasTypeDefinition} referencing the \mtmodel{Linear} OPC UA
      \gls{Type}. The meta data for the component and its relationships are
      static. The dynamic data will be represented using the \cite{UAPart8}. An
      abstract XML element. Replaced in the XML document by types of component
      elements representing physical parts and logical functions of a piece of
      equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAVariable>
  <!-- MTComponentType::NativeName : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2024' BrowseName='1:NativeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2021'>
    <DisplayName>NativeName</DisplayName>
    <Description>
      The base \gls{MTComponent} Type from which all MTConnect Components are
      derived. The component types will be created once for all
      \gls{MTComponent} \glspl{Object} of that type based on the \gls{QName} of
      the MTConnect XML element. The Component Objects will be created and
      inserted into the \mtmodel{Components} folder with a \gls{BrowseName} of
      the Component \gls{QName} and the \mtmodel{name} element if specified
      surrounded by square brackets, \texttt{[]}. For example if the MTConnect
      Element is: \xml{&lt;Linear name=&apos;X&apos;&gt;...&lt;/...&gt;} The OPC
      UA Object with \gls{BrowseName} \xml{Linear[X]} will be created with the
      \uamodel{HasTypeDefinition} referencing the \mtmodel{Linear} OPC UA
      \gls{Type}. The meta data for the component and its relationships are
      static. The dynamic data will be represented using the \cite{UAPart8}. An
      abstract XML element. Replaced in the XML document by types of component
      elements representing physical parts and logical functions of a piece of
      equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAVariable>
  <!-- MTComponentType::SampleInterval : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2027' BrowseName='1:SampleInterval' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2021'>
    <DisplayName>SampleInterval</DisplayName>
    <Description>
      The base \gls{MTComponent} Type from which all MTConnect Components are
      derived. The component types will be created once for all
      \gls{MTComponent} \glspl{Object} of that type based on the \gls{QName} of
      the MTConnect XML element. The Component Objects will be created and
      inserted into the \mtmodel{Components} folder with a \gls{BrowseName} of
      the Component \gls{QName} and the \mtmodel{name} element if specified
      surrounded by square brackets, \texttt{[]}. For example if the MTConnect
      Element is: \xml{&lt;Linear name=&apos;X&apos;&gt;...&lt;/...&gt;} The OPC
      UA Object with \gls{BrowseName} \xml{Linear[X]} will be created with the
      \uamodel{HasTypeDefinition} referencing the \mtmodel{Linear} OPC UA
      \gls{Type}. The meta data for the component and its relationships are
      static. The dynamic data will be represented using the \cite{UAPart8}. An
      abstract XML element. Replaced in the XML document by types of component
      elements representing physical parts and logical functions of a piece of
      equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAVariable>
  <!-- MTComponentType::SampleRate : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2026' BrowseName='1:SampleRate' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2021'>
    <DisplayName>SampleRate</DisplayName>
    <Description>
      The base \gls{MTComponent} Type from which all MTConnect Components are
      derived. The component types will be created once for all
      \gls{MTComponent} \glspl{Object} of that type based on the \gls{QName} of
      the MTConnect XML element. The Component Objects will be created and
      inserted into the \mtmodel{Components} folder with a \gls{BrowseName} of
      the Component \gls{QName} and the \mtmodel{name} element if specified
      surrounded by square brackets, \texttt{[]}. For example if the MTConnect
      Element is: \xml{&lt;Linear name=&apos;X&apos;&gt;...&lt;/...&gt;} The OPC
      UA Object with \gls{BrowseName} \xml{Linear[X]} will be created with the
      \uamodel{HasTypeDefinition} referencing the \mtmodel{Linear} OPC UA
      \gls{Type}. The meta data for the component and its relationships are
      static. The dynamic data will be represented using the \cite{UAPart8}. An
      abstract XML element. Replaced in the XML document by types of component
      elements representing physical parts and logical functions of a piece of
      equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAVariable>
  <!-- MTComponentType::Uuid : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2025' BrowseName='1:Uuid' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2021'>
    <DisplayName>Uuid</DisplayName>
    <Description>
      The base \gls{MTComponent} Type from which all MTConnect Components are
      derived. The component types will be created once for all
      \gls{MTComponent} \glspl{Object} of that type based on the \gls{QName} of
      the MTConnect XML element. The Component Objects will be created and
      inserted into the \mtmodel{Components} folder with a \gls{BrowseName} of
      the Component \gls{QName} and the \mtmodel{name} element if specified
      surrounded by square brackets, \texttt{[]}. For example if the MTConnect
      Element is: \xml{&lt;Linear name=&apos;X&apos;&gt;...&lt;/...&gt;} The OPC
      UA Object with \gls{BrowseName} \xml{Linear[X]} will be created with the
      \uamodel{HasTypeDefinition} referencing the \mtmodel{Linear} OPC UA
      \gls{Type}. The meta data for the component and its relationships are
      static. The dynamic data will be represented using the \cite{UAPart8}. An
      abstract XML element. Replaced in the XML document by types of component
      elements representing physical parts and logical functions of a piece of
      equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAVariable>
  <!-- MTComponentType::XmlId : String[1] -->
  <UAVariable NodeId='ns=1;i=2022' BrowseName='1:XmlId' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2021'>
    <DisplayName>XmlId</DisplayName>
    <Description>
      The base \gls{MTComponent} Type from which all MTConnect Components are
      derived. The component types will be created once for all
      \gls{MTComponent} \glspl{Object} of that type based on the \gls{QName} of
      the MTConnect XML element. The Component Objects will be created and
      inserted into the \mtmodel{Components} folder with a \gls{BrowseName} of
      the Component \gls{QName} and the \mtmodel{name} element if specified
      surrounded by square brackets, \texttt{[]}. For example if the MTConnect
      Element is: \xml{&lt;Linear name=&apos;X&apos;&gt;...&lt;/...&gt;} The OPC
      UA Object with \gls{BrowseName} \xml{Linear[X]} will be created with the
      \uamodel{HasTypeDefinition} referencing the \mtmodel{Linear} OPC UA
      \gls{Type}. The meta data for the component and its relationships are
      static. The dynamic data will be represented using the \cite{UAPart8}. An
      abstract XML element. Replaced in the XML document by types of component
      elements representing physical parts and logical functions of a piece of
      equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAVariable>
  <!-- MTComponentType::Description : MTDescriptionType[0..1] -->
  <UAObject NodeId='ns=1;i=2028' BrowseName='1:Description' ParentNodeId='ns=1;i=2021'>
    <DisplayName>Description</DisplayName>
    <Description>
      The base \gls{MTComponent} Type from which all MTConnect Components are
      derived. The component types will be created once for all
      \gls{MTComponent} \glspl{Object} of that type based on the \gls{QName} of
      the MTConnect XML element. The Component Objects will be created and
      inserted into the \mtmodel{Components} folder with a \gls{BrowseName} of
      the Component \gls{QName} and the \mtmodel{name} element if specified
      surrounded by square brackets, \texttt{[]}. For example if the MTConnect
      Element is: \xml{&lt;Linear name=&apos;X&apos;&gt;...&lt;/...&gt;} The OPC
      UA Object with \gls{BrowseName} \xml{Linear[X]} will be created with the
      \uamodel{HasTypeDefinition} referencing the \mtmodel{Linear} OPC UA
      \gls{Type}. The meta data for the component and its relationships are
      static. The dynamic data will be represented using the \cite{UAPart8}. An
      abstract XML element. Replaced in the XML document by types of component
      elements representing physical parts and logical functions of a piece of
      equipment.
    </Description>
    <References>
      <!-- HasProperty -  - Data ns=1;i=2740 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2740</Reference>
      <!-- HasProperty -  - Manufacturer ns=1;i=2739 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2739</Reference>
      <!-- HasProperty -  - SerialNumber ns=1;i=2738 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2738</Reference>
      <!-- HasProperty -  - Station ns=1;i=2737 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2737</Reference>
      <!-- HasTypeDefinition -  - MTDescriptionType ns=1;i=2053   -->
      <Reference ReferenceType='HasTypeDefinition'>ns=1;i=2053</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasComponent - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAObject>
  <!-- Description::Data : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2740' BrowseName='1:Data' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2028'>
    <DisplayName>Data</DisplayName>
    <Description>
      An MTConnect Component Description. See the DescriptionType in the
      type-specifications. An XML element that can contain any descriptive
      content.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Description ns=1;i=2028   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2028</Reference>
    </References>
  </UAVariable>
  <!-- Description::Manufacturer : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2739' BrowseName='1:Manufacturer' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2028'>
    <DisplayName>Manufacturer</DisplayName>
    <Description>
      An MTConnect Component Description. See the DescriptionType in the
      type-specifications. An XML element that can contain any descriptive
      content.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Description ns=1;i=2028   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2028</Reference>
    </References>
  </UAVariable>
  <!-- Description::SerialNumber : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2738' BrowseName='1:SerialNumber' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2028'>
    <DisplayName>SerialNumber</DisplayName>
    <Description>
      An MTConnect Component Description. See the DescriptionType in the
      type-specifications. An XML element that can contain any descriptive
      content.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Description ns=1;i=2028   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2028</Reference>
    </References>
  </UAVariable>
  <!-- Description::Station : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2737' BrowseName='1:Station' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2028'>
    <DisplayName>Station</DisplayName>
    <Description>
      An MTConnect Component Description. See the DescriptionType in the
      type-specifications. An XML element that can contain any descriptive
      content.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Description ns=1;i=2028   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2028</Reference>
    </References>
  </UAVariable>
  <!-- MTComponentType::Configuration : MTConfigurationType[0..1] -->
  <UAObject NodeId='ns=1;i=2029' BrowseName='1:Configuration' ParentNodeId='ns=1;i=2021'>
    <DisplayName>Configuration</DisplayName>
    <Description>
      The base \gls{MTComponent} Type from which all MTConnect Components are
      derived. The component types will be created once for all
      \gls{MTComponent} \glspl{Object} of that type based on the \gls{QName} of
      the MTConnect XML element. The Component Objects will be created and
      inserted into the \mtmodel{Components} folder with a \gls{BrowseName} of
      the Component \gls{QName} and the \mtmodel{name} element if specified
      surrounded by square brackets, \texttt{[]}. For example if the MTConnect
      Element is: \xml{&lt;Linear name=&apos;X&apos;&gt;...&lt;/...&gt;} The OPC
      UA Object with \gls{BrowseName} \xml{Linear[X]} will be created with the
      \uamodel{HasTypeDefinition} referencing the \mtmodel{Linear} OPC UA
      \gls{Type}. The meta data for the component and its relationships are
      static. The dynamic data will be represented using the \cite{UAPart8}. An
      abstract XML element. Replaced in the XML document by types of component
      elements representing physical parts and logical functions of a piece of
      equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTConfigurationType ns=1;i=2044   -->
      <Reference ReferenceType='HasTypeDefinition'>ns=1;i=2044</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasComponent - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAObject>
  <!-- MTComponentType::Compositions : FolderType[0..*] -->
  <UAObject NodeId='ns=1;i=2043' BrowseName='1:Compositions' ParentNodeId='ns=1;i=2021'>
    <DisplayName>Compositions</DisplayName>
    <Description>
      The base \gls{MTComponent} Type from which all MTConnect Components are
      derived. The component types will be created once for all
      \gls{MTComponent} \glspl{Object} of that type based on the \gls{QName} of
      the MTConnect XML element. The Component Objects will be created and
      inserted into the \mtmodel{Components} folder with a \gls{BrowseName} of
      the Component \gls{QName} and the \mtmodel{name} element if specified
      surrounded by square brackets, \texttt{[]}. For example if the MTConnect
      Element is: \xml{&lt;Linear name=&apos;X&apos;&gt;...&lt;/...&gt;} The OPC
      UA Object with \gls{BrowseName} \xml{Linear[X]} will be created with the
      \uamodel{HasTypeDefinition} referencing the \mtmodel{Linear} OPC UA
      \gls{Type}. The meta data for the component and its relationships are
      static. The dynamic data will be represented using the \cite{UAPart8}. An
      abstract XML element. Replaced in the XML document by types of component
      elements representing physical parts and logical functions of a piece of
      equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - FolderType i=61   -->
      <Reference ReferenceType='HasTypeDefinition'>i=61</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- Organizes - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='Organizes' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAObject>
  <!-- MTComponentType::Components : FolderType[0..*] -->
  <UAObject NodeId='ns=1;i=2042' BrowseName='1:Components' ParentNodeId='ns=1;i=2021'>
    <DisplayName>Components</DisplayName>
    <Description>
      The base \gls{MTComponent} Type from which all MTConnect Components are
      derived. The component types will be created once for all
      \gls{MTComponent} \glspl{Object} of that type based on the \gls{QName} of
      the MTConnect XML element. The Component Objects will be created and
      inserted into the \mtmodel{Components} folder with a \gls{BrowseName} of
      the Component \gls{QName} and the \mtmodel{name} element if specified
      surrounded by square brackets, \texttt{[]}. For example if the MTConnect
      Element is: \xml{&lt;Linear name=&apos;X&apos;&gt;...&lt;/...&gt;} The OPC
      UA Object with \gls{BrowseName} \xml{Linear[X]} will be created with the
      \uamodel{HasTypeDefinition} referencing the \mtmodel{Linear} OPC UA
      \gls{Type}. The meta data for the component and its relationships are
      static. The dynamic data will be represented using the \cite{UAPart8}. An
      abstract XML element. Replaced in the XML document by types of component
      elements representing physical parts and logical functions of a piece of
      equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - FolderType i=61   -->
      <Reference ReferenceType='HasTypeDefinition'>i=61</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- Organizes - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='Organizes' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAObject>
  <!-- Definition of Object MTDeviceType ns=1;i=2015 -->
  <UAObjectType NodeId='ns=1;i=2015' BrowseName='1:MTDeviceType'>
    <DisplayName>MTDeviceType</DisplayName>
    <Description>
      See DeviceType.tex. The primary container element for each piece of
      equipment. device is organized within the devices container.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2021</Reference>
      <!-- HasProperty -  - Iso841Class ns=1;i=2017 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2017</Reference>
      <!-- HasProperty -  - Name ns=1;i=3668 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3668</Reference>
      <!-- HasProperty -  - Uuid ns=1;i=3669 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3669</Reference>
      <!-- HasProperty -  - Version ns=1;i=2016 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2016</Reference>
    </References>
  </UAObjectType>
  <!-- MTDeviceType::Iso841Class : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2017' BrowseName='1:Iso841Class' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2015'>
    <DisplayName>Iso841Class</DisplayName>
    <Description>
      See DeviceType.tex. The primary container element for each piece of
      equipment. device is organized within the devices container.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTDeviceType ns=1;i=2015   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2015</Reference>
    </References>
  </UAVariable>
  <!-- MTDeviceType::Name : String[1] -->
  <UAVariable NodeId='ns=1;i=3668' BrowseName='1:Name' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2015'>
    <DisplayName>Name</DisplayName>
    <Description>
      See DeviceType.tex. The primary container element for each piece of
      equipment. device is organized within the devices container.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTDeviceType ns=1;i=2015   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2015</Reference>
    </References>
  </UAVariable>
  <!-- MTDeviceType::Uuid : String[1] -->
  <UAVariable NodeId='ns=1;i=3669' BrowseName='1:Uuid' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2015'>
    <DisplayName>Uuid</DisplayName>
    <Description>
      See DeviceType.tex. The primary container element for each piece of
      equipment. device is organized within the devices container.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTDeviceType ns=1;i=2015   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2015</Reference>
    </References>
  </UAVariable>
  <!-- MTDeviceType::Version : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2016' BrowseName='1:Version' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2015'>
    <DisplayName>Version</DisplayName>
    <Description>
      See DeviceType.tex. The primary container element for each piece of
      equipment. device is organized within the devices container.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTDeviceType ns=1;i=2015   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2015</Reference>
    </References>
  </UAVariable>
  <!-- Definition of Object MTCompositionType ns=1;i=2067 -->
  <UAObjectType NodeId='ns=1;i=2067' BrowseName='1:MTCompositionType'>
    <DisplayName>MTCompositionType</DisplayName>
    <Description>
      The \mtmodel{MTCompositionType} represents all composition entities. The
      specification of how to form the \gls{BrowseName} is specified in
      Section~\ref{sec:browse-name-rules}. The data items are added to the
      relationship where the \gls{MTDataItem} to \gls{Composition} relationship
      is represented by the \gls{BrowseName} Composition property of the data
      item. The data items are added to the \gls{Composition} by their
      \glspl{BrowseName}. An XML element used to describe the lowest level
      structural building blocks contained within a component element.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - BaseObjectType i=58   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=58</Reference>
      <!-- HasProperty -  - MTTypeName ns=1;i=2069 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2069</Reference>
      <!-- HasProperty -  - Name ns=1;i=2071 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2071</Reference>
      <!-- HasProperty -  - Uuid ns=1;i=2070 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2070</Reference>
      <!-- HasProperty -  - XmlId ns=1;i=2068 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2068</Reference>
    </References>
  </UAObjectType>
  <!-- MTCompositionType::MTTypeName : String[1] -->
  <UAVariable NodeId='ns=1;i=2069' BrowseName='1:MTTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2067'>
    <DisplayName>MTTypeName</DisplayName>
    <Description>
      The \mtmodel{MTCompositionType} represents all composition entities. The
      specification of how to form the \gls{BrowseName} is specified in
      Section~\ref{sec:browse-name-rules}. The data items are added to the
      relationship where the \gls{MTDataItem} to \gls{Composition} relationship
      is represented by the \gls{BrowseName} Composition property of the data
      item. The data items are added to the \gls{Composition} by their
      \glspl{BrowseName}. An XML element used to describe the lowest level
      structural building blocks contained within a component element.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTCompositionType ns=1;i=2067   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2067</Reference>
    </References>
  </UAVariable>
  <!-- MTCompositionType::Name : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2071' BrowseName='1:Name' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2067'>
    <DisplayName>Name</DisplayName>
    <Description>
      The \mtmodel{MTCompositionType} represents all composition entities. The
      specification of how to form the \gls{BrowseName} is specified in
      Section~\ref{sec:browse-name-rules}. The data items are added to the
      relationship where the \gls{MTDataItem} to \gls{Composition} relationship
      is represented by the \gls{BrowseName} Composition property of the data
      item. The data items are added to the \gls{Composition} by their
      \glspl{BrowseName}. An XML element used to describe the lowest level
      structural building blocks contained within a component element.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTCompositionType ns=1;i=2067   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2067</Reference>
    </References>
  </UAVariable>
  <!-- MTCompositionType::Uuid : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2070' BrowseName='1:Uuid' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2067'>
    <DisplayName>Uuid</DisplayName>
    <Description>
      The \mtmodel{MTCompositionType} represents all composition entities. The
      specification of how to form the \gls{BrowseName} is specified in
      Section~\ref{sec:browse-name-rules}. The data items are added to the
      relationship where the \gls{MTDataItem} to \gls{Composition} relationship
      is represented by the \gls{BrowseName} Composition property of the data
      item. The data items are added to the \gls{Composition} by their
      \glspl{BrowseName}. An XML element used to describe the lowest level
      structural building blocks contained within a component element.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTCompositionType ns=1;i=2067   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2067</Reference>
    </References>
  </UAVariable>
  <!-- MTCompositionType::XmlId : String[1] -->
  <UAVariable NodeId='ns=1;i=2068' BrowseName='1:XmlId' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2067'>
    <DisplayName>XmlId</DisplayName>
    <Description>
      The \mtmodel{MTCompositionType} represents all composition entities. The
      specification of how to form the \gls{BrowseName} is specified in
      Section~\ref{sec:browse-name-rules}. The data items are added to the
      relationship where the \gls{MTDataItem} to \gls{Composition} relationship
      is represented by the \gls{BrowseName} Composition property of the data
      item. The data items are added to the \gls{Composition} by their
      \glspl{BrowseName}. An XML element used to describe the lowest level
      structural building blocks contained within a component element.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTCompositionType ns=1;i=2067   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2067</Reference>
    </References>
  </UAVariable>
  <!-- Definition of Object MTConfigurationType ns=1;i=2044 -->
  <UAObjectType NodeId='ns=1;i=2044' BrowseName='1:MTConfigurationType' IsAbstract='true'>
    <DisplayName>MTConfigurationType</DisplayName>
    <Description>
      The abstract \mtuatype{MTConfigurationType} currently has only one
      sub-type, \\ \mtuatype{MTSensorConfigurationType}. In the future, the
      configurations will also contain component and device configuration
      information as sub-types. An XML element that contains technical
      information about a piece of equipment describing its physical layout or
      functional characteristics.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - BaseObjectType i=58   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=58</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MTSensorConfigurationType ns=1;i=2046 -->
  <UAObjectType NodeId='ns=1;i=2046' BrowseName='1:MTSensorConfigurationType'>
    <DisplayName>MTSensorConfigurationType</DisplayName>
    <Description>
      An MTConnect Sensor Configuration associated with the Component. See
      SensorConfigurationType in type-specifications. An element that can
      contain descriptive content defining the configuration information for
      sensor.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTConfigurationType ns=1;i=2044   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2044</Reference>
      <!-- HasProperty -  - CalibrationDate ns=1;i=2048 UtcTime  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2048</Reference>
      <!-- HasProperty -  - CalibrationInitials ns=1;i=2050 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2050</Reference>
      <!-- HasProperty -  - FirwareVersion ns=1;i=2047 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2047</Reference>
      <!-- HasProperty -  - NextCalibrationDate ns=1;i=2049 UtcTime  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2049</Reference>
      <!-- Organizes -  - Channels ns=1;i=2052 FolderType  -->
      <Reference ReferenceType='Organizes'>ns=1;i=2052</Reference>
    </References>
  </UAObjectType>
  <!-- MTSensorConfigurationType::CalibrationDate : UtcTime[0..1] -->
  <UAVariable NodeId='ns=1;i=2048' BrowseName='1:CalibrationDate' ValueRank='-1' DataType='i=294' ParentNodeId='ns=1;i=2046'>
    <DisplayName>CalibrationDate</DisplayName>
    <Description>
      An MTConnect Sensor Configuration associated with the Component. See
      SensorConfigurationType in type-specifications. An element that can
      contain descriptive content defining the configuration information for
      sensor.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - UtcTime i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSensorConfigurationType ns=1;i=2046   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2046</Reference>
    </References>
  </UAVariable>
  <!-- MTSensorConfigurationType::CalibrationInitials : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2050' BrowseName='1:CalibrationInitials' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2046'>
    <DisplayName>CalibrationInitials</DisplayName>
    <Description>
      An MTConnect Sensor Configuration associated with the Component. See
      SensorConfigurationType in type-specifications. An element that can
      contain descriptive content defining the configuration information for
      sensor.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSensorConfigurationType ns=1;i=2046   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2046</Reference>
    </References>
  </UAVariable>
  <!-- MTSensorConfigurationType::FirwareVersion : String[1] -->
  <UAVariable NodeId='ns=1;i=2047' BrowseName='1:FirwareVersion' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2046'>
    <DisplayName>FirwareVersion</DisplayName>
    <Description>
      An MTConnect Sensor Configuration associated with the Component. See
      SensorConfigurationType in type-specifications. An element that can
      contain descriptive content defining the configuration information for
      sensor.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTSensorConfigurationType ns=1;i=2046   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2046</Reference>
    </References>
  </UAVariable>
  <!-- MTSensorConfigurationType::NextCalibrationDate : UtcTime[0..1] -->
  <UAVariable NodeId='ns=1;i=2049' BrowseName='1:NextCalibrationDate' ValueRank='-1' DataType='i=294' ParentNodeId='ns=1;i=2046'>
    <DisplayName>NextCalibrationDate</DisplayName>
    <Description>
      An MTConnect Sensor Configuration associated with the Component. See
      SensorConfigurationType in type-specifications. An element that can
      contain descriptive content defining the configuration information for
      sensor.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - UtcTime i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSensorConfigurationType ns=1;i=2046   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2046</Reference>
    </References>
  </UAVariable>
  <!-- MTSensorConfigurationType::Channels : FolderType[0..*] -->
  <UAObject NodeId='ns=1;i=2052' BrowseName='1:Channels' ParentNodeId='ns=1;i=2046'>
    <DisplayName>Channels</DisplayName>
    <Description>
      An MTConnect Sensor Configuration associated with the Component. See
      SensorConfigurationType in type-specifications. An element that can
      contain descriptive content defining the configuration information for
      sensor.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - FolderType i=61   -->
      <Reference ReferenceType='HasTypeDefinition'>i=61</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- Organizes - (Reverse) - MTSensorConfigurationType ns=1;i=2046   -->
      <Reference ReferenceType='Organizes' IsForward='false'>ns=1;i=2046</Reference>
    </References>
  </UAObject>
  <!-- Definition of Object MTDescriptionType ns=1;i=2053 -->
  <UAObjectType NodeId='ns=1;i=2053' BrowseName='1:MTDescriptionType'>
    <DisplayName>MTDescriptionType</DisplayName>
    <Description>
      An MTConnect Component Description. See the DescriptionType in the
      type-specifications. An XML element that can contain any descriptive
      content.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - BaseObjectType i=58   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=58</Reference>
      <!-- HasProperty -  - Data ns=1;i=2057 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2057</Reference>
      <!-- HasProperty -  - Manufacturer ns=1;i=2056 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2056</Reference>
      <!-- HasProperty -  - SerialNumber ns=1;i=2055 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2055</Reference>
      <!-- HasProperty -  - Station ns=1;i=2054 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2054</Reference>
    </References>
  </UAObjectType>
  <!-- MTDescriptionType::Data : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2057' BrowseName='1:Data' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2053'>
    <DisplayName>Data</DisplayName>
    <Description>
      An MTConnect Component Description. See the DescriptionType in the
      type-specifications. An XML element that can contain any descriptive
      content.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTDescriptionType ns=1;i=2053   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2053</Reference>
    </References>
  </UAVariable>
  <!-- MTDescriptionType::Manufacturer : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2056' BrowseName='1:Manufacturer' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2053'>
    <DisplayName>Manufacturer</DisplayName>
    <Description>
      An MTConnect Component Description. See the DescriptionType in the
      type-specifications. An XML element that can contain any descriptive
      content.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTDescriptionType ns=1;i=2053   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2053</Reference>
    </References>
  </UAVariable>
  <!-- MTDescriptionType::SerialNumber : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2055' BrowseName='1:SerialNumber' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2053'>
    <DisplayName>SerialNumber</DisplayName>
    <Description>
      An MTConnect Component Description. See the DescriptionType in the
      type-specifications. An XML element that can contain any descriptive
      content.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTDescriptionType ns=1;i=2053   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2053</Reference>
    </References>
  </UAVariable>
  <!-- MTDescriptionType::Station : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2054' BrowseName='1:Station' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2053'>
    <DisplayName>Station</DisplayName>
    <Description>
      An MTConnect Component Description. See the DescriptionType in the
      type-specifications. An XML element that can contain any descriptive
      content.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTDescriptionType ns=1;i=2053   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2053</Reference>
    </References>
  </UAVariable>
  <!-- Definition of Object ActuatorType ns=1;i=2074 -->
  <UAObjectType NodeId='ns=1;i=2074' BrowseName='1:ActuatorType'>
    <DisplayName>ActuatorType</DisplayName>
    <Description>
      the information for an apparatus for moving or controlling a mechanism or
      system Redefined as a piece of equipment with the ability to be
      represented as a lower level component of a parent component element or as
      a composition element. See actuator type
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AuxiliariesType ns=1;i=2076 -->
  <UAObjectType NodeId='ns=1;i=2076' BrowseName='1:AuxiliariesType'>
    <DisplayName>AuxiliariesType</DisplayName>
    <Description>
       p {padding:0px; margin:0px;} &amp;#160; An XML container used to organize
      information for lower level elements representing functional sub-systems
      that provide supplementary or extended capabilities for a piece of
      equipment, but they are not required for the basic operation of the
      equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object BarFeederType ns=1;i=2082 -->
  <UAObjectType NodeId='ns=1;i=2082' BrowseName='1:BarFeederType'>
    <DisplayName>BarFeederType</DisplayName>
    <Description>
      a unit involved in delivering bar stock to a piece of equipment. barfeeder
      is an XML container that represents the information for a unit involved in
      delivering bar stock to a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - AuxiliariesType ns=1;i=2076   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2076</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object EnvironmentalType ns=1;i=2102 -->
  <UAObjectType NodeId='ns=1;i=2102' BrowseName='1:EnvironmentalType'>
    <DisplayName>EnvironmentalType</DisplayName>
    <Description>
      the information for a unit or function involved in monitoring, managing,
      or conditioning the environment around or within a piece of equipment.
      environmental is an XML container that represents the information for a
      unit or function involved in monitoring, managing, or conditioning the
      environment around or within a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - AuxiliariesType ns=1;i=2076   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2076</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LoaderType ns=1;i=2112 -->
  <UAObjectType NodeId='ns=1;i=2112' BrowseName='1:LoaderType'>
    <DisplayName>LoaderType</DisplayName>
    <Description>
      the information for a unit comprised of all the parts involved in moving
      and distributing materials, parts, tooling, and other items to or from a
      piece of equipment loader is an XML container that represents the
      information for a unit comprised of all the parts involved in moving and
      distributing materials, parts, tooling, and other items to or from a piece
      of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - AuxiliariesType ns=1;i=2076   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2076</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object SensorType ns=1;i=2134 -->
  <UAObjectType NodeId='ns=1;i=2134' BrowseName='1:SensorType'>
    <DisplayName>SensorType</DisplayName>
    <Description>
      the information for a piece of equipment that responds to a physical
      stimulus and transmits a resulting impulse or value from a sensing unit
      The sensor unit is modeled as a lower level component called sensor.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - AuxiliariesType ns=1;i=2076   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2076</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ToolingDeliveryType ns=1;i=2140 -->
  <UAObjectType NodeId='ns=1;i=2140' BrowseName='1:ToolingDeliveryType'>
    <DisplayName>ToolingDeliveryType</DisplayName>
    <Description>
      a unit involved in managing, positioning, storing, and delivering tooling
      within a piece of equipment. toolingdelivery is an XML container that
      represents the information for a unit involved in managing, positioning,
      storing, and delivering tooling within a piece of equipment. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - AuxiliariesType ns=1;i=2076   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2076</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object WasteDisposalType ns=1;i=2142 -->
  <UAObjectType NodeId='ns=1;i=2142' BrowseName='1:WasteDisposalType'>
    <DisplayName>WasteDisposalType</DisplayName>
    <Description>
      the information for a unit comprised of all the parts involved in removing
      manufacturing byproducts from a piece of equipment wastedisposal is an XML
      container that represents the information for a unit comprised of all the
      parts involved in removing manufacturing byproducts from a piece of
      equipment. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - AuxiliariesType ns=1;i=2076   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2076</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AxesType ns=1;i=2078 -->
  <UAObjectType NodeId='ns=1;i=2078' BrowseName='1:AxesType'>
    <DisplayName>AxesType</DisplayName>
    <Description>
      Organizes parts of the device that perform linear or rotational motion An
      XML container used to organize the structural element of a piece of
      equipment that perform linear or rotational motion.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LinearType ns=1;i=2110 -->
  <UAObjectType NodeId='ns=1;i=2110' BrowseName='1:LinearType'>
    <DisplayName>LinearType</DisplayName>
    <Description>
      the movement of a physical piece of equipment, or a portion of the
      equipment, in a straight line. A linear axis represents the movement of a
      physical piece of equipment, or a portion of the equipment, in a straight
      line. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - AxesType ns=1;i=2078   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2078</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object RotaryType ns=1;i=2132 -->
  <UAObjectType NodeId='ns=1;i=2132' BrowseName='1:RotaryType'>
    <DisplayName>RotaryType</DisplayName>
    <Description>
      rotary movement of a physical piece of equipment or a portion of the
      equipment. A rotary axis represents any non-linear or rotary movement of a
      physical piece of equipment or a portion of the equipment. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - AxesType ns=1;i=2078   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2078</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ChuckType ns=1;i=2086 -->
  <UAObjectType NodeId='ns=1;i=2086' BrowseName='1:ChuckType'>
    <DisplayName>ChuckType</DisplayName>
    <Description>
      provides the information about a mechanism that holds a part or stock
      material in place Chuck is an XML container that provides the information
      about a mechanism that holds a part or stock material in place.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - RotaryType ns=1;i=2132   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2132</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ControllerType ns=1;i=2088 -->
  <UAObjectType NodeId='ns=1;i=2088' BrowseName='1:ControllerType'>
    <DisplayName>ControllerType</DisplayName>
    <Description>
      intelligent or computational function within a piece of equipment An XML
      container used to organize information about an intelligent or
      computational function within a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PathType ns=1;i=2120 -->
  <UAObjectType NodeId='ns=1;i=2120' BrowseName='1:PathType'>
    <DisplayName>PathType</DisplayName>
    <Description>
      information for an independent operation or function within a
      \mtuatype{ControllerType} path is an XML container that represents the
      information for an independent operation or function within a controller.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - ControllerType ns=1;i=2088   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2088</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object DoorType ns=1;i=2096 -->
  <UAObjectType NodeId='ns=1;i=2096' BrowseName='1:DoorType'>
    <DisplayName>DoorType</DisplayName>
    <Description>
      the information for a mechanical mechanism or closure that can cover, for
      example, a physical access portal into a piece of equipment door component
      is an XML container that represents the information for a mechanical
      mechanism or closure that can cover.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object InterfacesType ns=1;i=2108 -->
  <UAObjectType NodeId='ns=1;i=2108' BrowseName='1:InterfacesType'>
    <DisplayName>InterfacesType</DisplayName>
    <Description>
       An XML container that organizes information used to coordinate actions
      and activities between pieces of equipment that communicate information
      between each other. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object BarFeederInterfaceType ns=1;i=2080 -->
  <UAObjectType NodeId='ns=1;i=2080' BrowseName='1:BarFeederInterfaceType'>
    <DisplayName>BarFeederInterfaceType</DisplayName>
    <Description>
      information used to coordinate the operations between a Bar Feeder and
      another piece of equipment barfeederinterface provides the set of
      information used to coordinate the operations between a Bar Feeder and
      another piece of equipment. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - InterfacesType ns=1;i=2108   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2108</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ChuckInterfaceType ns=1;i=2084 -->
  <UAObjectType NodeId='ns=1;i=2084' BrowseName='1:ChuckInterfaceType'>
    <DisplayName>ChuckInterfaceType</DisplayName>
    <Description>
      information used to coordinate the operations between two pieces of
      equipment, one of which controls the operation of a chuck chuckinterface
      provides the set of information used to coordinate the operations between
      two pieces of equipment, one of which controls the operation of a chuck. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - InterfacesType ns=1;i=2108   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2108</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object DoorInterfaceType ns=1;i=2094 -->
  <UAObjectType NodeId='ns=1;i=2094' BrowseName='1:DoorInterfaceType'>
    <DisplayName>DoorInterfaceType</DisplayName>
    <Description>
      information used to coordinate the operations between two pieces of
      equipment, one of which controls the operation of a door doorinterface
      provides the set of information used to coordinate the operations between
      two pieces of equipment, one of which controls the operation of a door. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - InterfacesType ns=1;i=2108   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2108</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MaterialHandlerInterfaceType ns=1;i=2116 -->
  <UAObjectType NodeId='ns=1;i=2116' BrowseName='1:MaterialHandlerInterfaceType'>
    <DisplayName>MaterialHandlerInterfaceType</DisplayName>
    <Description>
      set of information used to coordinate the operations between a piece of
      equipment and another associated piece of equipment used to automatically
      handle various types of materials or services associated with the original
      piece of equipment materialhandlerinterface provides the set of
      information used to coordinate the operations between a piece of equipment
      and another associated piece of equipment used to automatically handle
      various types of materials or services associated with the original piece
      of equipment. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - InterfacesType ns=1;i=2108   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2108</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ResourcesType ns=1;i=2130 -->
  <UAObjectType NodeId='ns=1;i=2130' BrowseName='1:ResourcesType'>
    <DisplayName>ResourcesType</DisplayName>
    <Description>
       An XML container used to organize information for lower level elements
      representing types of items, materials, and personnel that support the
      operation of a piece of equipment or work to be performed at a location.
      resources also represents materials or other items consumed or transformed
      by a piece of equipment for production of parts or other types of goods.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MaterialsType ns=1;i=2118 -->
  <UAObjectType NodeId='ns=1;i=2118' BrowseName='1:MaterialsType'>
    <DisplayName>MaterialsType</DisplayName>
    <Description>
      information about materials or other items consumed or used by the piece
      of equipment for production of parts, materials, or other types of goods
      materials is an XML container that provides information about materials or
      other items consumed or used by the piece of equipment for production of
      parts, materials, or other types of goods.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - ResourcesType ns=1;i=2130   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2130</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object StockType ns=1;i=2136 -->
  <UAObjectType NodeId='ns=1;i=2136' BrowseName='1:StockType'>
    <DisplayName>StockType</DisplayName>
    <Description>
      the information for the material that is used in a manufacturing process
      and to which work is applied in a machine or piece of equipment to produce
      parts. stock is an XML container that represents the information for the
      material that is used in a manufacturing process and to which work is
      applied in a machine or piece of equipment to produce parts.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MaterialsType ns=1;i=2118   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2118</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PersonnelType ns=1;i=2122 -->
  <UAObjectType NodeId='ns=1;i=2122' BrowseName='1:PersonnelType'>
    <DisplayName>PersonnelType</DisplayName>
    <Description>
       personnel is an XML container that provides information about an
      individual or individuals who either control, support, or otherwise
      interface with a piece of equipment. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - ResourcesType ns=1;i=2130   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2130</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object SystemsType ns=1;i=2138 -->
  <UAObjectType NodeId='ns=1;i=2138' BrowseName='1:SystemsType'>
    <DisplayName>SystemsType</DisplayName>
    <Description>
      major sub-systems that are permanently integrated into a piece of
      equipment An XML container used to organize information for lower level
      elements representing the major sub-systems that are permanently
      integrated into a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTComponentType ns=1;i=2021   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2021</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object CoolantType ns=1;i=2090 -->
  <UAObjectType NodeId='ns=1;i=2090' BrowseName='1:CoolantType'>
    <DisplayName>CoolantType</DisplayName>
    <Description>
      a system comprised of all the parts involved in distribution and
      management of fluids that remove heat from a piece of equipment. coolant
      is an XML container that represents the information for a system comprised
      of all the parts involved in distribution and management of fluids that
      remove heat from a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - SystemsType ns=1;i=2138   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2138</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object DielectricType ns=1;i=2092 -->
  <UAObjectType NodeId='ns=1;i=2092' BrowseName='1:DielectricType'>
    <DisplayName>DielectricType</DisplayName>
    <Description>
      a system that manages a chemical mixture used in a manufacturing process
      being performed at that piece of equipment. dielectric is an XML container
      that represents the information for a system that manages a chemical
      mixture used in a manufacturing process being performed at that piece of
      equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - SystemsType ns=1;i=2138   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2138</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ElectricType ns=1;i=2098 -->
  <UAObjectType NodeId='ns=1;i=2098' BrowseName='1:ElectricType'>
    <DisplayName>ElectricType</DisplayName>
    <Description>
      represents the information for the main power supply for device piece of
      equipment and the distribution of that power throughout the equipment.
      electric is an XML container that represents the information for the main
      power supply for device piece of equipment and the distribution of that
      power throughout the equipment. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - SystemsType ns=1;i=2138   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2138</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object EnclosureType ns=1;i=2100 -->
  <UAObjectType NodeId='ns=1;i=2100' BrowseName='1:EnclosureType'>
    <DisplayName>EnclosureType</DisplayName>
    <Description>
      a structure used to contain or isolate a piece of equipment or area.
      enclosure is an XML container that represents the information for a
      structure used to contain or isolate a piece of equipment or area.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - SystemsType ns=1;i=2138   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2138</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object FeederType ns=1;i=2104 -->
  <UAObjectType NodeId='ns=1;i=2104' BrowseName='1:FeederType'>
    <DisplayName>FeederType</DisplayName>
    <Description>
      the information for a system that manages the delivery of materials within
      a piece of equipment. feeder is an XML container that represents the
      information for a system that manages the delivery of materials within a
      piece of equipment. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - SystemsType ns=1;i=2138   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2138</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object HydraulicType ns=1;i=2106 -->
  <UAObjectType NodeId='ns=1;i=2106' BrowseName='1:HydraulicType'>
    <DisplayName>HydraulicType</DisplayName>
    <Description>
      system comprised of all the parts involved in moving and distributing
      pressurized liquid throughout the piece of equipment. hydraulic is an XML
      container that represents the information for a system comprised of all
      the parts involved in moving and distributing pressurized liquid
      throughout the piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - SystemsType ns=1;i=2138   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2138</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LubricationType ns=1;i=2114 -->
  <UAObjectType NodeId='ns=1;i=2114' BrowseName='1:LubricationType'>
    <DisplayName>LubricationType</DisplayName>
    <Description>
      a system comprised of all the parts involved in distribution and
      management of fluids used to lubricate portions of the piece of equipment.
      lubrication is an XML container that represents the information for a
      system comprised of all the parts involved in distribution and management
      of fluids used to lubricate portions of the piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - SystemsType ns=1;i=2138   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2138</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PneumaticType ns=1;i=2124 -->
  <UAObjectType NodeId='ns=1;i=2124' BrowseName='1:PneumaticType'>
    <DisplayName>PneumaticType</DisplayName>
    <Description>
      a system comprised of all the parts involved in moving and distributing
      pressurized gas throughout the piece of equipment. pneumatic is an XML
      container that represents the information for a system comprised of all
      the parts involved in moving and distributing pressurized gas throughout
      the piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - SystemsType ns=1;i=2138   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2138</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ProcessPowerType ns=1;i=2126 -->
  <UAObjectType NodeId='ns=1;i=2126' BrowseName='1:ProcessPowerType'>
    <DisplayName>ProcessPowerType</DisplayName>
    <Description>
      the information for a power source associated with a piece of equipment
      that supplies energy to the manufacturing process separate from the
      Electric system processpower is an XML container that represents the
      information for a power source associated with a piece of equipment that
      supplies energy to the manufacturing process separate from the electric
      system.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - SystemsType ns=1;i=2138   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2138</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ProtectiveType ns=1;i=2128 -->
  <UAObjectType NodeId='ns=1;i=2128' BrowseName='1:ProtectiveType'>
    <DisplayName>ProtectiveType</DisplayName>
    <Description>
      the information for those functions that detect or prevent harm or damage
      to equipment or personnel. Protective is an XML container that represents
      the information for those functions that detect or prevent harm or damage
      to equipment or personnel.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - SystemsType ns=1;i=2138   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2138</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of DataType AssetEventDataType ns=1;i=2618 -->
  <UADataType NodeId='ns=1;i=2618' BrowseName='1:AssetEventDataType'>
    <DisplayName>AssetEventDataType</DisplayName>
    <Description>
      A special \gls{Variable} data type for asset change with a
      \mtmodel{AssetType} and \mtmodel{AssetId}.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - BaseDataType Structure   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>Structure</Reference>
    </References>
    <Description>
      A special \gls{Variable} data type for asset change with a
      \mtmodel{AssetType} and \mtmodel{AssetId}.
    </Description>
    <Definition Name='AssetEventDataType'>
      <Field Name='AssetId' DataType='String'>
        <Description>
           The unique identifier for the mtconnect asset. The identifier MUST be
          unique with respect to all other asset in an MTConnect installation.
          The identifier SHOULD be globally unique with respect to all other
          asset.
        </Description>
      </Field>
      <Field Name='AssetType' DataType='String'>
        <Description> The type of asset that was updated.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- Default Binary encoding of AssetEventDataType -->
  <UAObject NodeId='ns=1;i=2745' BrowseName='Default Binary'>
    <DisplayName>Default Binary</DisplayName>
    <Description>
      A special \gls{Variable} data type for asset change with a
      \mtmodel{AssetType} and \mtmodel{AssetId}.
    </Description>
    <References>
      <!-- HasEncoding - (Reverse) - AssetEventDataType ns=1;i=2618   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2618</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2746   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2746</Reference>
    </References>
  </UAObject>
  <!-- Binary DataTypeDescription for AssetEventDataType -->
  <UAVariable NodeId='ns=1;i=2746' BrowseName='1:AssetEventDataType' DataType='String' ParentNodeId='ns=1;i=2729'>
    <DisplayName>AssetEventDataType</DisplayName>
    <Description>
      A special \gls{Variable} data type for asset change with a
      \mtmodel{AssetType} and \mtmodel{AssetId}.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasProperty -  - DictionaryFragment ns=1;i=2747   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2747</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2729   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2729</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>AssetEventDataType</String>
    </Value>
  </UAVariable>
  <!-- DictionaryFragment for AssetEventDataType -->
  <UAVariable NodeId='ns=1;i=2747' BrowseName='1:DictionaryFragment' DataType='ByteString' ParentNodeId='ns=1;i=2746'>
    <DisplayName>DictionaryFragment</DisplayName>
    <Description>
      A special \gls{Variable} data type for asset change with a
      \mtmodel{AssetType} and \mtmodel{AssetId}.
    </Description>
    <References>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2746   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2746</Reference>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
    </References>
    <Value>
      <ByteString xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <![CDATA[PG9wYzpTdHJ1Y3R1cmVkVHlwZSBOYW1lPSdBc3NldEV2ZW50RGF0YVR5cGUn
IEJhc2VUeXBlPSd1YTpFeHRlbnNpb25PYmplY3QnPgogIDxvcGM6RG9jdW1l
bnRhdGlvbj5UaGUgZW5jb2RpbmcgZm9yIEFzc2V0RXZlbnREYXRhVHlwZTwv
b3BjOkRvY3VtZW50YXRpb24+CiAgPG9wYzpGaWVsZCBOYW1lPSdBc3NldElk
JyBUeXBlTmFtZT0nb3BjOlN0cmluZycvPgogIDxvcGM6RmllbGQgTmFtZT0n
QXNzZXRUeXBlJyBUeXBlTmFtZT0nb3BjOlN0cmluZycvPgo8L29wYzpTdHJ1
Y3R1cmVkVHlwZT4=
]]>
      </ByteString>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of AssetEventDataType -->
  <UAObject NodeId='ns=1;i=2748' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <Description>
      A special \gls{Variable} data type for asset change with a
      \mtmodel{AssetType} and \mtmodel{AssetId}.
    </Description>
    <References>
      <!-- HasEncoding - (Reverse) - AssetEventDataType ns=1;i=2618   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2618</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2749   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2749</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for AssetEventDataType -->
  <UAVariable NodeId='ns=1;i=2749' BrowseName='1:AssetEventDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>AssetEventDataType</DisplayName>
    <Description>
      A special \gls{Variable} data type for asset change with a
      \mtmodel{AssetType} and \mtmodel{AssetId}.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;AssetEventDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Default JSON encoding of AssetEventDataType -->
  <UAObject NodeId='ns=1;i=2750' BrowseName='Default JSON'>
    <DisplayName>Default JSON</DisplayName>
    <Description>
      A special \gls{Variable} data type for asset change with a
      \mtmodel{AssetType} and \mtmodel{AssetId}.
    </Description>
    <References>
      <!-- HasEncoding - (Reverse) - AssetEventDataType ns=1;i=2618   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2618</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
    </References>
  </UAObject>
  <!-- Definition of Variable MTAssetEventType ns=1;i=2621 -->
  <UAVariableType NodeId='ns=1;i=2621' BrowseName='1:MTAssetEventType' ValueRank='-1' DataType='ns=1;i=2618'>
    <DisplayName>MTAssetEventType</DisplayName>
    <Description>
      The asset events have an additional attribute regarding the asset change
      or removal identifier and the type of asset that is being reported.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - BaseDataVariableType i=63   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=63</Reference>
      <!-- HasProperty -  - Category ns=1;i=2753 MTCategoryType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2753</Reference>
      <!-- HasProperty -  - MTSubTypeName ns=1;i=2755 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2755</Reference>
      <!-- HasProperty -  - MTTypeName ns=1;i=2754 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2754</Reference>
      <!-- HasProperty -  - Name ns=1;i=2752 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2752</Reference>
      <!-- HasProperty -  - PeriodFilter ns=1;i=2759 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2759</Reference>
      <!-- HasProperty -  - Representation ns=1;i=2758 MTRepresentationType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2758</Reference>
      <!-- HasProperty -  - SampleRate ns=1;i=2757 Double  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2757</Reference>
      <!-- HasProperty -  - SourceData ns=1;i=2756 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2756</Reference>
      <!-- HasProperty -  - XmlId ns=1;i=2751 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2751</Reference>
      <!-- HasComponent -  - Constraints ns=1;i=2760 MTConstraintType  -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2760</Reference>
    </References>
  </UAVariableType>
  <!-- MTAssetEventType::Category : MTCategoryType[1] -->
  <UAVariable NodeId='ns=1;i=2753' BrowseName='1:Category' ValueRank='-1' DataType='ns=1;i=2634' ParentNodeId='ns=1;i=2621'>
    <DisplayName>Category</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTCategoryType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTAssetEventType ns=1;i=2621   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2621</Reference>
    </References>
  </UAVariable>
  <!-- MTAssetEventType::MTSubTypeName : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2755' BrowseName='1:MTSubTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2621'>
    <DisplayName>MTSubTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTAssetEventType ns=1;i=2621   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2621</Reference>
    </References>
  </UAVariable>
  <!-- MTAssetEventType::MTTypeName : String[1] -->
  <UAVariable NodeId='ns=1;i=2754' BrowseName='1:MTTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2621'>
    <DisplayName>MTTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTAssetEventType ns=1;i=2621   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2621</Reference>
    </References>
  </UAVariable>
  <!-- MTAssetEventType::Name : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2752' BrowseName='1:Name' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2621'>
    <DisplayName>Name</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTAssetEventType ns=1;i=2621   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2621</Reference>
    </References>
  </UAVariable>
  <!-- MTAssetEventType::PeriodFilter : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2759' BrowseName='1:PeriodFilter' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2621'>
    <DisplayName>PeriodFilter</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTAssetEventType ns=1;i=2621   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2621</Reference>
    </References>
  </UAVariable>
  <!-- MTAssetEventType::Representation : MTRepresentationType[0..1] -->
  <UAVariable NodeId='ns=1;i=2758' BrowseName='1:Representation' ValueRank='-1' DataType='ns=1;i=2633' ParentNodeId='ns=1;i=2621'>
    <DisplayName>Representation</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTRepresentationType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTAssetEventType ns=1;i=2621   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2621</Reference>
    </References>
  </UAVariable>
  <!-- MTAssetEventType::SampleRate : Double[0..1] -->
  <UAVariable NodeId='ns=1;i=2757' BrowseName='1:SampleRate' ValueRank='-1' DataType='Double' ParentNodeId='ns=1;i=2621'>
    <DisplayName>SampleRate</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Double i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTAssetEventType ns=1;i=2621   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2621</Reference>
    </References>
  </UAVariable>
  <!-- MTAssetEventType::SourceData : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2756' BrowseName='1:SourceData' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2621'>
    <DisplayName>SourceData</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTAssetEventType ns=1;i=2621   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2621</Reference>
    </References>
  </UAVariable>
  <!-- MTAssetEventType::XmlId : String[1] -->
  <UAVariable NodeId='ns=1;i=2751' BrowseName='1:XmlId' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2621'>
    <DisplayName>XmlId</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTAssetEventType ns=1;i=2621   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2621</Reference>
    </References>
  </UAVariable>
  <!-- MTAssetEventType::Constraints : MTConstraintType[0..1] -->
  <UAObject NodeId='ns=1;i=2760' BrowseName='1:Constraints' ParentNodeId='ns=1;i=2621'>
    <DisplayName>Constraints</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasProperty -  - Maximum ns=1;i=2763 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2763</Reference>
      <!-- HasProperty -  - Minimum ns=1;i=2762 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2762</Reference>
      <!-- HasProperty -  - Nominal ns=1;i=2764 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2764</Reference>
      <!-- HasProperty -  - Values ns=1;i=2761 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2761</Reference>
      <!-- HasTypeDefinition -  - MTConstraintType ns=1;i=2647   -->
      <Reference ReferenceType='HasTypeDefinition'>ns=1;i=2647</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasComponent - (Reverse) - MTAssetEventType ns=1;i=2621   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2621</Reference>
    </References>
  </UAObject>
  <!-- Constraints::Maximum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2763' BrowseName='1:Maximum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2760'>
    <DisplayName>Maximum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2760   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2760</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Minimum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2762' BrowseName='1:Minimum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2760'>
    <DisplayName>Minimum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2760   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2760</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Nominal : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2764' BrowseName='1:Nominal' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2760'>
    <DisplayName>Nominal</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2760   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2760</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Values : String[0..*] -->
  <UAVariable NodeId='ns=1;i=2761' BrowseName='1:Values' ValueRank='1' DataType='String' ParentNodeId='ns=1;i=2760'>
    <DisplayName>Values</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2760   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2760</Reference>
    </References>
  </UAVariable>
  <!-- Definition of Enumeration MTCategoryType ns=1;i=2634 -->
  <UADataType NodeId='ns=1;i=2634' BrowseName='1:MTCategoryType'>
    <DisplayName>MTCategoryType</DisplayName>
    <Description>Represents the \gls{category} attribute of the MTConnect \gls{MTDataItem}.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2765   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2765</Reference>
    </References>
    <Description>Represents the \gls{category} attribute of the MTConnect \gls{MTDataItem}.</Description>
    <Definition Name='MTCategoryType'>
      <Field Name='EVENT' Value='0'>
        <Description>
          An event category is a data item representing a discrete piece of
          information from the piece of equipment. 
        </Description>
      </Field>
      <Field Name='CONDITION' Value='1'>
        <Description>
          A condition category is a data item that communicates information
          about the health of a piece of equipment and its ability to function. 
        </Description>
      </Field>
      <Field Name='SAMPLE' Value='2'>
        <Description>
          A sample category is the reading of the value of a continuously
          variable or analog data value.
        </Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- MTCategoryType::EnumStrings ns=1;i=2765 -->
  <UAVariable NodeId='ns=1;i=2765' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2634'>
    <DisplayName>EnumStrings</DisplayName>
    <Description>Represents the \gls{category} attribute of the MTConnect \gls{MTDataItem}.</Description>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2634   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2634</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>EVENT</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>CONDITION</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>SAMPLE</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of MTCategoryType -->
  <UAObject NodeId='ns=1;i=2769' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <Description>Represents the \gls{category} attribute of the MTConnect \gls{MTDataItem}.</Description>
    <References>
      <!-- HasEncoding - (Reverse) - MTCategoryType ns=1;i=2634   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2634</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2770   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2770</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for MTCategoryType -->
  <UAVariable NodeId='ns=1;i=2770' BrowseName='1:MTCategoryType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>MTCategoryType</DisplayName>
    <Description>Represents the \gls{category} attribute of the MTConnect \gls{MTDataItem}.</Description>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;MTCategoryType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Object MTConditionClassType ns=1;i=2629 -->
  <UAObjectType NodeId='ns=1;i=2629' BrowseName='1:MTConditionClassType' IsAbstract='true'>
    <DisplayName>MTConditionClassType</DisplayName>
    <Description>
      The abstract type for all data items types that are specifically for
      \mtmodel{CONDITION} \gls{category}. An XML element which provides the
      information and data reported from a piece of equipment for those dataitem
      elements defined with a category attribute of condition category in the
      mtconnectdevices document.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemClassType ns=1;i=2425   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2425</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MTConstraintType ns=1;i=2647 -->
  <UAObjectType NodeId='ns=1;i=2647' BrowseName='1:MTConstraintType'>
    <DisplayName>MTConstraintType</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - BaseObjectType i=58   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=58</Reference>
      <!-- HasProperty -  - Maximum ns=1;i=2650 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2650</Reference>
      <!-- HasProperty -  - Minimum ns=1;i=2649 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2649</Reference>
      <!-- HasProperty -  - Nominal ns=1;i=2651 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2651</Reference>
      <!-- HasProperty -  - Values ns=1;i=2648 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2648</Reference>
    </References>
  </UAObjectType>
  <!-- MTConstraintType::Maximum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2650' BrowseName='1:Maximum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2647'>
    <DisplayName>Maximum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTConstraintType ns=1;i=2647   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2647</Reference>
    </References>
  </UAVariable>
  <!-- MTConstraintType::Minimum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2649' BrowseName='1:Minimum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2647'>
    <DisplayName>Minimum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTConstraintType ns=1;i=2647   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2647</Reference>
    </References>
  </UAVariable>
  <!-- MTConstraintType::Nominal : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2651' BrowseName='1:Nominal' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2647'>
    <DisplayName>Nominal</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTConstraintType ns=1;i=2647   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2647</Reference>
    </References>
  </UAVariable>
  <!-- MTConstraintType::Values : String[0..*] -->
  <UAVariable NodeId='ns=1;i=2648' BrowseName='1:Values' ValueRank='1' DataType='String' ParentNodeId='ns=1;i=2647'>
    <DisplayName>Values</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTConstraintType ns=1;i=2647   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2647</Reference>
    </References>
  </UAVariable>
  <!-- Definition of Variable MTControlledVocabEventType ns=1;i=2626 -->
  <UAVariableType NodeId='ns=1;i=2626' BrowseName='1:MTControlledVocabEventType' ValueRank='-1' DataType='UInteger'>
    <DisplayName>MTControlledVocabEventType</DisplayName>
    <Description>
      All \glspl{MTDataItem} with \gls{category} \mtmodel{EVENT} having
      Controlled Vocabularies (Enumerations) will be added as sub-types of this
      type which is mapped to the OPC/UA MultiStateValueDiscreteType. Otherwise,
      either \mtmodel{MTString} or \mtmodel{MTNumeric} will be used. All
      subtypes are direct representations of the MTConnect equivalent elements
      that can be found in the MTConnect Part 3 \cite{MTCPart3} documents.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MultiStateDiscreteType i=2376   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=2376</Reference>
      <!-- HasProperty -  - Category ns=1;i=2773 MTCategoryType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2773</Reference>
      <!-- HasProperty -  - MTSubTypeName ns=1;i=2775 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2775</Reference>
      <!-- HasProperty -  - MTTypeName ns=1;i=2774 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2774</Reference>
      <!-- HasProperty -  - Name ns=1;i=2772 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2772</Reference>
      <!-- HasProperty -  - PeriodFilter ns=1;i=2779 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2779</Reference>
      <!-- HasProperty -  - Representation ns=1;i=2778 MTRepresentationType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2778</Reference>
      <!-- HasProperty -  - SampleRate ns=1;i=2777 Double  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2777</Reference>
      <!-- HasProperty -  - SourceData ns=1;i=2776 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2776</Reference>
      <!-- HasProperty -  - XmlId ns=1;i=2771 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2771</Reference>
      <!-- HasComponent -  - Constraints ns=1;i=2780 MTConstraintType  -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2780</Reference>
      <!-- HasProperty -  - ValueAsText ns=1;i=3090 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3090</Reference>
    </References>
  </UAVariableType>
  <!-- MTControlledVocabEventType::Category : MTCategoryType[1] -->
  <UAVariable NodeId='ns=1;i=2773' BrowseName='1:Category' ValueRank='-1' DataType='ns=1;i=2634' ParentNodeId='ns=1;i=2626'>
    <DisplayName>Category</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTCategoryType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTControlledVocabEventType ns=1;i=2626   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2626</Reference>
    </References>
  </UAVariable>
  <!-- MTControlledVocabEventType::MTSubTypeName : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2775' BrowseName='1:MTSubTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2626'>
    <DisplayName>MTSubTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTControlledVocabEventType ns=1;i=2626   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2626</Reference>
    </References>
  </UAVariable>
  <!-- MTControlledVocabEventType::MTTypeName : String[1] -->
  <UAVariable NodeId='ns=1;i=2774' BrowseName='1:MTTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2626'>
    <DisplayName>MTTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTControlledVocabEventType ns=1;i=2626   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2626</Reference>
    </References>
  </UAVariable>
  <!-- MTControlledVocabEventType::Name : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2772' BrowseName='1:Name' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2626'>
    <DisplayName>Name</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTControlledVocabEventType ns=1;i=2626   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2626</Reference>
    </References>
  </UAVariable>
  <!-- MTControlledVocabEventType::PeriodFilter : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2779' BrowseName='1:PeriodFilter' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2626'>
    <DisplayName>PeriodFilter</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTControlledVocabEventType ns=1;i=2626   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2626</Reference>
    </References>
  </UAVariable>
  <!-- MTControlledVocabEventType::Representation : MTRepresentationType[0..1] -->
  <UAVariable NodeId='ns=1;i=2778' BrowseName='1:Representation' ValueRank='-1' DataType='ns=1;i=2633' ParentNodeId='ns=1;i=2626'>
    <DisplayName>Representation</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTRepresentationType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTControlledVocabEventType ns=1;i=2626   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2626</Reference>
    </References>
  </UAVariable>
  <!-- MTControlledVocabEventType::SampleRate : Double[0..1] -->
  <UAVariable NodeId='ns=1;i=2777' BrowseName='1:SampleRate' ValueRank='-1' DataType='Double' ParentNodeId='ns=1;i=2626'>
    <DisplayName>SampleRate</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Double i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTControlledVocabEventType ns=1;i=2626   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2626</Reference>
    </References>
  </UAVariable>
  <!-- MTControlledVocabEventType::SourceData : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2776' BrowseName='1:SourceData' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2626'>
    <DisplayName>SourceData</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTControlledVocabEventType ns=1;i=2626   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2626</Reference>
    </References>
  </UAVariable>
  <!-- MTControlledVocabEventType::XmlId : String[1] -->
  <UAVariable NodeId='ns=1;i=2771' BrowseName='1:XmlId' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2626'>
    <DisplayName>XmlId</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTControlledVocabEventType ns=1;i=2626   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2626</Reference>
    </References>
  </UAVariable>
  <!-- MTControlledVocabEventType::Constraints : MTConstraintType[0..1] -->
  <UAObject NodeId='ns=1;i=2780' BrowseName='1:Constraints' ParentNodeId='ns=1;i=2626'>
    <DisplayName>Constraints</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasProperty -  - Maximum ns=1;i=2783 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2783</Reference>
      <!-- HasProperty -  - Minimum ns=1;i=2782 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2782</Reference>
      <!-- HasProperty -  - Nominal ns=1;i=2784 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2784</Reference>
      <!-- HasProperty -  - Values ns=1;i=2781 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2781</Reference>
      <!-- HasTypeDefinition -  - MTConstraintType ns=1;i=2647   -->
      <Reference ReferenceType='HasTypeDefinition'>ns=1;i=2647</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasComponent - (Reverse) - MTControlledVocabEventType ns=1;i=2626   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2626</Reference>
    </References>
  </UAObject>
  <!-- Constraints::Maximum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2783' BrowseName='1:Maximum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2780'>
    <DisplayName>Maximum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2780   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2780</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Minimum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2782' BrowseName='1:Minimum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2780'>
    <DisplayName>Minimum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2780   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2780</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Nominal : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2784' BrowseName='1:Nominal' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2780'>
    <DisplayName>Nominal</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2780   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2780</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Values : String[0..*] -->
  <UAVariable NodeId='ns=1;i=2781' BrowseName='1:Values' ValueRank='1' DataType='String' ParentNodeId='ns=1;i=2780'>
    <DisplayName>Values</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2780   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2780</Reference>
    </References>
  </UAVariable>
  <!-- MTControlledVocabEventType::ValueAsText : String[1] -->
  <UAVariable NodeId='ns=1;i=3090' BrowseName='1:ValueAsText' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2626'>
    <DisplayName>ValueAsText</DisplayName>
    <Description>
      All \glspl{MTDataItem} with \gls{category} \mtmodel{EVENT} having
      Controlled Vocabularies (Enumerations) will be added as sub-types of this
      type which is mapped to the OPC/UA MultiStateValueDiscreteType. Otherwise,
      either \mtmodel{MTString} or \mtmodel{MTNumeric} will be used. All
      subtypes are direct representations of the MTConnect equivalent elements
      that can be found in the MTConnect Part 3 \cite{MTCPart3} documents.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTControlledVocabEventType ns=1;i=2626   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2626</Reference>
    </References>
  </UAVariable>
  <!-- Definition of Enumeration MTCoordinateSystemType ns=1;i=2635 -->
  <UADataType NodeId='ns=1;i=2635' BrowseName='1:MTCoordinateSystemType'>
    <DisplayName>MTCoordinateSystemType</DisplayName>
    <Description>
      Represents the \mtmodel{coordinateSystem} attribute of the MTConnect
      \gls{MTDataItem}. It is a reference system that associates a unique set of
      n parameters with each point in an n-dimensional space. Ref: ISO
      10303-218:2004
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2785   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2785</Reference>
    </References>
    <Description>
      Represents the \mtmodel{coordinateSystem} attribute of the MTConnect
      \gls{MTDataItem}. It is a reference system that associates a unique set of
      n parameters with each point in an n-dimensional space. Ref: ISO
      10303-218:2004
    </Description>
    <Definition Name='MTCoordinateSystemType'>
      <Field Name='MACHINE' Value='0'>
        <Description>An unchangeable coordinate system that has machine zero as its origin.</Description>
      </Field>
      <Field Name='WORK' Value='1'>
        <Description>
          The coordinate system that represents the working area for a
          particular workpiece whose origin is shifted within the machine
          coordinate system. If the work coordinates are not currently defined
          in the piece of equipment, the machine coordinates will be used.
        </Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- MTCoordinateSystemType::EnumStrings ns=1;i=2785 -->
  <UAVariable NodeId='ns=1;i=2785' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2635'>
    <DisplayName>EnumStrings</DisplayName>
    <Description>
      Represents the \mtmodel{coordinateSystem} attribute of the MTConnect
      \gls{MTDataItem}. It is a reference system that associates a unique set of
      n parameters with each point in an n-dimensional space. Ref: ISO
      10303-218:2004
    </Description>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2635   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2635</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>MACHINE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>WORK</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of MTCoordinateSystemType -->
  <UAObject NodeId='ns=1;i=2789' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <Description>
      Represents the \mtmodel{coordinateSystem} attribute of the MTConnect
      \gls{MTDataItem}. It is a reference system that associates a unique set of
      n parameters with each point in an n-dimensional space. Ref: ISO
      10303-218:2004
    </Description>
    <References>
      <!-- HasEncoding - (Reverse) - MTCoordinateSystemType ns=1;i=2635   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2635</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2790   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2790</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for MTCoordinateSystemType -->
  <UAVariable NodeId='ns=1;i=2790' BrowseName='1:MTCoordinateSystemType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>MTCoordinateSystemType</DisplayName>
    <Description>
      Represents the \mtmodel{coordinateSystem} attribute of the MTConnect
      \gls{MTDataItem}. It is a reference system that associates a unique set of
      n parameters with each point in an n-dimensional space. Ref: ISO
      10303-218:2004
    </Description>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;MTCoordinateSystemType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Object MTEventClassType ns=1;i=2631 -->
  <UAObjectType NodeId='ns=1;i=2631' BrowseName='1:MTEventClassType' IsAbstract='true'>
    <DisplayName>MTEventClassType</DisplayName>
    <Description>
      The base type class for all data items with a \gls{category} of
      \mtmodel{EVENT}. An XML element which provides the information and data
      reported from a piece of equipment for those dataitem elements defined
      with a category attribute of event category in the mtconnectdevices
      document.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemClassType ns=1;i=2425   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2425</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MTMessageEventType ns=1;i=2656 -->
  <UAObjectType NodeId='ns=1;i=2656' BrowseName='1:MTMessageEventType'>
    <DisplayName>MTMessageEventType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - BaseEventType i=2041   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=2041</Reference>
      <!-- HasProperty -  - NativeCode ns=1;i=2657 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2657</Reference>
    </References>
  </UAObjectType>
  <!-- MTMessageEventType::NativeCode : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2657' BrowseName='1:NativeCode' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2656'>
    <DisplayName>NativeCode</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTMessageEventType ns=1;i=2656   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2656</Reference>
    </References>
  </UAVariable>
  <!-- Definition of Variable MTMessageType ns=1;i=2471 -->
  <UAVariableType NodeId='ns=1;i=2471' BrowseName='1:MTMessageType' ValueRank='-1' DataType='ns=1;i=2653'>
    <DisplayName>MTMessageType</DisplayName>
    <Description>
      The message is a sub-type of the \uaterm{DataVariableType} using the
      \mtuatype{MessageDataType} to represent the values for \mtterm{NativeCode}
      and \mtterm{Text} of the message from the \gls{CDATA} of the MTConnect
      Streams message. Any text string of information to be transferred from a
      piece of equipment to a client software application.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - BaseDataVariableType i=63   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=63</Reference>
      <!-- HasProperty -  - Category ns=1;i=2793 MTCategoryType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2793</Reference>
      <!-- HasProperty -  - MTSubTypeName ns=1;i=2795 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2795</Reference>
      <!-- HasProperty -  - MTTypeName ns=1;i=2794 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2794</Reference>
      <!-- HasProperty -  - Name ns=1;i=2792 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2792</Reference>
      <!-- HasProperty -  - PeriodFilter ns=1;i=2799 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2799</Reference>
      <!-- HasProperty -  - Representation ns=1;i=2798 MTRepresentationType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2798</Reference>
      <!-- HasProperty -  - SampleRate ns=1;i=2797 Double  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2797</Reference>
      <!-- HasProperty -  - SourceData ns=1;i=2796 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2796</Reference>
      <!-- HasProperty -  - XmlId ns=1;i=2791 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2791</Reference>
      <!-- HasComponent -  - Constraints ns=1;i=2800 MTConstraintType  -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2800</Reference>
    </References>
  </UAVariableType>
  <!-- MTMessageType::Category : MTCategoryType[1] -->
  <UAVariable NodeId='ns=1;i=2793' BrowseName='1:Category' ValueRank='-1' DataType='ns=1;i=2634' ParentNodeId='ns=1;i=2471'>
    <DisplayName>Category</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTCategoryType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTMessageType ns=1;i=2471   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2471</Reference>
    </References>
  </UAVariable>
  <!-- MTMessageType::MTSubTypeName : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2795' BrowseName='1:MTSubTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2471'>
    <DisplayName>MTSubTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTMessageType ns=1;i=2471   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2471</Reference>
    </References>
  </UAVariable>
  <!-- MTMessageType::MTTypeName : String[1] -->
  <UAVariable NodeId='ns=1;i=2794' BrowseName='1:MTTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2471'>
    <DisplayName>MTTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTMessageType ns=1;i=2471   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2471</Reference>
    </References>
  </UAVariable>
  <!-- MTMessageType::Name : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2792' BrowseName='1:Name' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2471'>
    <DisplayName>Name</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTMessageType ns=1;i=2471   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2471</Reference>
    </References>
  </UAVariable>
  <!-- MTMessageType::PeriodFilter : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2799' BrowseName='1:PeriodFilter' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2471'>
    <DisplayName>PeriodFilter</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTMessageType ns=1;i=2471   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2471</Reference>
    </References>
  </UAVariable>
  <!-- MTMessageType::Representation : MTRepresentationType[0..1] -->
  <UAVariable NodeId='ns=1;i=2798' BrowseName='1:Representation' ValueRank='-1' DataType='ns=1;i=2633' ParentNodeId='ns=1;i=2471'>
    <DisplayName>Representation</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTRepresentationType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTMessageType ns=1;i=2471   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2471</Reference>
    </References>
  </UAVariable>
  <!-- MTMessageType::SampleRate : Double[0..1] -->
  <UAVariable NodeId='ns=1;i=2797' BrowseName='1:SampleRate' ValueRank='-1' DataType='Double' ParentNodeId='ns=1;i=2471'>
    <DisplayName>SampleRate</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Double i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTMessageType ns=1;i=2471   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2471</Reference>
    </References>
  </UAVariable>
  <!-- MTMessageType::SourceData : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2796' BrowseName='1:SourceData' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2471'>
    <DisplayName>SourceData</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTMessageType ns=1;i=2471   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2471</Reference>
    </References>
  </UAVariable>
  <!-- MTMessageType::XmlId : String[1] -->
  <UAVariable NodeId='ns=1;i=2791' BrowseName='1:XmlId' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2471'>
    <DisplayName>XmlId</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTMessageType ns=1;i=2471   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2471</Reference>
    </References>
  </UAVariable>
  <!-- MTMessageType::Constraints : MTConstraintType[0..1] -->
  <UAObject NodeId='ns=1;i=2800' BrowseName='1:Constraints' ParentNodeId='ns=1;i=2471'>
    <DisplayName>Constraints</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasProperty -  - Maximum ns=1;i=2803 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2803</Reference>
      <!-- HasProperty -  - Minimum ns=1;i=2802 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2802</Reference>
      <!-- HasProperty -  - Nominal ns=1;i=2804 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2804</Reference>
      <!-- HasProperty -  - Values ns=1;i=2801 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2801</Reference>
      <!-- HasTypeDefinition -  - MTConstraintType ns=1;i=2647   -->
      <Reference ReferenceType='HasTypeDefinition'>ns=1;i=2647</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasComponent - (Reverse) - MTMessageType ns=1;i=2471   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2471</Reference>
    </References>
  </UAObject>
  <!-- Constraints::Maximum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2803' BrowseName='1:Maximum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2800'>
    <DisplayName>Maximum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2800   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2800</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Minimum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2802' BrowseName='1:Minimum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2800'>
    <DisplayName>Minimum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2800   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2800</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Nominal : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2804' BrowseName='1:Nominal' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2800'>
    <DisplayName>Nominal</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2800   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2800</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Values : String[0..*] -->
  <UAVariable NodeId='ns=1;i=2801' BrowseName='1:Values' ValueRank='1' DataType='String' ParentNodeId='ns=1;i=2800'>
    <DisplayName>Values</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2800   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2800</Reference>
    </References>
  </UAVariable>
  <!-- Definition of Variable MTNumericEventType ns=1;i=2438 -->
  <UAVariableType NodeId='ns=1;i=2438' BrowseName='1:MTNumericEventType' ValueRank='-1' DataType='Number'>
    <DisplayName>MTNumericEventType</DisplayName>
    <Description>
      All data items with category \gls{MTEvent} and a numeric value. These are
      usually counters for parts and lines. Currently only builtin types that
      are known to be integers will be sub-typed from this type. Extended types
      will be subtyped from the \mtuatype{MTStringEventType}.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - DataItemType i=2365   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=2365</Reference>
      <!-- HasProperty -  - Category ns=1;i=2807 MTCategoryType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2807</Reference>
      <!-- HasProperty -  - MTSubTypeName ns=1;i=2809 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2809</Reference>
      <!-- HasProperty -  - MTTypeName ns=1;i=2808 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2808</Reference>
      <!-- HasProperty -  - Name ns=1;i=2806 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2806</Reference>
      <!-- HasProperty -  - PeriodFilter ns=1;i=2813 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2813</Reference>
      <!-- HasProperty -  - Representation ns=1;i=2812 MTRepresentationType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2812</Reference>
      <!-- HasProperty -  - SampleRate ns=1;i=2811 Double  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2811</Reference>
      <!-- HasProperty -  - SourceData ns=1;i=2810 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2810</Reference>
      <!-- HasProperty -  - XmlId ns=1;i=2805 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2805</Reference>
      <!-- HasComponent -  - Constraints ns=1;i=2814 MTConstraintType  -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2814</Reference>
      <!-- HasProperty -  - CoordinateSystem ns=1;i=2822 MTCoordinateSystemType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2822</Reference>
      <!-- HasProperty -  - Duration ns=1;i=3671 Duration  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3671</Reference>
      <!-- HasProperty -  - InitialValue ns=1;i=2823 Double  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2823</Reference>
      <!-- HasProperty -  - MinimumDeltaFilter ns=1;i=2826 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2826</Reference>
      <!-- HasProperty -  - NativeUnits ns=1;i=2821 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2821</Reference>
      <!-- HasProperty -  - ResetTrigger ns=1;i=2824 MTResetTriggerType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2824</Reference>
      <!-- HasProperty -  - ResetTriggeredReason ns=1;i=3675 MTResetTriggerType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3675</Reference>
      <!-- HasProperty -  - SignificantDigits ns=1;i=2819 Int16  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2819</Reference>
      <!-- HasProperty -  - Statistic ns=1;i=2820 MTStatisticType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2820</Reference>
      <!-- HasProperty -  - Units ns=1;i=2825 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2825</Reference>
    </References>
  </UAVariableType>
  <!-- MTNumericEventType::Category : MTCategoryType[1] -->
  <UAVariable NodeId='ns=1;i=2807' BrowseName='1:Category' ValueRank='-1' DataType='ns=1;i=2634' ParentNodeId='ns=1;i=2438'>
    <DisplayName>Category</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTCategoryType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::MTSubTypeName : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2809' BrowseName='1:MTSubTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2438'>
    <DisplayName>MTSubTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::MTTypeName : String[1] -->
  <UAVariable NodeId='ns=1;i=2808' BrowseName='1:MTTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2438'>
    <DisplayName>MTTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::Name : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2806' BrowseName='1:Name' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2438'>
    <DisplayName>Name</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::PeriodFilter : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2813' BrowseName='1:PeriodFilter' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2438'>
    <DisplayName>PeriodFilter</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::Representation : MTRepresentationType[0..1] -->
  <UAVariable NodeId='ns=1;i=2812' BrowseName='1:Representation' ValueRank='-1' DataType='ns=1;i=2633' ParentNodeId='ns=1;i=2438'>
    <DisplayName>Representation</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTRepresentationType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::SampleRate : Double[0..1] -->
  <UAVariable NodeId='ns=1;i=2811' BrowseName='1:SampleRate' ValueRank='-1' DataType='Double' ParentNodeId='ns=1;i=2438'>
    <DisplayName>SampleRate</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Double i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::SourceData : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2810' BrowseName='1:SourceData' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2438'>
    <DisplayName>SourceData</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::XmlId : String[1] -->
  <UAVariable NodeId='ns=1;i=2805' BrowseName='1:XmlId' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2438'>
    <DisplayName>XmlId</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::Constraints : MTConstraintType[0..1] -->
  <UAObject NodeId='ns=1;i=2814' BrowseName='1:Constraints' ParentNodeId='ns=1;i=2438'>
    <DisplayName>Constraints</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasProperty -  - Maximum ns=1;i=2817 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2817</Reference>
      <!-- HasProperty -  - Minimum ns=1;i=2816 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2816</Reference>
      <!-- HasProperty -  - Nominal ns=1;i=2818 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2818</Reference>
      <!-- HasProperty -  - Values ns=1;i=2815 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2815</Reference>
      <!-- HasTypeDefinition -  - MTConstraintType ns=1;i=2647   -->
      <Reference ReferenceType='HasTypeDefinition'>ns=1;i=2647</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasComponent - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAObject>
  <!-- Constraints::Maximum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2817' BrowseName='1:Maximum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2814'>
    <DisplayName>Maximum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2814   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2814</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Minimum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2816' BrowseName='1:Minimum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2814'>
    <DisplayName>Minimum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2814   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2814</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Nominal : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2818' BrowseName='1:Nominal' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2814'>
    <DisplayName>Nominal</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2814   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2814</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Values : String[0..*] -->
  <UAVariable NodeId='ns=1;i=2815' BrowseName='1:Values' ValueRank='1' DataType='String' ParentNodeId='ns=1;i=2814'>
    <DisplayName>Values</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2814   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2814</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::CoordinateSystem : MTCoordinateSystemType[0..1] -->
  <UAVariable NodeId='ns=1;i=2822' BrowseName='1:CoordinateSystem' ValueRank='-1' DataType='ns=1;i=2635' ParentNodeId='ns=1;i=2438'>
    <DisplayName>CoordinateSystem</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTCoordinateSystemType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::Duration : Duration[0..1] -->
  <UAVariable NodeId='ns=1;i=3671' BrowseName='1:Duration' ValueRank='-1' DataType='i=290' ParentNodeId='ns=1;i=2438'>
    <DisplayName>Duration</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Duration i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::InitialValue : Double[0..1] -->
  <UAVariable NodeId='ns=1;i=2823' BrowseName='1:InitialValue' ValueRank='-1' DataType='Double' ParentNodeId='ns=1;i=2438'>
    <DisplayName>InitialValue</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Double i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::MinimumDeltaFilter : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2826' BrowseName='1:MinimumDeltaFilter' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2438'>
    <DisplayName>MinimumDeltaFilter</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::NativeUnits : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2821' BrowseName='1:NativeUnits' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2438'>
    <DisplayName>NativeUnits</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::ResetTrigger : MTResetTriggerType[0..1] -->
  <UAVariable NodeId='ns=1;i=2824' BrowseName='1:ResetTrigger' ValueRank='-1' DataType='ns=1;i=2636' ParentNodeId='ns=1;i=2438'>
    <DisplayName>ResetTrigger</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTResetTriggerType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::ResetTriggeredReason : MTResetTriggerType[0..1] -->
  <UAVariable NodeId='ns=1;i=3675' BrowseName='1:ResetTriggeredReason' ValueRank='-1' DataType='ns=1;i=2636' ParentNodeId='ns=1;i=2438'>
    <DisplayName>ResetTriggeredReason</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTResetTriggerType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::SignificantDigits : Int16[0..1] -->
  <UAVariable NodeId='ns=1;i=2819' BrowseName='1:SignificantDigits' ValueRank='-1' DataType='Int16' ParentNodeId='ns=1;i=2438'>
    <DisplayName>SignificantDigits</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Int16 i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::Statistic : MTStatisticType[0..1] -->
  <UAVariable NodeId='ns=1;i=2820' BrowseName='1:Statistic' ValueRank='-1' DataType='ns=1;i=2659' ParentNodeId='ns=1;i=2438'>
    <DisplayName>Statistic</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTStatisticType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- MTNumericEventType::Units : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2825' BrowseName='1:Units' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2438'>
    <DisplayName>Units</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTNumericEventType ns=1;i=2438   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2438</Reference>
    </References>
  </UAVariable>
  <!-- Definition of Enumeration MTRepresentationType ns=1;i=2633 -->
  <UADataType NodeId='ns=1;i=2633' BrowseName='1:MTRepresentationType'>
    <DisplayName>MTRepresentationType</DisplayName>
    <Description>
      Represents the \mtmodel{representation} attribute of the MTConnect
      \gls{MTDataItem}.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2827   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2827</Reference>
    </References>
    <Description>
      Represents the \mtmodel{representation} attribute of the MTConnect
      \gls{MTDataItem}.
    </Description>
    <Definition Name='MTRepresentationType'>
      <Field Name='DISCRETE' Value='0'>
        <Description>
          A data entity where each discrete occurrence of the data may have the
          same value as the previous occurrence of the data.
        </Description>
      </Field>
      <Field Name='TIME_SERIES' Value='1'>
        <Description>A series of sampled data. </Description>
      </Field>
      <Field Name='VALUE' Value='2'>
        <Description>The measured value of the sample data.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- MTRepresentationType::EnumStrings ns=1;i=2827 -->
  <UAVariable NodeId='ns=1;i=2827' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2633'>
    <DisplayName>EnumStrings</DisplayName>
    <Description>
      Represents the \mtmodel{representation} attribute of the MTConnect
      \gls{MTDataItem}.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2633   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2633</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>DISCRETE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>TIME_SERIES</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>VALUE</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of MTRepresentationType -->
  <UAObject NodeId='ns=1;i=2831' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <Description>
      Represents the \mtmodel{representation} attribute of the MTConnect
      \gls{MTDataItem}.
    </Description>
    <References>
      <!-- HasEncoding - (Reverse) - MTRepresentationType ns=1;i=2633   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2633</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2832   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2832</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for MTRepresentationType -->
  <UAVariable NodeId='ns=1;i=2832' BrowseName='1:MTRepresentationType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>MTRepresentationType</DisplayName>
    <Description>
      Represents the \mtmodel{representation} attribute of the MTConnect
      \gls{MTDataItem}.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;MTRepresentationType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration MTResetTriggerType ns=1;i=2636 -->
  <UADataType NodeId='ns=1;i=2636' BrowseName='1:MTResetTriggerType'>
    <DisplayName>MTResetTriggerType</DisplayName>
    <Description>
      These need to become \uamodel{Good_} status code in OPC UA. resettrigger
      is an optional XML element that identifies the type of event that may
      cause a reset to occur. It is additional information regarding the meaning
      of the data that establishes an understanding of the time frame that the
      data represents so that the data may be correctly understood by a client
      software application.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2833   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2833</Reference>
    </References>
    <Description>
      These need to become \uamodel{Good_} status code in OPC UA. resettrigger
      is an optional XML element that identifies the type of event that may
      cause a reset to occur. It is additional information regarding the meaning
      of the data that establishes an understanding of the time frame that the
      data represents so that the data may be correctly understood by a client
      software application.
    </Description>
    <Definition Name='MTResetTriggerType'>
      <Field Name='ACTION_COMPLETE' Value='0'>
        <Description>
          The value of the data entity that is measuring an action or operation
          is to be reset upon completion of that action or operation.
        </Description>
      </Field>
      <Field Name='ANNUAL' Value='1'>
        <Description>The value of the data entity is to be reset at the end of a 12-month period.</Description>
      </Field>
      <Field Name='DAY' Value='2'>
        <Description>The value of the data entity is to be reset at the end of a 24-hour period.</Description>
      </Field>
      <Field Name='MAINTENANCE' Value='3'>
        <Description>Action related to maintenance on the piece of equipment.</Description>
      </Field>
      <Field Name='MANUAL' Value='4'>
        <Description>Operations based on the instructions received from an external source.</Description>
      </Field>
      <Field Name='MONTH' Value='5'>
        <Description>The value of the data entity is to be reset at the end of a monthly period.</Description>
      </Field>
      <Field Name='POWER_ON' Value='6'>
        <Description>
          The value of the data entity is to be reset when power was applied to
          the piece of equipment after a planned or unplanned interruption of
          power has occurred.
        </Description>
      </Field>
      <Field Name='SHIFT' Value='7'>
        <Description>The value of the data entity is to be reset at the end of a work shift.</Description>
      </Field>
      <Field Name='WEEK' Value='8'>
        <Description>The value of the data entity is to be reset at the end of a 7-day period.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- MTResetTriggerType::EnumStrings ns=1;i=2833 -->
  <UAVariable NodeId='ns=1;i=2833' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2636'>
    <DisplayName>EnumStrings</DisplayName>
    <Description>
      These need to become \uamodel{Good_} status code in OPC UA. resettrigger
      is an optional XML element that identifies the type of event that may
      cause a reset to occur. It is additional information regarding the meaning
      of the data that establishes an understanding of the time frame that the
      data represents so that the data may be correctly understood by a client
      software application.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2636   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2636</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>ACTION_COMPLETE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>ANNUAL</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>DAY</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>MAINTENANCE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>MANUAL</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>MONTH</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>POWER_ON</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>SHIFT</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>WEEK</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of MTResetTriggerType -->
  <UAObject NodeId='ns=1;i=2837' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <Description>
      These need to become \uamodel{Good_} status code in OPC UA. resettrigger
      is an optional XML element that identifies the type of event that may
      cause a reset to occur. It is additional information regarding the meaning
      of the data that establishes an understanding of the time frame that the
      data represents so that the data may be correctly understood by a client
      software application.
    </Description>
    <References>
      <!-- HasEncoding - (Reverse) - MTResetTriggerType ns=1;i=2636   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2636</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2838   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2838</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for MTResetTriggerType -->
  <UAVariable NodeId='ns=1;i=2838' BrowseName='1:MTResetTriggerType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>MTResetTriggerType</DisplayName>
    <Description>
      These need to become \uamodel{Good_} status code in OPC UA. resettrigger
      is an optional XML element that identifies the type of event that may
      cause a reset to occur. It is additional information regarding the meaning
      of the data that establishes an understanding of the time frame that the
      data represents so that the data may be correctly understood by a client
      software application.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;MTResetTriggerType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Variable MTSampleType ns=1;i=2429 -->
  <UAVariableType NodeId='ns=1;i=2429' BrowseName='1:MTSampleType' ValueRank='-1' DataType='Number'>
    <DisplayName>MTSampleType</DisplayName>
    <Description>
      Data Items with category \mtmodel{SAMPLE}. The simplest mapping since all
      these types are floating point numeric data and comply with the
      \uamodel{AnalogUnitType} from \cite{UAPart8} Amendment 1. In ammendment 1,
      the \uamodel{EURange} is optional. \uamodel{EngineeringUnits} for all
      \mtuatype{MTSampleType} Data Items. The \uamodel{EURange} will becreated
      if the \mtmodel{Constraints} element exists and both \mtmodel{Maximum} and
      \mtmodel{Minimum} values are given. An XML element that provides the
      information and data reported from a piece of equipment for those dataitem
      elements defined with a category attribute of sample category in the
      mtconnectdevices document. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - AnalogUnitType i=17497   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=17497</Reference>
      <!-- HasProperty -  - Category ns=1;i=2841 MTCategoryType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2841</Reference>
      <!-- HasProperty -  - MTSubTypeName ns=1;i=2843 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2843</Reference>
      <!-- HasProperty -  - MTTypeName ns=1;i=2842 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2842</Reference>
      <!-- HasProperty -  - Name ns=1;i=2840 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2840</Reference>
      <!-- HasProperty -  - PeriodFilter ns=1;i=2847 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2847</Reference>
      <!-- HasProperty -  - Representation ns=1;i=2846 MTRepresentationType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2846</Reference>
      <!-- HasProperty -  - SampleRate ns=1;i=2845 Double  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2845</Reference>
      <!-- HasProperty -  - SourceData ns=1;i=2844 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2844</Reference>
      <!-- HasProperty -  - XmlId ns=1;i=2839 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2839</Reference>
      <!-- HasComponent -  - Constraints ns=1;i=2848 MTConstraintType  -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2848</Reference>
      <!-- HasProperty -  - CoordinateSystem ns=1;i=2856 MTCoordinateSystemType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2856</Reference>
      <!-- HasProperty -  - Duration ns=1;i=3672 Duration  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3672</Reference>
      <!-- HasProperty -  - InitialValue ns=1;i=2857 Double  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2857</Reference>
      <!-- HasProperty -  - MinimumDeltaFilter ns=1;i=2860 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2860</Reference>
      <!-- HasProperty -  - NativeUnits ns=1;i=2855 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2855</Reference>
      <!-- HasProperty -  - ResetTrigger ns=1;i=2858 MTResetTriggerType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2858</Reference>
      <!-- HasProperty -  - ResetTriggeredReason ns=1;i=3676 MTResetTriggerType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3676</Reference>
      <!-- HasProperty -  - SignificantDigits ns=1;i=2853 Int16  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2853</Reference>
      <!-- HasProperty -  - Statistic ns=1;i=2854 MTStatisticType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2854</Reference>
      <!-- HasProperty -  - Units ns=1;i=2859 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2859</Reference>
    </References>
  </UAVariableType>
  <!-- MTSampleType::Category : MTCategoryType[1] -->
  <UAVariable NodeId='ns=1;i=2841' BrowseName='1:Category' ValueRank='-1' DataType='ns=1;i=2634' ParentNodeId='ns=1;i=2429'>
    <DisplayName>Category</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTCategoryType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::MTSubTypeName : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2843' BrowseName='1:MTSubTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2429'>
    <DisplayName>MTSubTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::MTTypeName : String[1] -->
  <UAVariable NodeId='ns=1;i=2842' BrowseName='1:MTTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2429'>
    <DisplayName>MTTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::Name : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2840' BrowseName='1:Name' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2429'>
    <DisplayName>Name</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::PeriodFilter : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2847' BrowseName='1:PeriodFilter' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2429'>
    <DisplayName>PeriodFilter</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::Representation : MTRepresentationType[0..1] -->
  <UAVariable NodeId='ns=1;i=2846' BrowseName='1:Representation' ValueRank='-1' DataType='ns=1;i=2633' ParentNodeId='ns=1;i=2429'>
    <DisplayName>Representation</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTRepresentationType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::SampleRate : Double[0..1] -->
  <UAVariable NodeId='ns=1;i=2845' BrowseName='1:SampleRate' ValueRank='-1' DataType='Double' ParentNodeId='ns=1;i=2429'>
    <DisplayName>SampleRate</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Double i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::SourceData : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2844' BrowseName='1:SourceData' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2429'>
    <DisplayName>SourceData</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::XmlId : String[1] -->
  <UAVariable NodeId='ns=1;i=2839' BrowseName='1:XmlId' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2429'>
    <DisplayName>XmlId</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::Constraints : MTConstraintType[0..1] -->
  <UAObject NodeId='ns=1;i=2848' BrowseName='1:Constraints' ParentNodeId='ns=1;i=2429'>
    <DisplayName>Constraints</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasProperty -  - Maximum ns=1;i=2851 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2851</Reference>
      <!-- HasProperty -  - Minimum ns=1;i=2850 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2850</Reference>
      <!-- HasProperty -  - Nominal ns=1;i=2852 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2852</Reference>
      <!-- HasProperty -  - Values ns=1;i=2849 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2849</Reference>
      <!-- HasTypeDefinition -  - MTConstraintType ns=1;i=2647   -->
      <Reference ReferenceType='HasTypeDefinition'>ns=1;i=2647</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasComponent - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAObject>
  <!-- Constraints::Maximum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2851' BrowseName='1:Maximum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2848'>
    <DisplayName>Maximum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2848   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2848</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Minimum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2850' BrowseName='1:Minimum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2848'>
    <DisplayName>Minimum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2848   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2848</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Nominal : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2852' BrowseName='1:Nominal' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2848'>
    <DisplayName>Nominal</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2848   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2848</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Values : String[0..*] -->
  <UAVariable NodeId='ns=1;i=2849' BrowseName='1:Values' ValueRank='1' DataType='String' ParentNodeId='ns=1;i=2848'>
    <DisplayName>Values</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2848   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2848</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::CoordinateSystem : MTCoordinateSystemType[0..1] -->
  <UAVariable NodeId='ns=1;i=2856' BrowseName='1:CoordinateSystem' ValueRank='-1' DataType='ns=1;i=2635' ParentNodeId='ns=1;i=2429'>
    <DisplayName>CoordinateSystem</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTCoordinateSystemType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::Duration : Duration[0..1] -->
  <UAVariable NodeId='ns=1;i=3672' BrowseName='1:Duration' ValueRank='-1' DataType='i=290' ParentNodeId='ns=1;i=2429'>
    <DisplayName>Duration</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Duration i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::InitialValue : Double[0..1] -->
  <UAVariable NodeId='ns=1;i=2857' BrowseName='1:InitialValue' ValueRank='-1' DataType='Double' ParentNodeId='ns=1;i=2429'>
    <DisplayName>InitialValue</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Double i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::MinimumDeltaFilter : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2860' BrowseName='1:MinimumDeltaFilter' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2429'>
    <DisplayName>MinimumDeltaFilter</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::NativeUnits : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2855' BrowseName='1:NativeUnits' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2429'>
    <DisplayName>NativeUnits</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::ResetTrigger : MTResetTriggerType[0..1] -->
  <UAVariable NodeId='ns=1;i=2858' BrowseName='1:ResetTrigger' ValueRank='-1' DataType='ns=1;i=2636' ParentNodeId='ns=1;i=2429'>
    <DisplayName>ResetTrigger</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTResetTriggerType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::ResetTriggeredReason : MTResetTriggerType[0..1] -->
  <UAVariable NodeId='ns=1;i=3676' BrowseName='1:ResetTriggeredReason' ValueRank='-1' DataType='ns=1;i=2636' ParentNodeId='ns=1;i=2429'>
    <DisplayName>ResetTriggeredReason</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTResetTriggerType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::SignificantDigits : Int16[0..1] -->
  <UAVariable NodeId='ns=1;i=2853' BrowseName='1:SignificantDigits' ValueRank='-1' DataType='Int16' ParentNodeId='ns=1;i=2429'>
    <DisplayName>SignificantDigits</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Int16 i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::Statistic : MTStatisticType[0..1] -->
  <UAVariable NodeId='ns=1;i=2854' BrowseName='1:Statistic' ValueRank='-1' DataType='ns=1;i=2659' ParentNodeId='ns=1;i=2429'>
    <DisplayName>Statistic</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTStatisticType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- MTSampleType::Units : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2859' BrowseName='1:Units' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2429'>
    <DisplayName>Units</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTSampleType ns=1;i=2429   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2429</Reference>
    </References>
  </UAVariable>
  <!-- Definition of Enumeration MTStatisticType ns=1;i=2659 -->
  <UADataType NodeId='ns=1;i=2659' BrowseName='1:MTStatisticType'>
    <DisplayName>MTStatisticType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2861   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2861</Reference>
    </References>
    <Description></Description>
    <Definition Name='MTStatisticType'>
      <Field Name='AVERAGE' Value='0'>
        <Description>
          Mathematical Average value calculated for the data item during the
          calculation period.
        </Description>
      </Field>
      <Field Name='MAXIMUM' Value='1'>
        <Description>The upper limit of data reported for a data item.</Description>
      </Field>
      <Field Name='MEDIAN' Value='2'>
        <Description>The middle number of a series of numbers.</Description>
      </Field>
      <Field Name='MINIMUM' Value='3'>
        <Description>The lower limit of data reported for a data item.</Description>
      </Field>
      <Field Name='MODE' Value='4'>
        <Description>The number in a series of numbers that occurs most often.</Description>
      </Field>
      <Field Name='RANGE' Value='5'>
        <Description>
          Difference between the maximum and minimum value of a data item during
          the calculation period. Also represents Peak-to-Peak measurement in a
          waveform.
        </Description>
      </Field>
      <Field Name='ROOT_MEAN_SQUARE' Value='6'>
        <Description>
          Mathematical Root Mean Square (RMS) value calculated for the data item
          during the calculation period.
        </Description>
      </Field>
      <Field Name='STANDARD_DEVIATION' Value='7'>
        <Description>
          Statistical Standard Deviation value calculated for the data item
          during the calculation period.
        </Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- MTStatisticType::EnumStrings ns=1;i=2861 -->
  <UAVariable NodeId='ns=1;i=2861' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2659'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2659   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2659</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>AVERAGE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>MAXIMUM</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>MEDIAN</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>MINIMUM</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>MODE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>RANGE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>ROOT_MEAN_SQUARE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>STANDARD_DEVIATION</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of MTStatisticType -->
  <UAObject NodeId='ns=1;i=2865' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - MTStatisticType ns=1;i=2659   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2659</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2866   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2866</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for MTStatisticType -->
  <UAVariable NodeId='ns=1;i=2866' BrowseName='1:MTStatisticType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>MTStatisticType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;MTStatisticType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Variable MTStringEventType ns=1;i=2433 -->
  <UAVariableType NodeId='ns=1;i=2433' BrowseName='1:MTStringEventType' ValueRank='-1' DataType='String'>
    <DisplayName>MTStringEventType</DisplayName>
    <Description>
      All data items with \gls{category} \uamodel{EVENT} where the data is
      freeform text. The data type will be set to String for all the sub-types.
      All extended type, regardless of controlled vocabularies, will use this
      base type unless proprietary enumerations are added to the nodeset as
      required by the builtin state event types inherited from
      \mtmodel{MTControlledVocabEventType} (see
      \ref{type:MTControlledVocabEventType}).
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - BaseDataVariableType i=63   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=63</Reference>
      <!-- HasProperty -  - Category ns=1;i=2869 MTCategoryType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2869</Reference>
      <!-- HasProperty -  - MTSubTypeName ns=1;i=2871 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2871</Reference>
      <!-- HasProperty -  - MTTypeName ns=1;i=2870 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2870</Reference>
      <!-- HasProperty -  - Name ns=1;i=2868 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2868</Reference>
      <!-- HasProperty -  - PeriodFilter ns=1;i=2875 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2875</Reference>
      <!-- HasProperty -  - Representation ns=1;i=2874 MTRepresentationType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2874</Reference>
      <!-- HasProperty -  - SampleRate ns=1;i=2873 Double  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2873</Reference>
      <!-- HasProperty -  - SourceData ns=1;i=2872 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2872</Reference>
      <!-- HasProperty -  - XmlId ns=1;i=2867 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2867</Reference>
      <!-- HasComponent -  - Constraints ns=1;i=2876 MTConstraintType  -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2876</Reference>
    </References>
  </UAVariableType>
  <!-- MTStringEventType::Category : MTCategoryType[1] -->
  <UAVariable NodeId='ns=1;i=2869' BrowseName='1:Category' ValueRank='-1' DataType='ns=1;i=2634' ParentNodeId='ns=1;i=2433'>
    <DisplayName>Category</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTCategoryType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTStringEventType ns=1;i=2433   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2433</Reference>
    </References>
  </UAVariable>
  <!-- MTStringEventType::MTSubTypeName : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2871' BrowseName='1:MTSubTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2433'>
    <DisplayName>MTSubTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTStringEventType ns=1;i=2433   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2433</Reference>
    </References>
  </UAVariable>
  <!-- MTStringEventType::MTTypeName : String[1] -->
  <UAVariable NodeId='ns=1;i=2870' BrowseName='1:MTTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2433'>
    <DisplayName>MTTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTStringEventType ns=1;i=2433   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2433</Reference>
    </References>
  </UAVariable>
  <!-- MTStringEventType::Name : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2868' BrowseName='1:Name' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2433'>
    <DisplayName>Name</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTStringEventType ns=1;i=2433   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2433</Reference>
    </References>
  </UAVariable>
  <!-- MTStringEventType::PeriodFilter : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2875' BrowseName='1:PeriodFilter' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2433'>
    <DisplayName>PeriodFilter</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTStringEventType ns=1;i=2433   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2433</Reference>
    </References>
  </UAVariable>
  <!-- MTStringEventType::Representation : MTRepresentationType[0..1] -->
  <UAVariable NodeId='ns=1;i=2874' BrowseName='1:Representation' ValueRank='-1' DataType='ns=1;i=2633' ParentNodeId='ns=1;i=2433'>
    <DisplayName>Representation</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTRepresentationType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTStringEventType ns=1;i=2433   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2433</Reference>
    </References>
  </UAVariable>
  <!-- MTStringEventType::SampleRate : Double[0..1] -->
  <UAVariable NodeId='ns=1;i=2873' BrowseName='1:SampleRate' ValueRank='-1' DataType='Double' ParentNodeId='ns=1;i=2433'>
    <DisplayName>SampleRate</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Double i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTStringEventType ns=1;i=2433   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2433</Reference>
    </References>
  </UAVariable>
  <!-- MTStringEventType::SourceData : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2872' BrowseName='1:SourceData' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2433'>
    <DisplayName>SourceData</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTStringEventType ns=1;i=2433   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2433</Reference>
    </References>
  </UAVariable>
  <!-- MTStringEventType::XmlId : String[1] -->
  <UAVariable NodeId='ns=1;i=2867' BrowseName='1:XmlId' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2433'>
    <DisplayName>XmlId</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTStringEventType ns=1;i=2433   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2433</Reference>
    </References>
  </UAVariable>
  <!-- MTStringEventType::Constraints : MTConstraintType[0..1] -->
  <UAObject NodeId='ns=1;i=2876' BrowseName='1:Constraints' ParentNodeId='ns=1;i=2433'>
    <DisplayName>Constraints</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasProperty -  - Maximum ns=1;i=2879 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2879</Reference>
      <!-- HasProperty -  - Minimum ns=1;i=2878 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2878</Reference>
      <!-- HasProperty -  - Nominal ns=1;i=2880 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2880</Reference>
      <!-- HasProperty -  - Values ns=1;i=2877 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2877</Reference>
      <!-- HasTypeDefinition -  - MTConstraintType ns=1;i=2647   -->
      <Reference ReferenceType='HasTypeDefinition'>ns=1;i=2647</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasComponent - (Reverse) - MTStringEventType ns=1;i=2433   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2433</Reference>
    </References>
  </UAObject>
  <!-- Constraints::Maximum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2879' BrowseName='1:Maximum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2876'>
    <DisplayName>Maximum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2876   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2876</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Minimum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2878' BrowseName='1:Minimum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2876'>
    <DisplayName>Minimum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2876   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2876</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Nominal : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2880' BrowseName='1:Nominal' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2876'>
    <DisplayName>Nominal</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2876   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2876</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Values : String[0..*] -->
  <UAVariable NodeId='ns=1;i=2877' BrowseName='1:Values' ValueRank='1' DataType='String' ParentNodeId='ns=1;i=2876'>
    <DisplayName>Values</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2876   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2876</Reference>
    </References>
  </UAVariable>
  <!-- Definition of Variable MTThreeSpaceSampleType ns=1;i=2641 -->
  <UAVariableType NodeId='ns=1;i=2641' BrowseName='1:MTThreeSpaceSampleType' ValueRank='-1' DataType='ns=1;i=2637'>
    <DisplayName>MTThreeSpaceSampleType</DisplayName>
    <Description>
      A special data item type that represents a three space coordinate. It uses
      a data type with three fields, X, Y, and Z, where the coordinates are
      given in millimeters. The EngineeringUnits will always be set to MMT in
      the UNECE convetion.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - DataItemType i=2365   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=2365</Reference>
      <!-- HasProperty -  - Category ns=1;i=2883 MTCategoryType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2883</Reference>
      <!-- HasProperty -  - MTSubTypeName ns=1;i=2885 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2885</Reference>
      <!-- HasProperty -  - MTTypeName ns=1;i=2884 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2884</Reference>
      <!-- HasProperty -  - Name ns=1;i=2882 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2882</Reference>
      <!-- HasProperty -  - PeriodFilter ns=1;i=2889 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2889</Reference>
      <!-- HasProperty -  - Representation ns=1;i=2888 MTRepresentationType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2888</Reference>
      <!-- HasProperty -  - SampleRate ns=1;i=2887 Double  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2887</Reference>
      <!-- HasProperty -  - SourceData ns=1;i=2886 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2886</Reference>
      <!-- HasProperty -  - XmlId ns=1;i=2881 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2881</Reference>
      <!-- HasComponent -  - Constraints ns=1;i=2890 MTConstraintType  -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2890</Reference>
      <!-- HasProperty -  - CoordinateSystem ns=1;i=2898 MTCoordinateSystemType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2898</Reference>
      <!-- HasProperty -  - Duration ns=1;i=3673 Duration  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3673</Reference>
      <!-- HasProperty -  - InitialValue ns=1;i=2899 Double  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2899</Reference>
      <!-- HasProperty -  - MinimumDeltaFilter ns=1;i=2902 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2902</Reference>
      <!-- HasProperty -  - NativeUnits ns=1;i=2897 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2897</Reference>
      <!-- HasProperty -  - ResetTrigger ns=1;i=2900 MTResetTriggerType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2900</Reference>
      <!-- HasProperty -  - ResetTriggeredReason ns=1;i=3677 MTResetTriggerType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3677</Reference>
      <!-- HasProperty -  - SignificantDigits ns=1;i=2895 Int16  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2895</Reference>
      <!-- HasProperty -  - Statistic ns=1;i=2896 MTStatisticType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2896</Reference>
      <!-- HasProperty -  - Units ns=1;i=2901 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2901</Reference>
      <!-- HasProperty -  - EngineeringUnits ns=1;i=2642 EUInformation  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2642</Reference>
    </References>
  </UAVariableType>
  <!-- MTThreeSpaceSampleType::Category : MTCategoryType[1] -->
  <UAVariable NodeId='ns=1;i=2883' BrowseName='1:Category' ValueRank='-1' DataType='ns=1;i=2634' ParentNodeId='ns=1;i=2641'>
    <DisplayName>Category</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTCategoryType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::MTSubTypeName : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2885' BrowseName='1:MTSubTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2641'>
    <DisplayName>MTSubTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::MTTypeName : String[1] -->
  <UAVariable NodeId='ns=1;i=2884' BrowseName='1:MTTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2641'>
    <DisplayName>MTTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::Name : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2882' BrowseName='1:Name' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2641'>
    <DisplayName>Name</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::PeriodFilter : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2889' BrowseName='1:PeriodFilter' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2641'>
    <DisplayName>PeriodFilter</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::Representation : MTRepresentationType[0..1] -->
  <UAVariable NodeId='ns=1;i=2888' BrowseName='1:Representation' ValueRank='-1' DataType='ns=1;i=2633' ParentNodeId='ns=1;i=2641'>
    <DisplayName>Representation</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTRepresentationType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::SampleRate : Double[0..1] -->
  <UAVariable NodeId='ns=1;i=2887' BrowseName='1:SampleRate' ValueRank='-1' DataType='Double' ParentNodeId='ns=1;i=2641'>
    <DisplayName>SampleRate</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Double i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::SourceData : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2886' BrowseName='1:SourceData' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2641'>
    <DisplayName>SourceData</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::XmlId : String[1] -->
  <UAVariable NodeId='ns=1;i=2881' BrowseName='1:XmlId' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2641'>
    <DisplayName>XmlId</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::Constraints : MTConstraintType[0..1] -->
  <UAObject NodeId='ns=1;i=2890' BrowseName='1:Constraints' ParentNodeId='ns=1;i=2641'>
    <DisplayName>Constraints</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasProperty -  - Maximum ns=1;i=2893 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2893</Reference>
      <!-- HasProperty -  - Minimum ns=1;i=2892 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2892</Reference>
      <!-- HasProperty -  - Nominal ns=1;i=2894 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2894</Reference>
      <!-- HasProperty -  - Values ns=1;i=2891 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2891</Reference>
      <!-- HasTypeDefinition -  - MTConstraintType ns=1;i=2647   -->
      <Reference ReferenceType='HasTypeDefinition'>ns=1;i=2647</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasComponent - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAObject>
  <!-- Constraints::Maximum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2893' BrowseName='1:Maximum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2890'>
    <DisplayName>Maximum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2890   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2890</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Minimum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2892' BrowseName='1:Minimum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2890'>
    <DisplayName>Minimum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2890   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2890</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Nominal : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2894' BrowseName='1:Nominal' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2890'>
    <DisplayName>Nominal</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2890   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2890</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Values : String[0..*] -->
  <UAVariable NodeId='ns=1;i=2891' BrowseName='1:Values' ValueRank='1' DataType='String' ParentNodeId='ns=1;i=2890'>
    <DisplayName>Values</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2890   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2890</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::CoordinateSystem : MTCoordinateSystemType[0..1] -->
  <UAVariable NodeId='ns=1;i=2898' BrowseName='1:CoordinateSystem' ValueRank='-1' DataType='ns=1;i=2635' ParentNodeId='ns=1;i=2641'>
    <DisplayName>CoordinateSystem</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTCoordinateSystemType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::Duration : Duration[0..1] -->
  <UAVariable NodeId='ns=1;i=3673' BrowseName='1:Duration' ValueRank='-1' DataType='i=290' ParentNodeId='ns=1;i=2641'>
    <DisplayName>Duration</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Duration i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::InitialValue : Double[0..1] -->
  <UAVariable NodeId='ns=1;i=2899' BrowseName='1:InitialValue' ValueRank='-1' DataType='Double' ParentNodeId='ns=1;i=2641'>
    <DisplayName>InitialValue</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Double i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::MinimumDeltaFilter : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2902' BrowseName='1:MinimumDeltaFilter' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2641'>
    <DisplayName>MinimumDeltaFilter</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::NativeUnits : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2897' BrowseName='1:NativeUnits' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2641'>
    <DisplayName>NativeUnits</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::ResetTrigger : MTResetTriggerType[0..1] -->
  <UAVariable NodeId='ns=1;i=2900' BrowseName='1:ResetTrigger' ValueRank='-1' DataType='ns=1;i=2636' ParentNodeId='ns=1;i=2641'>
    <DisplayName>ResetTrigger</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTResetTriggerType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::ResetTriggeredReason : MTResetTriggerType[0..1] -->
  <UAVariable NodeId='ns=1;i=3677' BrowseName='1:ResetTriggeredReason' ValueRank='-1' DataType='ns=1;i=2636' ParentNodeId='ns=1;i=2641'>
    <DisplayName>ResetTriggeredReason</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTResetTriggerType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::SignificantDigits : Int16[0..1] -->
  <UAVariable NodeId='ns=1;i=2895' BrowseName='1:SignificantDigits' ValueRank='-1' DataType='Int16' ParentNodeId='ns=1;i=2641'>
    <DisplayName>SignificantDigits</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Int16 i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::Statistic : MTStatisticType[0..1] -->
  <UAVariable NodeId='ns=1;i=2896' BrowseName='1:Statistic' ValueRank='-1' DataType='ns=1;i=2659' ParentNodeId='ns=1;i=2641'>
    <DisplayName>Statistic</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTStatisticType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::Units : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2901' BrowseName='1:Units' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2641'>
    <DisplayName>Units</DisplayName>
    <Description>
      These are the additional attributes that are relevent to numeric data
      items. The factory will evaluate these values and will set the engineering
      units and the range associated with the parent entity.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- MTThreeSpaceSampleType::EngineeringUnits : EUInformation[1] -->
  <UAVariable NodeId='ns=1;i=2642' BrowseName='1:EngineeringUnits' ValueRank='-1' DataType='i=887' ParentNodeId='ns=1;i=2641'>
    <DisplayName>EngineeringUnits</DisplayName>
    <Description>
      A special data item type that represents a three space coordinate. It uses
      a data type with three fields, X, Y, and Z, where the coordinates are
      given in millimeters. The EngineeringUnits will always be set to MMT in
      the UNECE convetion.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - EUInformation i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTThreeSpaceSampleType ns=1;i=2641   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2641</Reference>
    </References>
  </UAVariable>
  <!-- Definition of DataType MessageDataType ns=1;i=2653 -->
  <UADataType NodeId='ns=1;i=2653' BrowseName='1:MessageDataType'>
    <DisplayName>MessageDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - BaseDataType Structure   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>Structure</Reference>
    </References>
    <Description></Description>
    <Definition Name='MessageDataType'>
      <Field Name='NativeCode' DataType='String' IsOptional='true'>
        <Description>
           The native code (usually an alpha-numeric value) generated by the
          controller of a piece of equipment or the element.
        </Description>
      </Field>
      <Field Name='Text' DataType='String'/>
    </Definition>
  </UADataType>
  <!-- Default Binary encoding of MessageDataType -->
  <UAObject NodeId='ns=1;i=2903' BrowseName='Default Binary'>
    <DisplayName>Default Binary</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - MessageDataType ns=1;i=2653   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2653</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2904   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2904</Reference>
    </References>
  </UAObject>
  <!-- Binary DataTypeDescription for MessageDataType -->
  <UAVariable NodeId='ns=1;i=2904' BrowseName='1:MessageDataType' DataType='String' ParentNodeId='ns=1;i=2729'>
    <DisplayName>MessageDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasProperty -  - DictionaryFragment ns=1;i=2905   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2905</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2729   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2729</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>MessageDataType</String>
    </Value>
  </UAVariable>
  <!-- DictionaryFragment for MessageDataType -->
  <UAVariable NodeId='ns=1;i=2905' BrowseName='1:DictionaryFragment' DataType='ByteString' ParentNodeId='ns=1;i=2904'>
    <DisplayName>DictionaryFragment</DisplayName>
    <References>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2904   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2904</Reference>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
    </References>
    <Value>
      <ByteString xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <![CDATA[PG9wYzpTdHJ1Y3R1cmVkVHlwZSBOYW1lPSdNZXNzYWdlRGF0YVR5cGUnIEJh
c2VUeXBlPSd1YTpFeHRlbnNpb25PYmplY3QnPgogIDxvcGM6RG9jdW1lbnRh
dGlvbj5UaGUgZW5jb2RpbmcgZm9yIE1lc3NhZ2VEYXRhVHlwZTwvb3BjOkRv
Y3VtZW50YXRpb24+CiAgPG9wYzpGaWVsZCBOYW1lPSdOYXRpdmVDb2RlJyBU
eXBlTmFtZT0nb3BjOlN0cmluZycvPgogIDxvcGM6RmllbGQgTmFtZT0nVGV4
dCcgVHlwZU5hbWU9J29wYzpTdHJpbmcnLz4KPC9vcGM6U3RydWN0dXJlZFR5
cGU+
]]>
      </ByteString>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of MessageDataType -->
  <UAObject NodeId='ns=1;i=2906' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - MessageDataType ns=1;i=2653   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2653</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2907   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2907</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for MessageDataType -->
  <UAVariable NodeId='ns=1;i=2907' BrowseName='1:MessageDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>MessageDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;MessageDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Default JSON encoding of MessageDataType -->
  <UAObject NodeId='ns=1;i=2908' BrowseName='Default JSON'>
    <DisplayName>Default JSON</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - MessageDataType ns=1;i=2653   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2653</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
    </References>
  </UAObject>
  <!-- Definition of DataType ThreeSpaceSampleDataType ns=1;i=2637 -->
  <UADataType NodeId='ns=1;i=2637' BrowseName='1:ThreeSpaceSampleDataType'>
    <DisplayName>ThreeSpaceSampleDataType</DisplayName>
    <Description>
      Represents a position in a three space coordinate system. The positions
      must be given in millimeters.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - BaseDataType Structure   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>Structure</Reference>
    </References>
    <Description>
      Represents a position in a three space coordinate system. The positions
      must be given in millimeters.
    </Description>
    <Definition Name='ThreeSpaceSampleDataType'>
      <Field Name='X' DataType='Double'>
        <Description>If not present, must be set to NaN.</Description>
      </Field>
      <Field Name='Y' DataType='Double'>
        <Description>If not present, must be set to NaN.</Description>
      </Field>
      <Field Name='Z' DataType='Double'>
        <Description>If not present, must be set to NaN.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- Default Binary encoding of ThreeSpaceSampleDataType -->
  <UAObject NodeId='ns=1;i=2909' BrowseName='Default Binary'>
    <DisplayName>Default Binary</DisplayName>
    <Description>
      Represents a position in a three space coordinate system. The positions
      must be given in millimeters.
    </Description>
    <References>
      <!-- HasEncoding - (Reverse) - ThreeSpaceSampleDataType ns=1;i=2637   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2637</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2910   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2910</Reference>
    </References>
  </UAObject>
  <!-- Binary DataTypeDescription for ThreeSpaceSampleDataType -->
  <UAVariable NodeId='ns=1;i=2910' BrowseName='1:ThreeSpaceSampleDataType' DataType='String' ParentNodeId='ns=1;i=2729'>
    <DisplayName>ThreeSpaceSampleDataType</DisplayName>
    <Description>
      Represents a position in a three space coordinate system. The positions
      must be given in millimeters.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasProperty -  - DictionaryFragment ns=1;i=2911   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2911</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2729   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2729</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>ThreeSpaceSampleDataType</String>
    </Value>
  </UAVariable>
  <!-- DictionaryFragment for ThreeSpaceSampleDataType -->
  <UAVariable NodeId='ns=1;i=2911' BrowseName='1:DictionaryFragment' DataType='ByteString' ParentNodeId='ns=1;i=2910'>
    <DisplayName>DictionaryFragment</DisplayName>
    <Description>
      Represents a position in a three space coordinate system. The positions
      must be given in millimeters.
    </Description>
    <References>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2910   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2910</Reference>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
    </References>
    <Value>
      <ByteString xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <![CDATA[PG9wYzpTdHJ1Y3R1cmVkVHlwZSBOYW1lPSdUaHJlZVNwYWNlU2FtcGxlRGF0
YVR5cGUnIEJhc2VUeXBlPSd1YTpFeHRlbnNpb25PYmplY3QnPgogIDxvcGM6
RG9jdW1lbnRhdGlvbj5UaGUgZW5jb2RpbmcgZm9yIFRocmVlU3BhY2VTYW1w
bGVEYXRhVHlwZTwvb3BjOkRvY3VtZW50YXRpb24+CiAgPG9wYzpGaWVsZCBO
YW1lPSdYJyBUeXBlTmFtZT0nb3BjOkRvdWJsZScvPgogIDxvcGM6RmllbGQg
TmFtZT0nWScgVHlwZU5hbWU9J29wYzpEb3VibGUnLz4KICA8b3BjOkZpZWxk
IE5hbWU9J1onIFR5cGVOYW1lPSdvcGM6RG91YmxlJy8+Cjwvb3BjOlN0cnVj
dHVyZWRUeXBlPg==
]]>
      </ByteString>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of ThreeSpaceSampleDataType -->
  <UAObject NodeId='ns=1;i=2912' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <Description>
      Represents a position in a three space coordinate system. The positions
      must be given in millimeters.
    </Description>
    <References>
      <!-- HasEncoding - (Reverse) - ThreeSpaceSampleDataType ns=1;i=2637   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2637</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2913   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2913</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for ThreeSpaceSampleDataType -->
  <UAVariable NodeId='ns=1;i=2913' BrowseName='1:ThreeSpaceSampleDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>ThreeSpaceSampleDataType</DisplayName>
    <Description>
      Represents a position in a three space coordinate system. The positions
      must be given in millimeters.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;ThreeSpaceSampleDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Default JSON encoding of ThreeSpaceSampleDataType -->
  <UAObject NodeId='ns=1;i=2914' BrowseName='Default JSON'>
    <DisplayName>Default JSON</DisplayName>
    <Description>
      Represents a position in a three space coordinate system. The positions
      must be given in millimeters.
    </Description>
    <References>
      <!-- HasEncoding - (Reverse) - ThreeSpaceSampleDataType ns=1;i=2637   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2637</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
    </References>
  </UAObject>
  <!-- Definition of Object MTConditionEventType ns=1;i=4326 -->
  <UAObjectType NodeId='ns=1;i=4326' BrowseName='1:MTConditionEventType'>
    <DisplayName>MTConditionEventType</DisplayName>
    <Description>
      The condition type is derived from the UA \uamodel{ContitionType}. When
      the \mtmodel{Warning} or \mtmodel{Fault} state occurs, an
      \mtuatype{MTConditionEventType} \uamodel{Event} is created with the
      \mtmodel{ActiveState} set to \uamodel{True} and \uamodel{Retain} set to
      \uamodel{True}. The severity is used to represent the MTConnect condition
      states of Warning and Fault with the values of 500 and 1000 respectively.
      A new \uamodel{NodeId} will be created for every unique instance of the
      MTConnect \mtmodel{Condition} reported. When the \mtmodel{Condition} goes
      back to Normal, the \mtmodel{ActiveState} is set to \uamodel{False} and
      \uamodel{Retain} is also set to \uamodel{False} with the \uamodel{NodeId}
      of the associated \mtmodel{Condition}. If multiple MTConnect
      \mtmodel{Condition}s have been cleared at the same time, all currently
      active \mtuatype{MTConditionEventType} \uamodel{Event}s will need to
      deactivated. The \mtuatype{MTConditionEventType} must set the
      \uamodel{BaseEvent} \uamodel{SourceNode} to the related
      \mtuatype{MTConditionType} that represents the meta-data for this
      Condition. The \mtuatype{MTConditionEventType} will never be instantiated
      in the \uaterm{AddressSpace} as an \uamodel{Object}. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - ConditionType i=2782   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=2782</Reference>
      <!-- HasProperty -  - ActiveState ns=1;i=4336 LocalizedText  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=4336</Reference>
      <!-- HasProperty -  - DataItemId ns=1;i=4327 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=4327</Reference>
      <!-- HasProperty -  - MTSeverity ns=1;i=4328 MTSeverityDataType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=4328</Reference>
      <!-- HasProperty -  - MTSubTypeName ns=1;i=4329 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=4329</Reference>
      <!-- HasProperty -  - MTTypeName ns=1;i=4330 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=4330</Reference>
      <!-- HasProperty -  - NativeCode ns=1;i=4331 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=4331</Reference>
      <!-- HasProperty -  - NativeSeverity ns=1;i=4332 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=4332</Reference>
      <!-- HasProperty -  - Qualifier ns=1;i=4333 QualifierDataType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=4333</Reference>
    </References>
  </UAObjectType>
  <!-- MTConditionEventType::ActiveState : LocalizedText[1] -->
  <UAVariable NodeId='ns=1;i=4336' BrowseName='1:ActiveState' ValueRank='-1' DataType='LocalizedText' ParentNodeId='ns=1;i=4326'>
    <DisplayName>ActiveState</DisplayName>
    <Description>
      The condition type is derived from the UA \uamodel{ContitionType}. When
      the \mtmodel{Warning} or \mtmodel{Fault} state occurs, an
      \mtuatype{MTConditionEventType} \uamodel{Event} is created with the
      \mtmodel{ActiveState} set to \uamodel{True} and \uamodel{Retain} set to
      \uamodel{True}. The severity is used to represent the MTConnect condition
      states of Warning and Fault with the values of 500 and 1000 respectively.
      A new \uamodel{NodeId} will be created for every unique instance of the
      MTConnect \mtmodel{Condition} reported. When the \mtmodel{Condition} goes
      back to Normal, the \mtmodel{ActiveState} is set to \uamodel{False} and
      \uamodel{Retain} is also set to \uamodel{False} with the \uamodel{NodeId}
      of the associated \mtmodel{Condition}. If multiple MTConnect
      \mtmodel{Condition}s have been cleared at the same time, all currently
      active \mtuatype{MTConditionEventType} \uamodel{Event}s will need to
      deactivated. The \mtuatype{MTConditionEventType} must set the
      \uamodel{BaseEvent} \uamodel{SourceNode} to the related
      \mtuatype{MTConditionType} that represents the meta-data for this
      Condition. The \mtuatype{MTConditionEventType} will never be instantiated
      in the \uaterm{AddressSpace} as an \uamodel{Object}. 
    </Description>
    <References>
      <!-- HasTypeDefinition -  - LocalizedText i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTConditionEventType ns=1;i=4326   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=4326</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionEventType::DataItemId : String[1] -->
  <UAVariable NodeId='ns=1;i=4327' BrowseName='1:DataItemId' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=4326'>
    <DisplayName>DataItemId</DisplayName>
    <Description>
      The condition type is derived from the UA \uamodel{ContitionType}. When
      the \mtmodel{Warning} or \mtmodel{Fault} state occurs, an
      \mtuatype{MTConditionEventType} \uamodel{Event} is created with the
      \mtmodel{ActiveState} set to \uamodel{True} and \uamodel{Retain} set to
      \uamodel{True}. The severity is used to represent the MTConnect condition
      states of Warning and Fault with the values of 500 and 1000 respectively.
      A new \uamodel{NodeId} will be created for every unique instance of the
      MTConnect \mtmodel{Condition} reported. When the \mtmodel{Condition} goes
      back to Normal, the \mtmodel{ActiveState} is set to \uamodel{False} and
      \uamodel{Retain} is also set to \uamodel{False} with the \uamodel{NodeId}
      of the associated \mtmodel{Condition}. If multiple MTConnect
      \mtmodel{Condition}s have been cleared at the same time, all currently
      active \mtuatype{MTConditionEventType} \uamodel{Event}s will need to
      deactivated. The \mtuatype{MTConditionEventType} must set the
      \uamodel{BaseEvent} \uamodel{SourceNode} to the related
      \mtuatype{MTConditionType} that represents the meta-data for this
      Condition. The \mtuatype{MTConditionEventType} will never be instantiated
      in the \uaterm{AddressSpace} as an \uamodel{Object}. 
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTConditionEventType ns=1;i=4326   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=4326</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionEventType::MTSeverity : MTSeverityDataType[1] -->
  <UAVariable NodeId='ns=1;i=4328' BrowseName='1:MTSeverity' ValueRank='-1' DataType='ns=1;i=2669' ParentNodeId='ns=1;i=4326'>
    <DisplayName>MTSeverity</DisplayName>
    <Description>
      The condition type is derived from the UA \uamodel{ContitionType}. When
      the \mtmodel{Warning} or \mtmodel{Fault} state occurs, an
      \mtuatype{MTConditionEventType} \uamodel{Event} is created with the
      \mtmodel{ActiveState} set to \uamodel{True} and \uamodel{Retain} set to
      \uamodel{True}. The severity is used to represent the MTConnect condition
      states of Warning and Fault with the values of 500 and 1000 respectively.
      A new \uamodel{NodeId} will be created for every unique instance of the
      MTConnect \mtmodel{Condition} reported. When the \mtmodel{Condition} goes
      back to Normal, the \mtmodel{ActiveState} is set to \uamodel{False} and
      \uamodel{Retain} is also set to \uamodel{False} with the \uamodel{NodeId}
      of the associated \mtmodel{Condition}. If multiple MTConnect
      \mtmodel{Condition}s have been cleared at the same time, all currently
      active \mtuatype{MTConditionEventType} \uamodel{Event}s will need to
      deactivated. The \mtuatype{MTConditionEventType} must set the
      \uamodel{BaseEvent} \uamodel{SourceNode} to the related
      \mtuatype{MTConditionType} that represents the meta-data for this
      Condition. The \mtuatype{MTConditionEventType} will never be instantiated
      in the \uaterm{AddressSpace} as an \uamodel{Object}. 
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTSeverityDataType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTConditionEventType ns=1;i=4326   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=4326</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionEventType::MTSubTypeName : String[1] -->
  <UAVariable NodeId='ns=1;i=4329' BrowseName='1:MTSubTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=4326'>
    <DisplayName>MTSubTypeName</DisplayName>
    <Description>
      The condition type is derived from the UA \uamodel{ContitionType}. When
      the \mtmodel{Warning} or \mtmodel{Fault} state occurs, an
      \mtuatype{MTConditionEventType} \uamodel{Event} is created with the
      \mtmodel{ActiveState} set to \uamodel{True} and \uamodel{Retain} set to
      \uamodel{True}. The severity is used to represent the MTConnect condition
      states of Warning and Fault with the values of 500 and 1000 respectively.
      A new \uamodel{NodeId} will be created for every unique instance of the
      MTConnect \mtmodel{Condition} reported. When the \mtmodel{Condition} goes
      back to Normal, the \mtmodel{ActiveState} is set to \uamodel{False} and
      \uamodel{Retain} is also set to \uamodel{False} with the \uamodel{NodeId}
      of the associated \mtmodel{Condition}. If multiple MTConnect
      \mtmodel{Condition}s have been cleared at the same time, all currently
      active \mtuatype{MTConditionEventType} \uamodel{Event}s will need to
      deactivated. The \mtuatype{MTConditionEventType} must set the
      \uamodel{BaseEvent} \uamodel{SourceNode} to the related
      \mtuatype{MTConditionType} that represents the meta-data for this
      Condition. The \mtuatype{MTConditionEventType} will never be instantiated
      in the \uaterm{AddressSpace} as an \uamodel{Object}. 
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTConditionEventType ns=1;i=4326   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=4326</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionEventType::MTTypeName : String[1] -->
  <UAVariable NodeId='ns=1;i=4330' BrowseName='1:MTTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=4326'>
    <DisplayName>MTTypeName</DisplayName>
    <Description>
      The condition type is derived from the UA \uamodel{ContitionType}. When
      the \mtmodel{Warning} or \mtmodel{Fault} state occurs, an
      \mtuatype{MTConditionEventType} \uamodel{Event} is created with the
      \mtmodel{ActiveState} set to \uamodel{True} and \uamodel{Retain} set to
      \uamodel{True}. The severity is used to represent the MTConnect condition
      states of Warning and Fault with the values of 500 and 1000 respectively.
      A new \uamodel{NodeId} will be created for every unique instance of the
      MTConnect \mtmodel{Condition} reported. When the \mtmodel{Condition} goes
      back to Normal, the \mtmodel{ActiveState} is set to \uamodel{False} and
      \uamodel{Retain} is also set to \uamodel{False} with the \uamodel{NodeId}
      of the associated \mtmodel{Condition}. If multiple MTConnect
      \mtmodel{Condition}s have been cleared at the same time, all currently
      active \mtuatype{MTConditionEventType} \uamodel{Event}s will need to
      deactivated. The \mtuatype{MTConditionEventType} must set the
      \uamodel{BaseEvent} \uamodel{SourceNode} to the related
      \mtuatype{MTConditionType} that represents the meta-data for this
      Condition. The \mtuatype{MTConditionEventType} will never be instantiated
      in the \uaterm{AddressSpace} as an \uamodel{Object}. 
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTConditionEventType ns=1;i=4326   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=4326</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionEventType::NativeCode : String[0..1] -->
  <UAVariable NodeId='ns=1;i=4331' BrowseName='1:NativeCode' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=4326'>
    <DisplayName>NativeCode</DisplayName>
    <Description>
      The condition type is derived from the UA \uamodel{ContitionType}. When
      the \mtmodel{Warning} or \mtmodel{Fault} state occurs, an
      \mtuatype{MTConditionEventType} \uamodel{Event} is created with the
      \mtmodel{ActiveState} set to \uamodel{True} and \uamodel{Retain} set to
      \uamodel{True}. The severity is used to represent the MTConnect condition
      states of Warning and Fault with the values of 500 and 1000 respectively.
      A new \uamodel{NodeId} will be created for every unique instance of the
      MTConnect \mtmodel{Condition} reported. When the \mtmodel{Condition} goes
      back to Normal, the \mtmodel{ActiveState} is set to \uamodel{False} and
      \uamodel{Retain} is also set to \uamodel{False} with the \uamodel{NodeId}
      of the associated \mtmodel{Condition}. If multiple MTConnect
      \mtmodel{Condition}s have been cleared at the same time, all currently
      active \mtuatype{MTConditionEventType} \uamodel{Event}s will need to
      deactivated. The \mtuatype{MTConditionEventType} must set the
      \uamodel{BaseEvent} \uamodel{SourceNode} to the related
      \mtuatype{MTConditionType} that represents the meta-data for this
      Condition. The \mtuatype{MTConditionEventType} will never be instantiated
      in the \uaterm{AddressSpace} as an \uamodel{Object}. 
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTConditionEventType ns=1;i=4326   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=4326</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionEventType::NativeSeverity : String[0..1] -->
  <UAVariable NodeId='ns=1;i=4332' BrowseName='1:NativeSeverity' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=4326'>
    <DisplayName>NativeSeverity</DisplayName>
    <Description>
      The condition type is derived from the UA \uamodel{ContitionType}. When
      the \mtmodel{Warning} or \mtmodel{Fault} state occurs, an
      \mtuatype{MTConditionEventType} \uamodel{Event} is created with the
      \mtmodel{ActiveState} set to \uamodel{True} and \uamodel{Retain} set to
      \uamodel{True}. The severity is used to represent the MTConnect condition
      states of Warning and Fault with the values of 500 and 1000 respectively.
      A new \uamodel{NodeId} will be created for every unique instance of the
      MTConnect \mtmodel{Condition} reported. When the \mtmodel{Condition} goes
      back to Normal, the \mtmodel{ActiveState} is set to \uamodel{False} and
      \uamodel{Retain} is also set to \uamodel{False} with the \uamodel{NodeId}
      of the associated \mtmodel{Condition}. If multiple MTConnect
      \mtmodel{Condition}s have been cleared at the same time, all currently
      active \mtuatype{MTConditionEventType} \uamodel{Event}s will need to
      deactivated. The \mtuatype{MTConditionEventType} must set the
      \uamodel{BaseEvent} \uamodel{SourceNode} to the related
      \mtuatype{MTConditionType} that represents the meta-data for this
      Condition. The \mtuatype{MTConditionEventType} will never be instantiated
      in the \uaterm{AddressSpace} as an \uamodel{Object}. 
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTConditionEventType ns=1;i=4326   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=4326</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionEventType::Qualifier : QualifierDataType[0..1] -->
  <UAVariable NodeId='ns=1;i=4333' BrowseName='1:Qualifier' ValueRank='-1' DataType='ns=1;i=2668' ParentNodeId='ns=1;i=4326'>
    <DisplayName>Qualifier</DisplayName>
    <Description>
      The condition type is derived from the UA \uamodel{ContitionType}. When
      the \mtmodel{Warning} or \mtmodel{Fault} state occurs, an
      \mtuatype{MTConditionEventType} \uamodel{Event} is created with the
      \mtmodel{ActiveState} set to \uamodel{True} and \uamodel{Retain} set to
      \uamodel{True}. The severity is used to represent the MTConnect condition
      states of Warning and Fault with the values of 500 and 1000 respectively.
      A new \uamodel{NodeId} will be created for every unique instance of the
      MTConnect \mtmodel{Condition} reported. When the \mtmodel{Condition} goes
      back to Normal, the \mtmodel{ActiveState} is set to \uamodel{False} and
      \uamodel{Retain} is also set to \uamodel{False} with the \uamodel{NodeId}
      of the associated \mtmodel{Condition}. If multiple MTConnect
      \mtmodel{Condition}s have been cleared at the same time, all currently
      active \mtuatype{MTConditionEventType} \uamodel{Event}s will need to
      deactivated. The \mtuatype{MTConditionEventType} must set the
      \uamodel{BaseEvent} \uamodel{SourceNode} to the related
      \mtuatype{MTConditionType} that represents the meta-data for this
      Condition. The \mtuatype{MTConditionEventType} will never be instantiated
      in the \uaterm{AddressSpace} as an \uamodel{Object}. 
    </Description>
    <References>
      <!-- HasTypeDefinition -  - QualifierDataType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTConditionEventType ns=1;i=4326   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=4326</Reference>
    </References>
  </UAVariable>
  <!-- Definition of Object MTConditionType ns=1;i=2660 -->
  <UAObjectType NodeId='ns=1;i=2660' BrowseName='1:MTConditionType'>
    <DisplayName>MTConditionType</DisplayName>
    <Description>
      An \mtmodel{MTConditionType} instance will be created for event MTConnect
      \gls{MTDataItem} with a \gls{category} of \mtmodel{CONDITION}. The
      \gls{BrowseName} of the condition uses the same naming convention as the
      MTConnect \gls{MTDataItem} types with \gls{MTCondition} appended as a
      suffix. For example the condition with \gls{type} of \mtmodel{TEMPERATURE}
      will have the browse name of \mtmodel{TemperatureCondition} as opposed to
      the \mtuatype{MTSampleType} of \mtmodel{Temperature}. An XML element which
      provides the information and data reported from a piece of equipment for
      those dataitem elements defined with a category attribute of condition
      category in the mtconnectdevices document.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - BaseObjectType i=58   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=58</Reference>
      <!-- HasProperty -  - Category ns=1;i=2917 MTCategoryType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2917</Reference>
      <!-- HasProperty -  - MTSubTypeName ns=1;i=2919 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2919</Reference>
      <!-- HasProperty -  - MTTypeName ns=1;i=2918 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2918</Reference>
      <!-- HasProperty -  - Name ns=1;i=2916 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2916</Reference>
      <!-- HasProperty -  - PeriodFilter ns=1;i=2923 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2923</Reference>
      <!-- HasProperty -  - Representation ns=1;i=2922 MTRepresentationType  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2922</Reference>
      <!-- HasProperty -  - SampleRate ns=1;i=2921 Double  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2921</Reference>
      <!-- HasProperty -  - SourceData ns=1;i=2920 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2920</Reference>
      <!-- HasProperty -  - XmlId ns=1;i=2915 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2915</Reference>
      <!-- HasComponent -  - Constraints ns=1;i=2924 MTConstraintType  -->
      <Reference ReferenceType='HasComponent'>ns=1;i=2924</Reference>
    </References>
  </UAObjectType>
  <!-- MTConditionType::Category : MTCategoryType[1] -->
  <UAVariable NodeId='ns=1;i=2917' BrowseName='1:Category' ValueRank='-1' DataType='ns=1;i=2634' ParentNodeId='ns=1;i=2660'>
    <DisplayName>Category</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTCategoryType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTConditionType ns=1;i=2660   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2660</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionType::MTSubTypeName : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2919' BrowseName='1:MTSubTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2660'>
    <DisplayName>MTSubTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTConditionType ns=1;i=2660   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2660</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionType::MTTypeName : String[1] -->
  <UAVariable NodeId='ns=1;i=2918' BrowseName='1:MTTypeName' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2660'>
    <DisplayName>MTTypeName</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTConditionType ns=1;i=2660   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2660</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionType::Name : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2916' BrowseName='1:Name' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2660'>
    <DisplayName>Name</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTConditionType ns=1;i=2660   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2660</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionType::PeriodFilter : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2923' BrowseName='1:PeriodFilter' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2660'>
    <DisplayName>PeriodFilter</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTConditionType ns=1;i=2660   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2660</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionType::Representation : MTRepresentationType[0..1] -->
  <UAVariable NodeId='ns=1;i=2922' BrowseName='1:Representation' ValueRank='-1' DataType='ns=1;i=2633' ParentNodeId='ns=1;i=2660'>
    <DisplayName>Representation</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - MTRepresentationType i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTConditionType ns=1;i=2660   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2660</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionType::SampleRate : Double[0..1] -->
  <UAVariable NodeId='ns=1;i=2921' BrowseName='1:SampleRate' ValueRank='-1' DataType='Double' ParentNodeId='ns=1;i=2660'>
    <DisplayName>SampleRate</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Double i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTConditionType ns=1;i=2660   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2660</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionType::SourceData : String[0..1] -->
  <UAVariable NodeId='ns=1;i=2920' BrowseName='1:SourceData' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2660'>
    <DisplayName>SourceData</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - MTConditionType ns=1;i=2660   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2660</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionType::XmlId : String[1] -->
  <UAVariable NodeId='ns=1;i=2915' BrowseName='1:XmlId' ValueRank='-1' DataType='String' ParentNodeId='ns=1;i=2660'>
    <DisplayName>XmlId</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - MTConditionType ns=1;i=2660   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2660</Reference>
    </References>
  </UAVariable>
  <!-- MTConditionType::Constraints : MTConstraintType[0..1] -->
  <UAObject NodeId='ns=1;i=2924' BrowseName='1:Constraints' ParentNodeId='ns=1;i=2660'>
    <DisplayName>Constraints</DisplayName>
    <Description>
      The data item mixin will inject the properties and the methods into the
      related classes. This facility is similar to the Ruby module mixin or the
      Scala traits. data entity describing a piece of information reported about
      a piece of equipment.
    </Description>
    <References>
      <!-- HasProperty -  - Maximum ns=1;i=2927 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2927</Reference>
      <!-- HasProperty -  - Minimum ns=1;i=2926 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2926</Reference>
      <!-- HasProperty -  - Nominal ns=1;i=2928 Float  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2928</Reference>
      <!-- HasProperty -  - Values ns=1;i=2925 String  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2925</Reference>
      <!-- HasTypeDefinition -  - MTConstraintType ns=1;i=2647   -->
      <Reference ReferenceType='HasTypeDefinition'>ns=1;i=2647</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasComponent - (Reverse) - MTConditionType ns=1;i=2660   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2660</Reference>
    </References>
  </UAObject>
  <!-- Constraints::Maximum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2927' BrowseName='1:Maximum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2924'>
    <DisplayName>Maximum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2924   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2924</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Minimum : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2926' BrowseName='1:Minimum' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2924'>
    <DisplayName>Minimum</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2924   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2924</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Nominal : Float[0..1] -->
  <UAVariable NodeId='ns=1;i=2928' BrowseName='1:Nominal' ValueRank='-1' DataType='Float' ParentNodeId='ns=1;i=2924'>
    <DisplayName>Nominal</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - Float i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2924   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2924</Reference>
    </References>
  </UAVariable>
  <!-- Constraints::Values : String[0..*] -->
  <UAVariable NodeId='ns=1;i=2925' BrowseName='1:Values' ValueRank='1' DataType='String' ParentNodeId='ns=1;i=2924'>
    <DisplayName>Values</DisplayName>
    <Description>
      The MTConnect constraints. The Values or the Minimum, Maximum, and Nominal
      values should be provided. Multiple Values can be provided as an array as
      a set of allowable values for this \gls{MTDataItem}. A constraint is used
      by a software application to evaluate the validity of the reported data.
    </Description>
    <References>
      <!-- HasTypeDefinition -  - String i=68 PropertyType  -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Optional i=80   -->
      <Reference ReferenceType='HasModellingRule'>i=80</Reference>
      <!-- HasProperty - (Reverse) - Constraints ns=1;i=2924   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2924</Reference>
    </References>
  </UAVariable>
  <!-- Definition of Enumeration MTSeverityDataType ns=1;i=2669 -->
  <UADataType NodeId='ns=1;i=2669' BrowseName='1:MTSeverityDataType'>
    <DisplayName>MTSeverityDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2937   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2937</Reference>
    </References>
    <Description></Description>
    <Definition Name='MTSeverityDataType'>
      <Field Name='FAULT' Value='0'>
        <Description>Fault value for a condition element.</Description>
      </Field>
      <Field Name='NORMAL' Value='1'>
        <Description>Normal value for a condition element.</Description>
      </Field>
      <Field Name='WARNING' Value='2'>
        <Description>Warning value for a condition element.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- MTSeverityDataType::EnumStrings ns=1;i=2937 -->
  <UAVariable NodeId='ns=1;i=2937' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2669'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2669   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2669</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>FAULT</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>NORMAL</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>WARNING</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of MTSeverityDataType -->
  <UAObject NodeId='ns=1;i=2941' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - MTSeverityDataType ns=1;i=2669   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2669</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2942   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2942</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for MTSeverityDataType -->
  <UAVariable NodeId='ns=1;i=2942' BrowseName='1:MTSeverityDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>MTSeverityDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;MTSeverityDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration QualifierDataType ns=1;i=2668 -->
  <UADataType NodeId='ns=1;i=2668' BrowseName='1:QualifierDataType'>
    <DisplayName>QualifierDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2943   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2943</Reference>
    </References>
    <Description></Description>
    <Definition Name='QualifierDataType'>
      <Field Name='HIGH' Value='0'>
        <Description>High qualifier value for a condition element.</Description>
      </Field>
      <Field Name='LOW' Value='1'>
        <Description>Low qualifier value for a condition element.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- QualifierDataType::EnumStrings ns=1;i=2943 -->
  <UAVariable NodeId='ns=1;i=2943' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2668'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2668   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2668</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>HIGH</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>LOW</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of QualifierDataType -->
  <UAObject NodeId='ns=1;i=2947' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - QualifierDataType ns=1;i=2668   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2668</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2948   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2948</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for QualifierDataType -->
  <UAVariable NodeId='ns=1;i=2948' BrowseName='1:QualifierDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>QualifierDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;QualifierDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Object MTDataItemClassType ns=1;i=2425 -->
  <UAObjectType NodeId='ns=1;i=2425' BrowseName='1:MTDataItemClassType' IsAbstract='true'>
    <DisplayName>MTDataItemClassType</DisplayName>
    <Description>
      Abstract base class for all the data item class types. The names are
      created by pascal typing the names and then generating appending
      \mtmodel{Type}. data entity describing a piece of information reported
      about a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - BaseConditionClassType i=11163   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=11163</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MTMessageClassType ns=1;i=2427 -->
  <UAObjectType NodeId='ns=1;i=2427' BrowseName='1:MTMessageClassType'>
    <DisplayName>MTMessageClassType</DisplayName>
    <Description>
       Any text string of information to be transferred from a piece of
      equipment to a client software application.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTEventClassType ns=1;i=2631   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2631</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MTSampleClassType ns=1;i=2345 -->
  <UAObjectType NodeId='ns=1;i=2345' BrowseName='1:MTSampleClassType' IsAbstract='true'>
    <DisplayName>MTSampleClassType</DisplayName>
    <Description>
      The base type class for all data items with a \gls{category} of
      \mtmodel{SAMPLE}. An XML element that provides the information and data
      reported from a piece of equipment for those dataitem elements defined
      with a category attribute of sample category in the mtconnectdevices
      document. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemClassType ns=1;i=2425   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2425</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AccelerationClassType ns=1;i=2265 -->
  <UAObjectType NodeId='ns=1;i=2265' BrowseName='1:AccelerationClassType'>
    <DisplayName>AccelerationClassType</DisplayName>
    <Description>
      Rate of change of velocity. $\frac{MILLIMETER}{SECOND^{2}}$ The
      measurement of the rate of change of velocity.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AccumulatedTimeClassType ns=1;i=2267 -->
  <UAObjectType NodeId='ns=1;i=2267' BrowseName='1:AccumulatedTimeClassType'>
    <DisplayName>AccumulatedTimeClassType</DisplayName>
    <Description>
      The measurement of accumulated time for an activity or event. $SECOND$ The
      measurement of accumulated time for an activity or event.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AmperageClassType ns=1;i=2273 -->
  <UAObjectType NodeId='ns=1;i=2273' BrowseName='1:AmperageClassType'>
    <DisplayName>AmperageClassType</DisplayName>
    <Description>
      The measurement of electrical current. $AMPERE$ DEPRECATED in Version 1.6.
      Replaced by amperageac sample and amperagedc sample.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AngleClassType ns=1;i=2275 -->
  <UAObjectType NodeId='ns=1;i=2275' BrowseName='1:AngleClassType'>
    <DisplayName>AngleClassType</DisplayName>
    <Description>
      The measurement of angular position. $DEGREE$ The measurement of angular
      position.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AngularAccelerationClassType ns=1;i=2269 -->
  <UAObjectType NodeId='ns=1;i=2269' BrowseName='1:AngularAccelerationClassType'>
    <DisplayName>AngularAccelerationClassType</DisplayName>
    <Description>
      Rate of change of angular velocity. $\frac{DEGREE}{SECOND^{2}}$ The
      measurement rate of change of angular velocity.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AngularVelocityClassType ns=1;i=2271 -->
  <UAObjectType NodeId='ns=1;i=2271' BrowseName='1:AngularVelocityClassType'>
    <DisplayName>AngularVelocityClassType</DisplayName>
    <Description>
      Rate of change of angular position. $\frac{DEGREE}{SECOND}$ The
      measurement of the rate of change of angular position.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AxisFeedrateClassType ns=1;i=2277 -->
  <UAObjectType NodeId='ns=1;i=2277' BrowseName='1:AxisFeedrateClassType'>
    <DisplayName>AxisFeedrateClassType</DisplayName>
    <Description>
      The feedrate of a linear axis. $\frac{MILLIMETER}{SECOND}$ The measurement
      of the feedrate of a linear axis.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ClockTimeClassType ns=1;i=2279 -->
  <UAObjectType NodeId='ns=1;i=2279' BrowseName='1:ClockTimeClassType'>
    <DisplayName>ClockTimeClassType</DisplayName>
    <Description>
      The value provided by a timing device at a specific point in time.
      $TIMESTAMP$ The value provided by a timing device at a specific point in
      time.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ConcentrationClassType ns=1;i=2281 -->
  <UAObjectType NodeId='ns=1;i=2281' BrowseName='1:ConcentrationClassType'>
    <DisplayName>ConcentrationClassType</DisplayName>
    <Description>
      Percentage of one component within a mixture of components. $PERCENT$ The
      measurement of the percentage of one component within a mixture of
      components
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ConductivityClassType ns=1;i=2283 -->
  <UAObjectType NodeId='ns=1;i=2283' BrowseName='1:ConductivityClassType'>
    <DisplayName>ConductivityClassType</DisplayName>
    <Description>
      The ability of a material to conduct electricity. $\frac{SIEMENS}{METER}$
      The measurement of the ability of a material to conduct electricity.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object DisplacementClassType ns=1;i=2285 -->
  <UAObjectType NodeId='ns=1;i=2285' BrowseName='1:DisplacementClassType'>
    <DisplayName>DisplacementClassType</DisplayName>
    <Description>
      The change in position of an object. $MILLIMETER$ The measurement of the
      change in position of an object.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ElectricalEnergyClassType ns=1;i=2287 -->
  <UAObjectType NodeId='ns=1;i=2287' BrowseName='1:ElectricalEnergyClassType'>
    <DisplayName>ElectricalEnergyClassType</DisplayName>
    <Description>
      The measurement of electrical energy consumption by a component. $WATT
      \times SECOND$ The measurement of electrical energy consumption by a
      component.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object EquipmentTimerClassType ns=1;i=2289 -->
  <UAObjectType NodeId='ns=1;i=2289' BrowseName='1:EquipmentTimerClassType'>
    <DisplayName>EquipmentTimerClassType</DisplayName>
    <Description>
      The measurement of the amount of time a \mtmodel{SECOND} piece of
      equipment or a sub-part of a piece of equipment has performed specific
      activities. Often used to determine when maintenance may be required for
      the equipment. Multiple subTypes of \mtmodel{EQUIPMENT_TIMER} MAY be
      defined. A subType MUST always be specified. $SECOND$ The measurement of
      the amount of time a piece of equipment or a sub-part of a piece of
      equipment has performed specific activities.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object FillLevelClassType ns=1;i=2291 -->
  <UAObjectType NodeId='ns=1;i=2291' BrowseName='1:FillLevelClassType'>
    <DisplayName>FillLevelClassType</DisplayName>
    <Description>
      The measurement of the amount of a substance remaining compared to the
      planned maximum amount of that substance. $PERCENT$ The measurement of the
      amount of a substance remaining compared to the planned maximum amount of
      that substance.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object FlowClassType ns=1;i=2293 -->
  <UAObjectType NodeId='ns=1;i=2293' BrowseName='1:FlowClassType'>
    <DisplayName>FlowClassType</DisplayName>
    <Description>
      The rate of flow of a fluid. $\frac{LITER}{SECOND}$ The measurement of the
      rate of flow of a fluid.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object FrequencyClassType ns=1;i=2295 -->
  <UAObjectType NodeId='ns=1;i=2295' BrowseName='1:FrequencyClassType'>
    <DisplayName>FrequencyClassType</DisplayName>
    <Description>
      The measurement of the number of occurrences of a repeating event per unit
      time. $HERTZ$ The measurement of the number of occurrences of a repeating
      event per unit time.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LengthClassType ns=1;i=2297 -->
  <UAObjectType NodeId='ns=1;i=2297' BrowseName='1:LengthClassType'>
    <DisplayName>LengthClassType</DisplayName>
    <Description>
      The length of an object. $MILLIMETER$ The measurement of the length of an
      object.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LinearForceClassType ns=1;i=2299 -->
  <UAObjectType NodeId='ns=1;i=2299' BrowseName='1:LinearForceClassType'>
    <DisplayName>LinearForceClassType</DisplayName>
    <Description>
      The measure of the push or pull introduced by an actuator or exerted on an
      object. $NEWTON$ The measurement of the push or pull introduced by an
      actuator or exerted on an object.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LoadClassType ns=1;i=2263 -->
  <UAObjectType NodeId='ns=1;i=2263' BrowseName='1:LoadClassType'>
    <DisplayName>LoadClassType</DisplayName>
    <Description>
      The measurement of the actual versus the standard rating of a piece of
      equipment. $PERCENT$ The measurement of the actual versus the standard
      rating of a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MassClassType ns=1;i=2301 -->
  <UAObjectType NodeId='ns=1;i=2301' BrowseName='1:MassClassType'>
    <DisplayName>MassClassType</DisplayName>
    <Description>
      The measurement of the mass of an object(s) or an amount of material.
      $KILOGRAM$ The measurement of the mass of an object(s) or an amount of
      material.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PathFeedrateClassType ns=1;i=2303 -->
  <UAObjectType NodeId='ns=1;i=2303' BrowseName='1:PathFeedrateClassType'>
    <DisplayName>PathFeedrateClassType</DisplayName>
    <Description>
      The feedrate for the axes, or a single axis, associated with a
      \mtmodel{Path} component a vector. $\frac{MILLIMETER}{SECOND}$ The
      measurement of the feedrate for the axes, or a single axis, associated
      with a path component-a vector.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PathPositionClassType ns=1;i=2305 -->
  <UAObjectType NodeId='ns=1;i=2305' BrowseName='1:PathPositionClassType'>
    <DisplayName>PathPositionClassType</DisplayName>
    <Description>
      A measured or calculated position of a control point associated with a
      \mtmodel{Controller} element, or PATH element if provided, of a piece of
      equipment. The control point MUST be reported as a set of space-delimited
      floating-point numbers representing a point in 3-D space. The position of
      the control point MUST be reported in units of \mtmodel{MILLIMETER} and
      listed in order of X, Y, and Z referenced to the coordinate system of the
      piece of equipment. $MILLIMETER (\mathbb{R}^{3})$ A measured or calculated
      position of a control point associated with a controller element, or path
      element if provided, of a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PHClassType ns=1;i=2307 -->
  <UAObjectType NodeId='ns=1;i=2307' BrowseName='1:PHClassType'>
    <DisplayName>PHClassType</DisplayName>
    <Description>
      The measure of the acidity or alkalinity. $PH$ A measure of the acidity or
      alkalinity of a solution.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PositionClassType ns=1;i=2309 -->
  <UAObjectType NodeId='ns=1;i=2309' BrowseName='1:PositionClassType'>
    <DisplayName>PositionClassType</DisplayName>
    <Description>
      A calculated or measured position related to a Component element.
      \mtmodel{POSITION} SHOULD be further defined
      withacoordinateSytemattribute. If a coordinateSystem attribute is not
      specified, the position of the control point MUST be reported in
      \mtmodel{MACHINE} coordinates. $MILLIMETER$ A measured or calculated
      position of a component element as reported by a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PowerFactorClassType ns=1;i=2311 -->
  <UAObjectType NodeId='ns=1;i=2311' BrowseName='1:PowerFactorClassType'>
    <DisplayName>PowerFactorClassType</DisplayName>
    <Description>
      The measurement of the ratio of real power flowing to a load to the
      apparent power in that AC circuit. $PERCENT$ The measurement of the ratio
      of real power flowing to a load to the apparent power in that AC circuit.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PressureClassType ns=1;i=2313 -->
  <UAObjectType NodeId='ns=1;i=2313' BrowseName='1:PressureClassType'>
    <DisplayName>PressureClassType</DisplayName>
    <Description>
      The force per unit area exerted by a gas or liquid. $PASCAL$ The
      measurement of force per unit area exerted by a gas or liquid.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ProcessTimerClassType ns=1;i=2315 -->
  <UAObjectType NodeId='ns=1;i=2315' BrowseName='1:ProcessTimerClassType'>
    <DisplayName>ProcessTimerClassType</DisplayName>
    <Description>
      The measurement of the amount of time a piece of equipment has performed
      different types of activities associated with the process being performed
      at that piece of equipment. Multiple subtypes of \mtmodel{PROCESS_TIMER}
      may be defined. Typically, \mtmodel{PROCESS_TIMER} SHOULD be modeled as a
      data item for the Device element, but MAY be modeled for either a
      Controller or Path Structural Element in the XML document. A \gls{subType}
      MUST always be specified. $SECOND$ The measurement of the amount of time a
      piece of equipment has performed different types of activities associated
      with the process being performed at that piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ResistenceClassType ns=1;i=2317 -->
  <UAObjectType NodeId='ns=1;i=2317' BrowseName='1:ResistenceClassType'>
    <DisplayName>ResistenceClassType</DisplayName>
    <Description>
      The degree to which a substance opposes the passage of an electric
      current. $OHM$
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object RotaryVelocityClassType ns=1;i=2319 -->
  <UAObjectType NodeId='ns=1;i=2319' BrowseName='1:RotaryVelocityClassType'>
    <DisplayName>RotaryVelocityClassType</DisplayName>
    <Description>
      The rotational speed of a rotary axis. $\frac{REVOLUTION}{MINUTE}$ The
      measurement of the rotational speed of a rotary axis.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object SoundLevelClassType ns=1;i=2321 -->
  <UAObjectType NodeId='ns=1;i=2321' BrowseName='1:SoundLevelClassType'>
    <DisplayName>SoundLevelClassType</DisplayName>
    <Description>
      Measurement of a sound level or sound pressure level relative to
      atmospheric pressure. $DECIBEL$ The measurement of a sound level or sound
      pressure level relative to atmospheric pressure.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object StrainClassType ns=1;i=2323 -->
  <UAObjectType NodeId='ns=1;i=2323' BrowseName='1:StrainClassType'>
    <DisplayName>StrainClassType</DisplayName>
    <Description>
      The amount of deformation per unit length of an object when a load is
      applied. $PERCENT$ The measurement of the amount of deformation per unit
      length of an object when a load is applied.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object TemperatureClassType ns=1;i=2325 -->
  <UAObjectType NodeId='ns=1;i=2325' BrowseName='1:TemperatureClassType'>
    <DisplayName>TemperatureClassType</DisplayName>
    <Description>The measurement of temperature. $CELSIUS$ The measurement of temperature.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object TensionClassType ns=1;i=2327 -->
  <UAObjectType NodeId='ns=1;i=2327' BrowseName='1:TensionClassType'>
    <DisplayName>TensionClassType</DisplayName>
    <Description>
      A measurement of a force that stretches or elongates an object. $NEWTON$
      The measurement of a force that stretches or elongates an object.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object TiltClassType ns=1;i=2329 -->
  <UAObjectType NodeId='ns=1;i=2329' BrowseName='1:TiltClassType'>
    <DisplayName>TiltClassType</DisplayName>
    <Description>
      A measurement of angular displacement. $MICRO \cdot RADIAN$ The
      measurement of angular displacement. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object TorqueClassType ns=1;i=2331 -->
  <UAObjectType NodeId='ns=1;i=2331' BrowseName='1:TorqueClassType'>
    <DisplayName>TorqueClassType</DisplayName>
    <Description>
      The turning force exerted on an object or by an object. $NEWTON \times
      METER$ The measurement of the turning force exerted on an object or by an
      object.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object VelocityClassType ns=1;i=2335 -->
  <UAObjectType NodeId='ns=1;i=2335' BrowseName='1:VelocityClassType'>
    <DisplayName>VelocityClassType</DisplayName>
    <Description>
      The rate of change of position. $\frac{MILLIMETER}{SECOND}$ The
      measurement of the rate of change of position of a component.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ViscosityClassType ns=1;i=2339 -->
  <UAObjectType NodeId='ns=1;i=2339' BrowseName='1:ViscosityClassType'>
    <DisplayName>ViscosityClassType</DisplayName>
    <Description>
      A measurement of a fluid’s resistance to flow. $PASCAL \times SECOND$. The
      measurement of a fluids resistance to flow.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object VoltageClassType ns=1;i=2341 -->
  <UAObjectType NodeId='ns=1;i=2341' BrowseName='1:VoltageClassType'>
    <DisplayName>VoltageClassType</DisplayName>
    <Description>
      The measurement of electrical potential between two points. $VOLT$
      DEPRECATED in Version 1.6. Replaced by voltageac sample and voltagedc
      sample.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object VoltAmpereClassType ns=1;i=2333 -->
  <UAObjectType NodeId='ns=1;i=2333' BrowseName='1:VoltAmpereClassType'>
    <DisplayName>VoltAmpereClassType</DisplayName>
    <Description>
      The measure of the apparent power in an electrical circuit, equal to the
      product of root-mean-square (RMS) voltage and RMS current (commonly
      referred to as VA). $VOLT \times AMPERE$ The measurement of the apparent
      power in an electrical circuit, equal to the product of root-mean-square
      (RMS) voltage and RMS current (commonly referred to as VA).
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object VoltAmpereReactiveClassType ns=1;i=2337 -->
  <UAObjectType NodeId='ns=1;i=2337' BrowseName='1:VoltAmpereReactiveClassType'>
    <DisplayName>VoltAmpereReactiveClassType</DisplayName>
    <Description>
      The measurement of reactive power in an AC electrical circuit (commonly
      referred to as VAR). $VOLT \times AMPERE (Reactive)$ The measurement of
      reactive power in an AC electrical circuit (commonly referred to as VAR).
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object WattageClassType ns=1;i=2343 -->
  <UAObjectType NodeId='ns=1;i=2343' BrowseName='1:WattageClassType'>
    <DisplayName>WattageClassType</DisplayName>
    <Description>
      The measurement of power flowing through or dissipated by an electrical
      circuit or piece of equipment. $WATT$ The measurement of power flowing
      through or dissipated by an electrical circuit or piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTSampleClassType ns=1;i=2345   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2345</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Enumeration ActiveStateDataType ns=1;i=2197 -->
  <UADataType NodeId='ns=1;i=2197' BrowseName='1:ActiveStateDataType'>
    <DisplayName>ActiveStateDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2949   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2949</Reference>
    </References>
    <Description></Description>
    <Definition Name='ActiveStateDataType'>
      <Field Name='ACTIVE' Value='0'>
        <Description>The value of the data entity that is engaging.</Description>
      </Field>
      <Field Name='INACTIVE' Value='1'>
        <Description>The value of the data entity that is not engaging.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- ActiveStateDataType::EnumStrings ns=1;i=2949 -->
  <UAVariable NodeId='ns=1;i=2949' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2197'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2197   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2197</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>ACTIVE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>INACTIVE</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of ActiveStateDataType -->
  <UAObject NodeId='ns=1;i=2953' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - ActiveStateDataType ns=1;i=2197   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2197</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2954   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2954</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for ActiveStateDataType -->
  <UAVariable NodeId='ns=1;i=2954' BrowseName='1:ActiveStateDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>ActiveStateDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;ActiveStateDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration AvailabilityDataType ns=1;i=2198 -->
  <UADataType NodeId='ns=1;i=2198' BrowseName='1:AvailabilityDataType'>
    <DisplayName>AvailabilityDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2955   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2955</Reference>
    </References>
    <Description></Description>
    <Definition Name='AvailabilityDataType'>
      <Field Name='AVAILABLE' Value='0'>
        <Description>The value or status of an XML element when it is available.</Description>
      </Field>
      <Field Name='UNAVAILABLE' Value='1'>
        <Description>
          The value of the data entity either when the data is not received or
          the entity is incapable of providing data.
        </Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- AvailabilityDataType::EnumStrings ns=1;i=2955 -->
  <UAVariable NodeId='ns=1;i=2955' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2198'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2198   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2198</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>AVAILABLE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>UNAVAILABLE</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of AvailabilityDataType -->
  <UAObject NodeId='ns=1;i=2959' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - AvailabilityDataType ns=1;i=2198   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2198</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2960   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2960</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for AvailabilityDataType -->
  <UAVariable NodeId='ns=1;i=2960' BrowseName='1:AvailabilityDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>AvailabilityDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;AvailabilityDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration AxisCouplingDataType ns=1;i=2199 -->
  <UADataType NodeId='ns=1;i=2199' BrowseName='1:AxisCouplingDataType'>
    <DisplayName>AxisCouplingDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2961   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2961</Reference>
    </References>
    <Description></Description>
    <Definition Name='AxisCouplingDataType'>
      <Field Name='MASTER' Value='0'>
        <Description>
          It provides information or state values that influences the operation
          of other dataitem of similar type.
        </Description>
      </Field>
      <Field Name='SLAVE' Value='1'>
        <Description>The axis is a slave to the coupledaxes event</Description>
      </Field>
      <Field Name='SYNCHRONOUS' Value='2'>
        <Description>
          Physical or logical parts which are not physically connected to each
          other but are operating together.
        </Description>
      </Field>
      <Field Name='TANDEM' Value='3'>
        <Description>Elements are physically connected to each other and operate as a single unit.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- AxisCouplingDataType::EnumStrings ns=1;i=2961 -->
  <UAVariable NodeId='ns=1;i=2961' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2199'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2199   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2199</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>MASTER</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>SLAVE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>SYNCHRONOUS</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>TANDEM</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of AxisCouplingDataType -->
  <UAObject NodeId='ns=1;i=2965' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - AxisCouplingDataType ns=1;i=2199   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2199</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2966   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2966</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for AxisCouplingDataType -->
  <UAVariable NodeId='ns=1;i=2966' BrowseName='1:AxisCouplingDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>AxisCouplingDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;AxisCouplingDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration AxisStateDataType ns=1;i=2200 -->
  <UADataType NodeId='ns=1;i=2200' BrowseName='1:AxisStateDataType'>
    <DisplayName>AxisStateDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2967   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2967</Reference>
    </References>
    <Description></Description>
    <Definition Name='AxisStateDataType'>
      <Field Name='HOME' Value='0'>
        <Description>The component at its home position.</Description>
      </Field>
      <Field Name='PARKED' Value='1'>
        <Description>The component has been moved to a fixed position.</Description>
      </Field>
      <Field Name='STOPPED' Value='2'>
        <Description>The component is stopped.</Description>
      </Field>
      <Field Name='TRAVEL' Value='3'>
        <Description>The component is in motion.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- AxisStateDataType::EnumStrings ns=1;i=2967 -->
  <UAVariable NodeId='ns=1;i=2967' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2200'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2200   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2200</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>HOME</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>PARKED</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>STOPPED</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>TRAVEL</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of AxisStateDataType -->
  <UAObject NodeId='ns=1;i=2971' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - AxisStateDataType ns=1;i=2200   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2200</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2972   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2972</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for AxisStateDataType -->
  <UAVariable NodeId='ns=1;i=2972' BrowseName='1:AxisStateDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>AxisStateDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;AxisStateDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration CompositionStateDataType ns=1;i=2202 -->
  <UADataType NodeId='ns=1;i=2202' BrowseName='1:CompositionStateDataType'>
    <DisplayName>CompositionStateDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2973   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2973</Reference>
    </References>
    <Description></Description>
    <Definition Name='CompositionStateDataType'>
      <Field Name='ACTIVE' Value='0'>
        <Description>The value of the data entity that is engaging.</Description>
      </Field>
      <Field Name='CLOSED' Value='1'>
        <Description>A component is closed to the point of a positive confirmation.</Description>
      </Field>
      <Field Name='DOWN' Value='2'>
        <Description>Reduction in the behavior of a structural element.</Description>
      </Field>
      <Field Name='INACTIVE' Value='3'>
        <Description>The value of the data entity that is not engaging.</Description>
      </Field>
      <Field Name='LEFT' Value='4'>
        <Description>
          The position of the composition element is oriented to the left to the
          point of a positive confirmation.
        </Description>
      </Field>
      <Field Name='OFF' Value='5'>
        <Description>Off state or value.</Description>
      </Field>
      <Field Name='ON' Value='6'>
        <Description>On state or value.</Description>
      </Field>
      <Field Name='OPEN' Value='7'>
        <Description>A component is open to the point of a positive confirmation.</Description>
      </Field>
      <Field Name='RIGHT' Value='8'>
        <Description>
          The position of the composition element is oriented to the right to
          the point of a positive confirmation.
        </Description>
      </Field>
      <Field Name='TRANSITIONING' Value='9'>
        <Description>It is in an intermediate position of the composition element.</Description>
      </Field>
      <Field Name='UNLATCHED' Value='10'>
        <Description>An intermediate position.</Description>
      </Field>
      <Field Name='UP' Value='11'>
        <Description>Increase in the behavior of a structural element.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- CompositionStateDataType::EnumStrings ns=1;i=2973 -->
  <UAVariable NodeId='ns=1;i=2973' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2202'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2202   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2202</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>ACTIVE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>CLOSED</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>DOWN</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>INACTIVE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>LEFT</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>OFF</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>ON</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>OPEN</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>RIGHT</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>TRANSITIONING</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>UNLATCHED</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>UP</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of CompositionStateDataType -->
  <UAObject NodeId='ns=1;i=2977' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - CompositionStateDataType ns=1;i=2202   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2202</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2978   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2978</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for CompositionStateDataType -->
  <UAVariable NodeId='ns=1;i=2978' BrowseName='1:CompositionStateDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>CompositionStateDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;CompositionStateDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration ControllerModeDataType ns=1;i=2203 -->
  <UADataType NodeId='ns=1;i=2203' BrowseName='1:ControllerModeDataType'>
    <DisplayName>ControllerModeDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2979   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2979</Reference>
    </References>
    <Description></Description>
    <Definition Name='ControllerModeDataType'>
      <Field Name='AUTOMATIC' Value='0'>
        <Description>The controller is configured to automatically execute a program.</Description>
      </Field>
      <Field Name='EDIT' Value='1'>
        <Description>
          The controller is currently functioning as a programming device and is
          not capable of executing an active program.
        </Description>
      </Field>
      <Field Name='MANUAL' Value='2'>
        <Description>Operations based on the instructions received from an external source.</Description>
      </Field>
      <Field Name='MANUAL_DATA_INPUT' Value='3'>
        <Description>The operator can enter a series of operations for the controller to perform.</Description>
      </Field>
      <Field Name='SEMI_AUTOMATIC' Value='4'>
        <Description>
          The controller executes a single set of instructions from an active
          program and then stops until given a command to execute the next set
          of instructions.
        </Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- ControllerModeDataType::EnumStrings ns=1;i=2979 -->
  <UAVariable NodeId='ns=1;i=2979' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2203'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2203   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2203</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>AUTOMATIC</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>EDIT</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>MANUAL</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>MANUAL_DATA_INPUT</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>SEMI_AUTOMATIC</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of ControllerModeDataType -->
  <UAObject NodeId='ns=1;i=2983' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - ControllerModeDataType ns=1;i=2203   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2203</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2984   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2984</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for ControllerModeDataType -->
  <UAVariable NodeId='ns=1;i=2984' BrowseName='1:ControllerModeDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>ControllerModeDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;ControllerModeDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration DirectionDataType ns=1;i=2205 -->
  <UADataType NodeId='ns=1;i=2205' BrowseName='1:DirectionDataType'>
    <DisplayName>DirectionDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2985   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2985</Reference>
    </References>
    <Description></Description>
    <Definition Name='DirectionDataType'>
      <Field Name='CLOCKWISE' Value='0'>
        <Description>
          A rotary component type rotating in a clockwise fashion using the
          right-hand rule.
        </Description>
      </Field>
      <Field Name='COUNTER_CLOCKWISE' Value='1'>
        <Description>
          A rotary component type rotating in a counter clockwise fashion using
          the right-hand rule.
        </Description>
      </Field>
      <Field Name='NEGATIVE' Value='2'>
        <Description>
          A linear type component is moving in the direction of decreasing
          position value.
        </Description>
      </Field>
      <Field Name='POSITIVE' Value='3'>
        <Description>
          A linear type component is moving in the direction of increasing
          position value.
        </Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- DirectionDataType::EnumStrings ns=1;i=2985 -->
  <UAVariable NodeId='ns=1;i=2985' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2205'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2205   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2205</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>CLOCKWISE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>COUNTER_CLOCKWISE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>NEGATIVE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>POSITIVE</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of DirectionDataType -->
  <UAObject NodeId='ns=1;i=2989' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - DirectionDataType ns=1;i=2205   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2205</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2990   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2990</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for DirectionDataType -->
  <UAVariable NodeId='ns=1;i=2990' BrowseName='1:DirectionDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>DirectionDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;DirectionDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration EmergencyStopDataType ns=1;i=2207 -->
  <UADataType NodeId='ns=1;i=2207' BrowseName='1:EmergencyStopDataType'>
    <DisplayName>EmergencyStopDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2991   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2991</Reference>
    </References>
    <Description></Description>
    <Definition Name='EmergencyStopDataType'>
      <Field Name='ARMED' Value='0'>
        <Description>
          The emergency stop circuit is complete and the piece of equipment,
          component, or composition element is allowed to operate. 
        </Description>
      </Field>
      <Field Name='TRIGGERED' Value='1'>
        <Description>
          The operation of the piece of equipment, component, or composition
          element is inhibited.
        </Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- EmergencyStopDataType::EnumStrings ns=1;i=2991 -->
  <UAVariable NodeId='ns=1;i=2991' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2207'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2207   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2207</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>ARMED</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>TRIGGERED</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of EmergencyStopDataType -->
  <UAObject NodeId='ns=1;i=2995' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - EmergencyStopDataType ns=1;i=2207   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2207</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=2996   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=2996</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for EmergencyStopDataType -->
  <UAVariable NodeId='ns=1;i=2996' BrowseName='1:EmergencyStopDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>EmergencyStopDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;EmergencyStopDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration ExecutionDataType ns=1;i=2262 -->
  <UADataType NodeId='ns=1;i=2262' BrowseName='1:ExecutionDataType'>
    <DisplayName>ExecutionDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2997   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2997</Reference>
    </References>
    <Description></Description>
    <Definition Name='ExecutionDataType'>
      <Field Name='ACTIVE' Value='0'>
        <Description>The value of the data entity that is engaging.</Description>
      </Field>
      <Field Name='FEED_HOLD' Value='1'>
        <Description>Motion of a component has been commanded to stop at its current position.</Description>
      </Field>
      <Field Name='INTERRUPTED' Value='2'>
        <Description>The action of a component has been suspended due to an external signal.</Description>
      </Field>
      <Field Name='OPTIONAL_STOP' Value='3'>
        <Description>The controllers program has been intentionally stopped</Description>
      </Field>
      <Field Name='READY' Value='4'>
        <Description>A component is ready to engage.</Description>
      </Field>
      <Field Name='PROGRAM_COMPLETED' Value='5'>
        <Description>
          The execution of the controllers program has been stopped by a command
          from within the program.
        </Description>
      </Field>
      <Field Name='PROGRAM_STOPPED' Value='6'>
        <Description>
          The execution of the controller&apos;s program has been stopped by a
          command from within the program.
        </Description>
      </Field>
      <Field Name='STOPPED' Value='7'>
        <Description>The component is stopped.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- ExecutionDataType::EnumStrings ns=1;i=2997 -->
  <UAVariable NodeId='ns=1;i=2997' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2262'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2262   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2262</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>ACTIVE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>FEED_HOLD</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>INTERRUPTED</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>OPTIONAL_STOP</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>READY</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>PROGRAM_COMPLETED</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>PROGRAM_STOPPED</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>STOPPED</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of ExecutionDataType -->
  <UAObject NodeId='ns=1;i=3001' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - ExecutionDataType ns=1;i=2262   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2262</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=3002   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=3002</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for ExecutionDataType -->
  <UAVariable NodeId='ns=1;i=3002' BrowseName='1:ExecutionDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>ExecutionDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;ExecutionDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration FunctionalModeDataType ns=1;i=2208 -->
  <UADataType NodeId='ns=1;i=2208' BrowseName='1:FunctionalModeDataType'>
    <DisplayName>FunctionalModeDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3003   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3003</Reference>
    </References>
    <Description></Description>
    <Definition Name='FunctionalModeDataType'>
      <Field Name='MAINTENANCE' Value='0'>
        <Description>Action related to maintenance on the piece of equipment.</Description>
      </Field>
      <Field Name='PRODUCTION' Value='1'>
        <Description>A structural element is currently producing product.</Description>
      </Field>
      <Field Name='PROCESS_DEVELOPMENT' Value='2'>
        <Description>A structural element is being used to prove-out a new process.</Description>
      </Field>
      <Field Name='SETUP' Value='3'>
        <Description>
          A structural element is being prepared or modified to begin production
          of product.
        </Description>
      </Field>
      <Field Name='TEARDOWN' Value='4'>
        <Description>
          Typically, a structural element has completed the production of a
          product and is being modified or returned to a neutral state such that
          it may then be prepared to begin production of a different product.
        </Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- FunctionalModeDataType::EnumStrings ns=1;i=3003 -->
  <UAVariable NodeId='ns=1;i=3003' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2208'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2208   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2208</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>MAINTENANCE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>PRODUCTION</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>PROCESS_DEVELOPMENT</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>SETUP</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>TEARDOWN</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of FunctionalModeDataType -->
  <UAObject NodeId='ns=1;i=3007' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - FunctionalModeDataType ns=1;i=2208   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2208</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=3008   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=3008</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for FunctionalModeDataType -->
  <UAVariable NodeId='ns=1;i=3008' BrowseName='1:FunctionalModeDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>FunctionalModeDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;FunctionalModeDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration InterfaceStateDataType ns=1;i=2234 -->
  <UADataType NodeId='ns=1;i=2234' BrowseName='1:InterfaceStateDataType'>
    <DisplayName>InterfaceStateDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3009   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3009</Reference>
    </References>
    <Description></Description>
    <Definition Name='InterfaceStateDataType'>
      <Field Name='ACTIVE' Value='0'>
        <Description>The value of the data entity that is engaging.</Description>
      </Field>
      <Field Name='COMPLETE' Value='1'>
        <Description>Completion of an action.</Description>
      </Field>
      <Field Name='FAIL' Value='2'>
        <Description>Failure before completion of an action.</Description>
      </Field>
      <Field Name='NOT_READY' Value='4'>
        <Description>A component is not ready to engage.</Description>
      </Field>
      <Field Name='READY' Value='5'>
        <Description>A component is ready to engage.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- InterfaceStateDataType::EnumStrings ns=1;i=3009 -->
  <UAVariable NodeId='ns=1;i=3009' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2234'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2234   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2234</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>ACTIVE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>COMPLETE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>FAIL</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>NOT_READY</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>READY</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of InterfaceStateDataType -->
  <UAObject NodeId='ns=1;i=3013' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - InterfaceStateDataType ns=1;i=2234   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2234</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=3014   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=3014</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for InterfaceStateDataType -->
  <UAVariable NodeId='ns=1;i=3014' BrowseName='1:InterfaceStateDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>InterfaceStateDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;InterfaceStateDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration InterfaceStatusDataType ns=1;i=2230 -->
  <UADataType NodeId='ns=1;i=2230' BrowseName='1:InterfaceStatusDataType'>
    <DisplayName>InterfaceStatusDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3015   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3015</Reference>
    </References>
    <Description></Description>
    <Definition Name='InterfaceStatusDataType'>
      <Field Name='DISABLED' Value='0'>
        <Description>A component is currently not operational.</Description>
      </Field>
      <Field Name='ENABLED' Value='1'>
        <Description>A component is currently operational and performing as expected.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- InterfaceStatusDataType::EnumStrings ns=1;i=3015 -->
  <UAVariable NodeId='ns=1;i=3015' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2230'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2230   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2230</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>DISABLED</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>ENABLED</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of InterfaceStatusDataType -->
  <UAObject NodeId='ns=1;i=3019' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - InterfaceStatusDataType ns=1;i=2230   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2230</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=3020   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=3020</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for InterfaceStatusDataType -->
  <UAVariable NodeId='ns=1;i=3020' BrowseName='1:InterfaceStatusDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>InterfaceStatusDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;InterfaceStatusDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Object MTControlledVocabEventClassType ns=1;i=2144 -->
  <UAObjectType NodeId='ns=1;i=2144' BrowseName='1:MTControlledVocabEventClassType' IsAbstract='true'>
    <DisplayName>MTControlledVocabEventClassType</DisplayName>
    <Description>
      The abstract base type for controlled events that represent states that
      are provided in related enumerations. These data items will be represented
      in an object of type \mtuatype{MTControlledVocabEventType} derived from
      the OPC UA type \uamodel{MultiStateValueDiscreteType}
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTEventClassType ns=1;i=2631   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2631</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ActuatorStateClassType ns=1;i=2146 -->
  <UAObjectType NodeId='ns=1;i=2146' BrowseName='1:ActuatorStateClassType'>
    <DisplayName>ActuatorStateClassType</DisplayName>
    <Description>
      Represents the operational state of an apparatus for moving or
      controlling. Represents the operational state of an apparatus for moving
      or controlling a mechanism or system.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2949 1:ActiveStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2949</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AvailabilityClassType ns=1;i=2149 -->
  <UAObjectType NodeId='ns=1;i=2149' BrowseName='1:AvailabilityClassType'>
    <DisplayName>AvailabilityClassType</DisplayName>
    <Description>
      Represents the Agent&apos;s ability to communicate with the data source.
      This MUST be provided for a Device Element and MAY be provided for any
      other Structural Element. Represents the agent&apos;s ability to
      communicate with the data source.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2955 1:AvailabilityDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2955</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AxisCouplingClassType ns=1;i=2152 -->
  <UAObjectType NodeId='ns=1;i=2152' BrowseName='1:AxisCouplingClassType'>
    <DisplayName>AxisCouplingClassType</DisplayName>
    <Description>
      Describes the way the axes will be associated to each other. This is used
      in conjunction with \mtmodel{COUPLED_AXES} to indicate the way they are
      interacting. The coupling MUST be viewed from the perspective of a
      specific axis. Therefore, a \mtmodel{MASTER} coupling indicates that this
      axis is the master for the \mtmodel{COUPLED_AXES}. Describes the way the
      axes will be associated to each other. This is used in conjunction with
      coupledaxes event to indicate the way they are interacting.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2961 1:AxisCouplingDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2961</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AxisInterlockClassType ns=1;i=2155 -->
  <UAObjectType NodeId='ns=1;i=2155' BrowseName='1:AxisInterlockClassType'>
    <DisplayName>AxisInterlockClassType</DisplayName>
    <Description>
      An indicator of the state of the axis lockout function when power has been
      removed and the axis is allowed to move freely. An indicator of the state
      of the axis lockout function when power has been removed and the axis is
      allowed to move freely.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2949 1:ActiveStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2949</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AxisStateClassType ns=1;i=2158 -->
  <UAObjectType NodeId='ns=1;i=2158' BrowseName='1:AxisStateClassType'>
    <DisplayName>AxisStateClassType</DisplayName>
    <Description>
      An indicator of the controlled state of a \mtmodel{LINEAR} or
      \mtmodel{ROTARY} component representing an axis. An indicator of the
      controlled state of a linear or rotary component representing an axis.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2967 1:AxisStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2967</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ChuckInterlockClassType ns=1;i=2161 -->
  <UAObjectType NodeId='ns=1;i=2161' BrowseName='1:ChuckInterlockClassType'>
    <DisplayName>ChuckInterlockClassType</DisplayName>
    <Description>
      An indication of the state of an interlock function or control logic state
      intended to prevent the associated \mtmodel{Chuck} composition or function
      from being operated. An indication of the state of an interlock function
      or control logic state intended to prevent the associated chuck component
      from being operated.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2949 1:ActiveStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2949</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ChuckStateClassType ns=1;i=2164 -->
  <UAObjectType NodeId='ns=1;i=2164' BrowseName='1:ChuckStateClassType'>
    <DisplayName>ChuckStateClassType</DisplayName>
    <Description>
      An indication of the operating state of a mechanism that holds a part or
      stock material during a manufacturing process. It may also represent a
      mechanism that holds any other mechanism in place within a piece of
      equipment. An indication of the operating state of a mechanism that holds
      a part or stock material during a manufacturing process. It may also
      represent a mechanism that holds any other mechanism in place within a
      piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3027 1:OpenStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3027</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object CloseChuckClassType ns=1;i=2256 -->
  <UAObjectType NodeId='ns=1;i=2256' BrowseName='1:CloseChuckClassType'>
    <DisplayName>CloseChuckClassType</DisplayName>
    <Description>Service to close a chuck. Service to close a chuck.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3009 1:InterfaceStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3009</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object CloseDoorClassType ns=1;i=2250 -->
  <UAObjectType NodeId='ns=1;i=2250' BrowseName='1:CloseDoorClassType'>
    <DisplayName>CloseDoorClassType</DisplayName>
    <Description>Service to close a door. Service to close a door.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3009 1:InterfaceStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3009</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object CompositionStateClassType ns=1;i=2173 -->
  <UAObjectType NodeId='ns=1;i=2173' BrowseName='1:CompositionStateClassType'>
    <DisplayName>CompositionStateClassType</DisplayName>
    <Description>
      An indication of the operating condition of a mechanism represented by a
      \mtmodel{Composition} type element. A \gls{subType} MUST always be
      specified. A \mtmodel{compositionId} MUST always be specified. An
      indication of the operating condition of a mechanism represented by a
      composition type element.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2973 1:CompositionStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2973</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ControllerModeClassType ns=1;i=2167 -->
  <UAObjectType NodeId='ns=1;i=2167' BrowseName='1:ControllerModeClassType'>
    <DisplayName>ControllerModeClassType</DisplayName>
    <Description>
      The current mode of the \mtmodel{Controller} component. The current
      operating mode of the controller component.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2979 1:ControllerModeDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2979</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ControllerModeOverrideClassType ns=1;i=2176 -->
  <UAObjectType NodeId='ns=1;i=2176' BrowseName='1:ControllerModeOverrideClassType'>
    <DisplayName>ControllerModeOverrideClassType</DisplayName>
    <Description>
      A setting or operator selection that changes the behavior of a piece of
      equipment. A setting or operator selection that changes the behavior of a
      piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3021 1:OnOffDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3021</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object DirectionClassType ns=1;i=2179 -->
  <UAObjectType NodeId='ns=1;i=2179' BrowseName='1:DirectionClassType'>
    <DisplayName>DirectionClassType</DisplayName>
    <Description>
      The direction of motion. A \gls{subType} MUST always be specified. The
      direction of motion.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2985 1:DirectionDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2985</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object DoorStateClassType ns=1;i=2182 -->
  <UAObjectType NodeId='ns=1;i=2182' BrowseName='1:DoorStateClassType'>
    <DisplayName>DoorStateClassType</DisplayName>
    <Description>
      The opened or closed state of the door. The operational state of a door
      type component or composition element.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3027 1:OpenStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3027</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object EmergencyStopClassType ns=1;i=2185 -->
  <UAObjectType NodeId='ns=1;i=2185' BrowseName='1:EmergencyStopClassType'>
    <DisplayName>EmergencyStopClassType</DisplayName>
    <Description>
      The current state of the emergency stop signal. The current state of the
      emergency stop signal for a piece of equipment, controller path, or any
      other component or subsystem of a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2991 1:EmergencyStopDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2991</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object EndOfBarClassType ns=1;i=2188 -->
  <UAObjectType NodeId='ns=1;i=2188' BrowseName='1:EndOfBarClassType'>
    <DisplayName>EndOfBarClassType</DisplayName>
    <Description>
      An indication of whether the end of a piece of bar stock being feed by a
      bar feeder has been reached. An indication of whether the end of a piece
      of bar stock being feed by a bar feeder has been reached.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3051 1:YesNoDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3051</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object EquipmentModeClassType ns=1;i=2191 -->
  <UAObjectType NodeId='ns=1;i=2191' BrowseName='1:EquipmentModeClassType'>
    <DisplayName>EquipmentModeClassType</DisplayName>
    <Description>
      An indication that a piece of equipment, or a sub-part of a piece of
      equipment, is performing specific types of activities. A \gls{subType}
      MUST always be specified. An indication that a piece of equipment, or a
      sub-part of a piece of equipment, is performing specific types of
      activities.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3021 1:OnOffDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3021</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ExecutionClassType ns=1;i=2170 -->
  <UAObjectType NodeId='ns=1;i=2170' BrowseName='1:ExecutionClassType'>
    <DisplayName>ExecutionClassType</DisplayName>
    <Description>
      The execution status of the \mtmodel{Controller} or \mtmodel{Path}. The
      execution status of the controller.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2997 1:ExecutionDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2997</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object FunctionalModeClassType ns=1;i=2194 -->
  <UAObjectType NodeId='ns=1;i=2194' BrowseName='1:FunctionalModeClassType'>
    <DisplayName>FunctionalModeClassType</DisplayName>
    <Description>
      The current intended production status of the device or component.
      Typically, the \texttt{FUNCTIONAL_MODE} SHOULD be modeled as a data item
      for the Device element, but MAY be modeled for any Structural Element in
      the XML document. The current intended production status of the device or
      component.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3003 1:FunctionalModeDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3003</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object InterfaceStateClassType ns=1;i=2227 -->
  <UAObjectType NodeId='ns=1;i=2227' BrowseName='1:InterfaceStateClassType'>
    <DisplayName>InterfaceStateClassType</DisplayName>
    <Description>
      The current functional or operational state of an Interface type element
      indicating whether the Interface is active or not currently functioning.
      An indication of the operational state of an interface component
      component.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3015 1:InterfaceStatusDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3015</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MaterialChangeClassType ns=1;i=2235 -->
  <UAObjectType NodeId='ns=1;i=2235' BrowseName='1:MaterialChangeClassType'>
    <DisplayName>MaterialChangeClassType</DisplayName>
    <Description>
      Service to change the type of material or product being loaded or fed to a
      piece of equipment. Service to change the type of material or product
      being loaded or fed to a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3009 1:InterfaceStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3009</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MaterialFeedClassType ns=1;i=2231 -->
  <UAObjectType NodeId='ns=1;i=2231' BrowseName='1:MaterialFeedClassType'>
    <DisplayName>MaterialFeedClassType</DisplayName>
    <Description>
      Service to advance material or feed product to a piece of equipment from a
      continuous or bulk source. Service to advance material or feed product to
      a piece of equipment from a continuous or bulk source. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3009 1:InterfaceStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3009</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MaterialLoadClassType ns=1;i=2241 -->
  <UAObjectType NodeId='ns=1;i=2241' BrowseName='1:MaterialLoadClassType'>
    <DisplayName>MaterialLoadClassType</DisplayName>
    <Description>
      Service to load a piece of material or product. Service to load a piece of
      material or product.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3009 1:InterfaceStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3009</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MaterialRetractClassType ns=1;i=2238 -->
  <UAObjectType NodeId='ns=1;i=2238' BrowseName='1:MaterialRetractClassType'>
    <DisplayName>MaterialRetractClassType</DisplayName>
    <Description>
      Service to remove or retract material or product. Service to remove or
      retract material or product.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3009 1:InterfaceStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3009</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MaterialUnloadClassType ns=1;i=2244 -->
  <UAObjectType NodeId='ns=1;i=2244' BrowseName='1:MaterialUnloadClassType'>
    <DisplayName>MaterialUnloadClassType</DisplayName>
    <Description>
      Service to unload a piece of material or product. Service to unload a
      piece of material or product.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3009 1:InterfaceStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3009</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object OpenChuckClassType ns=1;i=2253 -->
  <UAObjectType NodeId='ns=1;i=2253' BrowseName='1:OpenChuckClassType'>
    <DisplayName>OpenChuckClassType</DisplayName>
    <Description>Service to open a chuck. Service to open a chuck. </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3009 1:InterfaceStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3009</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object OpenDoorClassType ns=1;i=2247 -->
  <UAObjectType NodeId='ns=1;i=2247' BrowseName='1:OpenDoorClassType'>
    <DisplayName>OpenDoorClassType</DisplayName>
    <Description>Service to open a door. Service to open a door. </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3009 1:InterfaceStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3009</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PartChangeClassType ns=1;i=2259 -->
  <UAObjectType NodeId='ns=1;i=2259' BrowseName='1:PartChangeClassType'>
    <DisplayName>PartChangeClassType</DisplayName>
    <Description>
      Service to change the part or product associated with a piece of equipment
      to a different part or product. Service to change the part or product
      associated with a piece of equipment to a different part or product. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3009 1:InterfaceStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3009</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PathModeClassType ns=1;i=2215 -->
  <UAObjectType NodeId='ns=1;i=2215' BrowseName='1:PathModeClassType'>
    <DisplayName>PathModeClassType</DisplayName>
    <Description>
      Describes the operational relationship between a \mtmodel{PATH}
      \textit{Structural Element} and another \mtmodel{PATH} \textit{Structural
      Element} for pieces of equipment comprised of multiple logical groupings
      of controlled axes or other logical operations. Describes the operational
      relationship between a path structural element and another path structural
      element for pieces of equipment comprised of multiple logical groupings of
      controlled axes or other logical operations.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3033 1:PathModeDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3033</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PowerStateClassType ns=1;i=2218 -->
  <UAObjectType NodeId='ns=1;i=2218' BrowseName='1:PowerStateClassType'>
    <DisplayName>PowerStateClassType</DisplayName>
    <Description>
      The indication of the status of the source of energy for a
      \textit{Structural Element} to allow it to perform its intended function
      or the state of an enabling signal providing permission for the
      \textit{Structural Element} to perform its functions. DEPRECATION WARNING:
      \texttt{PowerState} may be deprecated in the future. The indication of the
      status of the source of energy for a structural element to allow it to
      perform its intended function or the state of an enabling signal providing
      permission for the structural element to perform its functions.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3021 1:OnOffDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3021</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ProgramEditClassType ns=1;i=2221 -->
  <UAObjectType NodeId='ns=1;i=2221' BrowseName='1:ProgramEditClassType'>
    <DisplayName>ProgramEditClassType</DisplayName>
    <Description>
      An indication of the status of the \mtmodel{Controller} component’s
      program editing mode. On many controls, a program can be edited while
      another program is currently being executed. An indication of the status
      of the controller components program editing mode. On many controls, a
      program can be edited while another program is currently being executed.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3039 1:ProgramEditDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3039</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object RotaryModeClassType ns=1;i=2224 -->
  <UAObjectType NodeId='ns=1;i=2224' BrowseName='1:RotaryModeClassType'>
    <DisplayName>RotaryModeClassType</DisplayName>
    <Description>
      The current operating mode for a \mtmodel{Rotary} type axis. The current
      operating mode for a rotary type axis.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3045 1:RotaryModeDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3045</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object SpindleInterlockClassType ns=1;i=2212 -->
  <UAObjectType NodeId='ns=1;i=2212' BrowseName='1:SpindleInterlockClassType'>
    <DisplayName>SpindleInterlockClassType</DisplayName>
    <Description>
      An indication of the status of the spindle for a piece of equipment when
      power has been removed and it is free to rotate. An indication of the
      status of the spindle for a piece of equipment when power has been removed
      and it is free to rotate.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTControlledVocabEventClassType ns=1;i=2144   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2144</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=2949 1:ActiveStateDataType/EnumStrings  -->
      <Reference ReferenceType='HasProperty'>ns=1;i=2949</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Enumeration OnOffDataType ns=1;i=2204 -->
  <UADataType NodeId='ns=1;i=2204' BrowseName='1:OnOffDataType'>
    <DisplayName>OnOffDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3021   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3021</Reference>
    </References>
    <Description></Description>
    <Definition Name='OnOffDataType'>
      <Field Name='OFF' Value='0'>
        <Description>Off state or value.</Description>
      </Field>
      <Field Name='ON' Value='1'>
        <Description>On state or value.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- OnOffDataType::EnumStrings ns=1;i=3021 -->
  <UAVariable NodeId='ns=1;i=3021' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2204'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2204   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2204</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>OFF</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>ON</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of OnOffDataType -->
  <UAObject NodeId='ns=1;i=3025' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - OnOffDataType ns=1;i=2204   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2204</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=3026   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=3026</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for OnOffDataType -->
  <UAVariable NodeId='ns=1;i=3026' BrowseName='1:OnOffDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>OnOffDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;OnOffDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration OpenStateDataType ns=1;i=2201 -->
  <UADataType NodeId='ns=1;i=2201' BrowseName='1:OpenStateDataType'>
    <DisplayName>OpenStateDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3027   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3027</Reference>
    </References>
    <Description></Description>
    <Definition Name='OpenStateDataType'>
      <Field Name='CLOSED' Value='0'>
        <Description>A component is closed to the point of a positive confirmation.</Description>
      </Field>
      <Field Name='OPEN' Value='1'>
        <Description>A component is open to the point of a positive confirmation.</Description>
      </Field>
      <Field Name='UNLATCHED' Value='2'>
        <Description>An intermediate position.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- OpenStateDataType::EnumStrings ns=1;i=3027 -->
  <UAVariable NodeId='ns=1;i=3027' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2201'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2201   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2201</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>CLOSED</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>OPEN</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>UNLATCHED</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of OpenStateDataType -->
  <UAObject NodeId='ns=1;i=3031' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - OpenStateDataType ns=1;i=2201   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2201</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=3032   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=3032</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for OpenStateDataType -->
  <UAVariable NodeId='ns=1;i=3032' BrowseName='1:OpenStateDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>OpenStateDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;OpenStateDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration PathModeDataType ns=1;i=2209 -->
  <UADataType NodeId='ns=1;i=2209' BrowseName='1:PathModeDataType'>
    <DisplayName>PathModeDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3033   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3033</Reference>
    </References>
    <Description></Description>
    <Definition Name='PathModeDataType'>
      <Field Name='INDEPENDENT' Value='0'>
        <Description>The path is operating independently and without the influence of another path.</Description>
      </Field>
      <Field Name='MASTER' Value='1'>
        <Description>
          It provides information or state values that influences the operation
          of other dataitem of similar type.
        </Description>
      </Field>
      <Field Name='MIRROR' Value='2'>
        <Description>
          The axes associated with the path are mirroring the motion of the
          master value path.
        </Description>
      </Field>
      <Field Name='SYNCHRONOUS' Value='3'>
        <Description>
          Physical or logical parts which are not physically connected to each
          other but are operating together.
        </Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- PathModeDataType::EnumStrings ns=1;i=3033 -->
  <UAVariable NodeId='ns=1;i=3033' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2209'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2209   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2209</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>INDEPENDENT</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>MASTER</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>MIRROR</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>SYNCHRONOUS</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of PathModeDataType -->
  <UAObject NodeId='ns=1;i=3037' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - PathModeDataType ns=1;i=2209   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2209</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=3038   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=3038</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for PathModeDataType -->
  <UAVariable NodeId='ns=1;i=3038' BrowseName='1:PathModeDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>PathModeDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;PathModeDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration ProgramEditDataType ns=1;i=2210 -->
  <UADataType NodeId='ns=1;i=2210' BrowseName='1:ProgramEditDataType'>
    <DisplayName>ProgramEditDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3039   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3039</Reference>
    </References>
    <Description></Description>
    <Definition Name='ProgramEditDataType'>
      <Field Name='ACTIVE' Value='0'>
        <Description>The value of the data entity that is engaging.</Description>
      </Field>
      <Field Name='NOT_READY' Value='1'>
        <Description>A component is not ready to engage.</Description>
      </Field>
      <Field Name='READY' Value='2'>
        <Description>A component is ready to engage.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- ProgramEditDataType::EnumStrings ns=1;i=3039 -->
  <UAVariable NodeId='ns=1;i=3039' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2210'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2210   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2210</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>ACTIVE</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>NOT_READY</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>READY</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of ProgramEditDataType -->
  <UAObject NodeId='ns=1;i=3043' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - ProgramEditDataType ns=1;i=2210   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2210</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=3044   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=3044</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for ProgramEditDataType -->
  <UAVariable NodeId='ns=1;i=3044' BrowseName='1:ProgramEditDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>ProgramEditDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;ProgramEditDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration RotaryModeDataType ns=1;i=2211 -->
  <UADataType NodeId='ns=1;i=2211' BrowseName='1:RotaryModeDataType'>
    <DisplayName>RotaryModeDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3045   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3045</Reference>
    </References>
    <Description></Description>
    <Definition Name='RotaryModeDataType'>
      <Field Name='CONTOUR' Value='0'>
        <Description>The position of the axis is being interpolated.</Description>
      </Field>
      <Field Name='INDEX' Value='1'>
        <Description>The axis is configured to index.</Description>
      </Field>
      <Field Name='SPINDLE' Value='2'>
        <Description>The axis is functioning as a spindle.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- RotaryModeDataType::EnumStrings ns=1;i=3045 -->
  <UAVariable NodeId='ns=1;i=3045' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2211'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2211   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2211</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>CONTOUR</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>INDEX</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>SPINDLE</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of RotaryModeDataType -->
  <UAObject NodeId='ns=1;i=3049' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - RotaryModeDataType ns=1;i=2211   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2211</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=3050   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=3050</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for RotaryModeDataType -->
  <UAVariable NodeId='ns=1;i=3050' BrowseName='1:RotaryModeDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>RotaryModeDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;RotaryModeDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Enumeration YesNoDataType ns=1;i=2206 -->
  <UADataType NodeId='ns=1;i=2206' BrowseName='1:YesNoDataType'>
    <DisplayName>YesNoDataType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - Enumeration i=29   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=29</Reference>
      <!-- HasProperty -  - EnumStrings ns=1;i=3051   -->
      <Reference ReferenceType='HasProperty'>ns=1;i=3051</Reference>
    </References>
    <Description></Description>
    <Definition Name='YesNoDataType'>
      <Field Name='NO' Value='0'>
        <Description>The endofbar event has not been reached.</Description>
      </Field>
      <Field Name='YES' Value='1'>
        <Description>The endofbar event has been reached.</Description>
      </Field>
    </Definition>
  </UADataType>
  <!-- YesNoDataType::EnumStrings ns=1;i=3051 -->
  <UAVariable NodeId='ns=1;i=3051' BrowseName='1:EnumStrings' ValueRank='1' DataType='LocalizedText' ParentNodeId='ns=1;i=2206'>
    <DisplayName>EnumStrings</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - PropertyType i=68   -->
      <Reference ReferenceType='HasTypeDefinition'>i=68</Reference>
      <!-- HasModellingRule -  - Mandatory i=78   -->
      <Reference ReferenceType='HasModellingRule'>i=78</Reference>
      <!-- HasProperty - (Reverse) - Owner ns=1;i=2206   -->
      <Reference ReferenceType='HasProperty' IsForward='false'>ns=1;i=2206</Reference>
    </References>
    <Value>
      <ListOfLocalizedText xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>NO</Text>
        </LocalizedText>
        <LocalizedText>
          <Locale>en</Locale>
          <Text>YES</Text>
        </LocalizedText>
      </ListOfLocalizedText>
    </Value>
  </UAVariable>
  <!-- Default XML encoding of YesNoDataType -->
  <UAObject NodeId='ns=1;i=3055' BrowseName='Default XML'>
    <DisplayName>Default XML</DisplayName>
    <References>
      <!-- HasEncoding - (Reverse) - YesNoDataType ns=1;i=2206   -->
      <Reference ReferenceType='HasEncoding' IsForward='false'>ns=1;i=2206</Reference>
      <!-- HasTypeDefinition -  - DataTypeEncodingType i=76   -->
      <Reference ReferenceType='HasTypeDefinition'>i=76</Reference>
      <!-- HasDescription -  - HasDescription ns=1;i=3056   -->
      <Reference ReferenceType='HasDescription'>ns=1;i=3056</Reference>
    </References>
  </UAObject>
  <!-- XML DataTypeDescription for YesNoDataType -->
  <UAVariable NodeId='ns=1;i=3056' BrowseName='1:YesNoDataType' DataType='String' ParentNodeId='ns=1;i=2733'>
    <DisplayName>YesNoDataType</DisplayName>
    <References>
      <!-- HasTypeDefinition -  - DataTypeDescriptionType i=69   -->
      <Reference ReferenceType='HasTypeDefinition'>i=69</Reference>
      <!-- HasComponent - (Reverse) - Opc.Ua.MTConnect ns=1;i=2733   -->
      <Reference ReferenceType='HasComponent' IsForward='false'>ns=1;i=2733</Reference>
    </References>
    <Value>
      <String xmlns='http://opcfoundation.org/UA/2008/02/Types.xsd'>//xs:element[@name=&apos;YesNoDataType&apos;]</String>
    </Value>
  </UAVariable>
  <!-- Definition of Object MTNumericEventClassType ns=1;i=2359 -->
  <UAObjectType NodeId='ns=1;i=2359' BrowseName='1:MTNumericEventClassType' IsAbstract='true'>
    <DisplayName>MTNumericEventClassType</DisplayName>
    <Description>The root type for all of the event types that have numeric \gls{CDATA}.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTEventClassType ns=1;i=2631   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2631</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AxisFeedrateOverrideClassType ns=1;i=2347 -->
  <UAObjectType NodeId='ns=1;i=2347' BrowseName='1:AxisFeedrateOverrideClassType'>
    <DisplayName>AxisFeedrateOverrideClassType</DisplayName>
    <Description>
      The value of a signal or calculation issued to adjust the feedrate of an
      individual linear type axis. The value provided for
      \mtmodel{AXIS_FEEDRATE_OVERRIDE} is expressed as a percentage of the
      designated feedrate for the axis. When \mtmodel{AXIS_FEEDRATE_OVERRIDE} is
      applied, the resulting commanded feedrate for the axis is limited to the
      value of the original feedrate multiplied by the value of the
      \mtmodel{AXIS_FEEDRATE_OVERRIDE}. There MAY be different subtypes of
      \mtmodel{AXIS_FEEDRATE_OVERRIDE}; each representing an override value for
      a designated subtype of feedrate depending on the state of operation of
      the axis. The subtypes of operation of an axis are currently defined as
      \mtmodel{PROGRAMMED}, \mtmodel{JOG}, and \mtmodel{RAPID}. The value of a
      signal or calculation issued to adjust the feedrate of an individual
      linear type axis.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTNumericEventClassType ns=1;i=2359   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2359</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object BlockCountClassType ns=1;i=2349 -->
  <UAObjectType NodeId='ns=1;i=2349' BrowseName='1:BlockCountClassType'>
    <DisplayName>BlockCountClassType</DisplayName>
    <Description>
      The total count of the number of blocks of program code that have been
      executed since execution started. \mtmodel{BLOCK_COUNT} counts blocks of
      program code executed regardless of program structure (e.g., looping or
      branching within the program). The starting value for
      \mtmodel{BLOCK_COUNT} MAY be established by an initial value provided in
      the Constraint element defined for the data item. The total count of the
      number of blocks of program code that have been executed since execution
      started.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTNumericEventClassType ns=1;i=2359   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2359</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object HardnessClassType ns=1;i=2351 -->
  <UAObjectType NodeId='ns=1;i=2351' BrowseName='1:HardnessClassType'>
    <DisplayName>HardnessClassType</DisplayName>
    <Description>
      The measurement of the hardness of a material. The measurement does not
      provide a unit. A \gls{subType} MUST always be specified to designate the
      hardness scale associated with the measurement. The measurement of the
      hardness of a material.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTNumericEventClassType ns=1;i=2359   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2359</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LineNumberClassType ns=1;i=2353 -->
  <UAObjectType NodeId='ns=1;i=2353' BrowseName='1:LineNumberClassType'>
    <DisplayName>LineNumberClassType</DisplayName>
    <Description>
      A reference to the position of a block of program code within a control
      program. The line number MAY represent either an absolute position
      starting with the first line of the program or an incremental position
      relative to the occurrence of the last \mtmodel{LINE_LABEL}.
      \mtmodel{LINE_NUMBER} does not change subject to any looping or branching
      in a control program. A \gls{subType} MUST be defined. A reference to the
      position of a block of program code within a control program.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTNumericEventClassType ns=1;i=2359   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2359</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PartCountClassType ns=1;i=2355 -->
  <UAObjectType NodeId='ns=1;i=2355' BrowseName='1:PartCountClassType'>
    <DisplayName>PartCountClassType</DisplayName>
    <Description>
      The current count of parts produced as represented by the Controller. The
      valid data value MUST be an integer value. The count of parts produced.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTNumericEventClassType ns=1;i=2359   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2359</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PathFeedrateOverrideClassType ns=1;i=3628 -->
  <UAObjectType NodeId='ns=1;i=3628' BrowseName='1:PathFeedrateOverrideClassType'>
    <DisplayName>PathFeedrateOverrideClassType</DisplayName>
    <Description>
       The value of a signal or calculation issued to adjust the feedrate for
      the axes associated with a path component that may represent a single axis
      or the coordinated movement of multiple axes.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTNumericEventClassType ns=1;i=2359   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2359</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object RotaryVelocityOverrideClassType ns=1;i=2357 -->
  <UAObjectType NodeId='ns=1;i=2357' BrowseName='1:RotaryVelocityOverrideClassType'>
    <DisplayName>RotaryVelocityOverrideClassType</DisplayName>
    <Description>
      A command issued to adjust the programmed velocity for a Rotary type axis.
      This command represents a percentage change to the velocity calculated by
      a logic or motion program or set by a switch for a Rotary type axis.
      \mtmodel{ROTARY_VELOCITY_OVERRIDE} is expressed as a percentage of the
      programmed \mtmodel{ROTARY_VELOCITY}. The value of a command issued to
      adjust the programmed velocity for a rotary type axis. This command
      represents a percentage change to the velocity calculated by a logic or
      motion program or set by a switch for a rotary type axis.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTNumericEventClassType ns=1;i=2359   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2359</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MTStringEventClassType ns=1;i=2361 -->
  <UAObjectType NodeId='ns=1;i=2361' BrowseName='1:MTStringEventClassType' IsAbstract='true'>
    <DisplayName>MTStringEventClassType</DisplayName>
    <Description>
      The base UA \gls{Type} for all \glspl{MTDataItem} that have a non-specific
      text representation.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTEventClassType ns=1;i=2631   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2631</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AssetChangedClassType ns=1;i=2405 -->
  <UAObjectType NodeId='ns=1;i=2405' BrowseName='1:AssetChangedClassType'>
    <DisplayName>AssetChangedClassType</DisplayName>
    <Description>
       The value of the cdata for the event MUST be the assetid of the asset
      that has been added or changed. There will not be a separate message for
      new assets.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AssetRemovedClassType ns=1;i=2407 -->
  <UAObjectType NodeId='ns=1;i=2407' BrowseName='1:AssetRemovedClassType'>
    <DisplayName>AssetRemovedClassType</DisplayName>
    <Description>
       The value of the cdata for the event MUST be the assetid of the asset
      that has been removed. The asset will still be visible if requested with
      the includeremoved parameter as described in the protocol section. When
      assets are removed they are not moved to the beginning of the most
      recently modified list. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object BlockClassType ns=1;i=2363 -->
  <UAObjectType NodeId='ns=1;i=2363' BrowseName='1:BlockClassType'>
    <DisplayName>BlockClassType</DisplayName>
    <Description>
      The line of code or command being executed by a \mtmodel{Controller}
      \mtterm{Structural Element}. The value reported for \mtmodel{Block} MUST
      include the entire expression for a line of program code, including all
      parameters. The line of code or command being executed by a controller
      structural element.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object CoupledAxesClassType ns=1;i=2365 -->
  <UAObjectType NodeId='ns=1;i=2365' BrowseName='1:CoupledAxesClassType'>
    <DisplayName>CoupledAxesClassType</DisplayName>
    <Description>
      Refers to the set of associated axes. The valid data value for
      \mtmodel{COUPLED_AXES} SHOULD be a space-delimited set of axes reported as
      the value of the name attribute for each axis. If name is not available,
      the piece of equipment MUST report the value of the nativeName attribute
      for each axis. Refers to the set of associated axes.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LineClassType ns=1;i=2409 -->
  <UAObjectType NodeId='ns=1;i=2409' BrowseName='1:LineClassType'>
    <DisplayName>LineClassType</DisplayName>
    <Description> DEPRECATED in Version 1.4.0.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LineLabelClassType ns=1;i=2367 -->
  <UAObjectType NodeId='ns=1;i=2367' BrowseName='1:LineLabelClassType'>
    <DisplayName>LineLabelClassType</DisplayName>
    <Description>
      An optional identifier for a \mtmodel{BLOCK} of code in a
      \mtmodel{PROGRAM}. An optional identifier for a block event of code in a
      program event.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MaterialClassType ns=1;i=2369 -->
  <UAObjectType NodeId='ns=1;i=2369' BrowseName='1:MaterialClassType'>
    <DisplayName>MaterialClassType</DisplayName>
    <Description>
      The identifier of a material used or consumed in the manufacturing
      process. The identifier of a material used or consumed in the
      manufacturing process.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MessageClassType ns=1;i=2403 -->
  <UAObjectType NodeId='ns=1;i=2403' BrowseName='1:MessageClassType'>
    <DisplayName>MessageClassType</DisplayName>
    <Description>
       Any text string of information to be transferred from a piece of
      equipment to a client software application.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object OperatorIdClassType ns=1;i=2371 -->
  <UAObjectType NodeId='ns=1;i=2371' BrowseName='1:OperatorIdClassType'>
    <DisplayName>OperatorIdClassType</DisplayName>
    <Description>
      The identifier of the person currently responsible for operating the piece
      of equipment. DEPRECATION WARNING: May be deprecated in the future. See
      \mtmodel{USER} below. The identifier of the person currently responsible
      for operating the piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PalletIdClassType ns=1;i=2373 -->
  <UAObjectType NodeId='ns=1;i=2373' BrowseName='1:PalletIdClassType'>
    <DisplayName>PalletIdClassType</DisplayName>
    <Description>The identifier for a pallet. The identifier for a pallet.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PartIdClassType ns=1;i=2375 -->
  <UAObjectType NodeId='ns=1;i=2375' BrowseName='1:PartIdClassType'>
    <DisplayName>PartIdClassType</DisplayName>
    <Description>
      An identifier of a part in a manufacturing operation. An identifier of a
      part in a manufacturing operation.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PartNumberClassType ns=1;i=2377 -->
  <UAObjectType NodeId='ns=1;i=2377' BrowseName='1:PartNumberClassType'>
    <DisplayName>PartNumberClassType</DisplayName>
    <Description>
      An identifier of a part or product moving through the manufacturing
      process. An identifier of a part or product moving through the
      manufacturing process. The valid data value must be a text string. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ProgramClassType ns=1;i=2379 -->
  <UAObjectType NodeId='ns=1;i=2379' BrowseName='1:ProgramClassType'>
    <DisplayName>ProgramClassType</DisplayName>
    <Description>
      The name of the logic or motion program being executed by the
      \mtmodel{Controller} or \mtmodel{Path} component. The name of the logic or
      motion program being executed by the controller component.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ProgramCommentClassType ns=1;i=2385 -->
  <UAObjectType NodeId='ns=1;i=2385' BrowseName='1:ProgramCommentClassType'>
    <DisplayName>ProgramCommentClassType</DisplayName>
    <Description>
      A comment or non-executable statement in the control program. A comment or
      non-executable statement in the control program. The valid data value must
      be a text string.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ProgramEditNameClassType ns=1;i=2381 -->
  <UAObjectType NodeId='ns=1;i=2381' BrowseName='1:ProgramEditNameClassType'>
    <DisplayName>ProgramEditNameClassType</DisplayName>
    <Description>
      The name of the program being edited. This is used in conjunction with
      \mtmodel{PROGRAM_EDIT} when in \mtmodel{ACTIVE} state. The name of the
      program being edited. This is used in conjunction with programedit event
      when in active value state. The valid data value must be a text string.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ProgramHeaderClassType ns=1;i=2383 -->
  <UAObjectType NodeId='ns=1;i=2383' BrowseName='1:ProgramHeaderClassType'>
    <DisplayName>ProgramHeaderClassType</DisplayName>
    <Description>
      The non-executable header section of the control program. The
      non-executable header section of the control program.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object SerialNumberClassType ns=1;i=2387 -->
  <UAObjectType NodeId='ns=1;i=2387' BrowseName='1:SerialNumberClassType'>
    <DisplayName>SerialNumberClassType</DisplayName>
    <Description>
      The serial number associated with a \mtmodel{Component}, \mtmodel{Asset},
      or \mtmodel{Device}. The serial number associated with a component, asset
      mtconnectassets, or device. The valid data value must be a text string.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ToolAssetIdClassType ns=1;i=2389 -->
  <UAObjectType NodeId='ns=1;i=2389' BrowseName='1:ToolAssetIdClassType'>
    <DisplayName>ToolAssetIdClassType</DisplayName>
    <Description>
      The identifier of an individual tool asset The identifier of an individual
      tool asset.The valid data value must be a text string.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ToolNumberClassType ns=1;i=2391 -->
  <UAObjectType NodeId='ns=1;i=2391' BrowseName='1:ToolNumberClassType'>
    <DisplayName>ToolNumberClassType</DisplayName>
    <Description>
      The identifier of a tool provided by the piece of equipment controller.
      The identifier assigned by the controller component to a cutting tool when
      in use by a piece of equipment. The valid data value must be a text
      string.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ToolOffsetClassType ns=1;i=2393 -->
  <UAObjectType NodeId='ns=1;i=2393' BrowseName='1:ToolOffsetClassType'>
    <DisplayName>ToolOffsetClassType</DisplayName>
    <Description>
      A reference to the tool offset variables applied to the active cutting
      tool associated with a Path in a Controller type component. The valid data
      value MUST be a text string. The reported value returned for
      \mtmodel{TOOL_OFFSET} identifies the location in a table or list where the
      actual tool offset values are stored. A \gls{subType} MUST always be
      specified. A reference to the tool offset variables applied to the active
      cutting tool associated with a path in a controller type component.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object UserClassType ns=1;i=2395 -->
  <UAObjectType NodeId='ns=1;i=2395' BrowseName='1:UserClassType'>
    <DisplayName>UserClassType</DisplayName>
    <Description>
      The identifier of the person currently responsible for operating the piece
      of equipment. A \gls{subType} MUST always be specified. The identifier of
      the person currently responsible for operating the piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object WireClassType ns=1;i=2397 -->
  <UAObjectType NodeId='ns=1;i=2397' BrowseName='1:WireClassType'>
    <DisplayName>WireClassType</DisplayName>
    <Description>
      The identifier for the type of wire used as the cutting mechanism in
      Electrical Discharge Machining or similar processes. A string like piece
      or filament of relatively rigid or flexible material provided in a variety
      of diameters.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object WorkholdingClassType ns=1;i=2399 -->
  <UAObjectType NodeId='ns=1;i=2399' BrowseName='1:WorkholdingClassType'>
    <DisplayName>WorkholdingClassType</DisplayName>
    <Description>The identifier for the workholding currently in use.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object WorkOffsetClassType ns=1;i=2401 -->
  <UAObjectType NodeId='ns=1;i=2401' BrowseName='1:WorkOffsetClassType'>
    <DisplayName>WorkOffsetClassType</DisplayName>
    <Description>
      A reference to the offset variables for a work piece or part associated
      with a Path in a Controller type component. The valid data value MUST be a
      text string. The reported value returned for \mtmodel{WORK_OFFSET}
      identifies the location in a table or list where the actual tool offset
      values are stored. A reference to the offset variables for a work piece or
      part associated with a path in a controller type component.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTStringEventClassType ns=1;i=2361   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2361</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ActuatorClassType ns=1;i=2411 -->
  <UAObjectType NodeId='ns=1;i=2411' BrowseName='1:ActuatorClassType'>
    <DisplayName>ActuatorClassType</DisplayName>
    <Description>
       Redefined as a piece of equipment with the ability to be represented as a
      lower level component of a parent component element or as a composition
      element. See actuator type
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTConditionClassType ns=1;i=2629   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2629</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object CommunicationsClassType ns=1;i=2413 -->
  <UAObjectType NodeId='ns=1;i=2413' BrowseName='1:CommunicationsClassType'>
    <DisplayName>CommunicationsClassType</DisplayName>
    <Description>
       An indication that the piece of equipment has experienced a
      communications failure.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTConditionClassType ns=1;i=2629   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2629</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object DataRangeClassType ns=1;i=2415 -->
  <UAObjectType NodeId='ns=1;i=2415' BrowseName='1:DataRangeClassType'>
    <DisplayName>DataRangeClassType</DisplayName>
    <Description>
       An indication that the value of the data associated with a measured value
      or a calculation is outside of an expected range.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTConditionClassType ns=1;i=2629   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2629</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object HardwareClassType ns=1;i=2419 -->
  <UAObjectType NodeId='ns=1;i=2419' BrowseName='1:HardwareClassType'>
    <DisplayName>HardwareClassType</DisplayName>
    <Description>
       An indication of a fault associated with the hardware subsystem of the
      structural element.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTConditionClassType ns=1;i=2629   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2629</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LogicProgramClassType ns=1;i=2417 -->
  <UAObjectType NodeId='ns=1;i=2417' BrowseName='1:LogicProgramClassType'>
    <DisplayName>LogicProgramClassType</DisplayName>
    <Description>
       An indication that an error occurred in the logic program or programmable
      logic controller (PLC) associated with a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTConditionClassType ns=1;i=2629   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2629</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MotionProgramClassType ns=1;i=2421 -->
  <UAObjectType NodeId='ns=1;i=2421' BrowseName='1:MotionProgramClassType'>
    <DisplayName>MotionProgramClassType</DisplayName>
    <Description>
       An indication that an error occurred in the motion program associated
      with a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTConditionClassType ns=1;i=2629   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2629</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object SystemClassType ns=1;i=2423 -->
  <UAObjectType NodeId='ns=1;i=2423' BrowseName='1:SystemClassType'>
    <DisplayName>SystemClassType</DisplayName>
    <Description>
       A general purpose indication associated with an electronic component of a
      piece of equipment or a controller that represents a fault that is not
      associated with the operator, program, or hardware.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTConditionClassType ns=1;i=2629   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2629</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MTDataItemSubClassType ns=1;i=2476 -->
  <UAObjectType NodeId='ns=1;i=2476' BrowseName='1:MTDataItemSubClassType' IsAbstract='true'>
    <DisplayName>MTDataItemSubClassType</DisplayName>
    <Description>
       data entity describing a piece of information reported about a piece of
      equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - BaseConditionClassType i=11163   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=11163</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AbsoluteSubClassType ns=1;i=2478 -->
  <UAObjectType NodeId='ns=1;i=2478' BrowseName='1:AbsoluteSubClassType'>
    <DisplayName>AbsoluteSubClassType</DisplayName>
    <Description>
      The magnitude or measurement of a type irrespective of its relation to
      other values. The position of a block of program code relative to the
      beginning of the control program.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ActionSubClassType ns=1;i=2482 -->
  <UAObjectType NodeId='ns=1;i=2482' BrowseName='1:ActionSubClassType'>
    <DisplayName>ActionSubClassType</DisplayName>
    <Description>
      An indication of the operating state or value of a type. An indication of
      the operating state of a mechanism represented by a composition type
      component. The operating state indicates whether the composition element
      is activated or disabled. The valid data value must be active value or
      inactive value.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ActualSubClassType ns=1;i=2480 -->
  <UAObjectType NodeId='ns=1;i=2480' BrowseName='1:ActualSubClassType'>
    <DisplayName>ActualSubClassType</DisplayName>
    <Description>
      The measured value of the a type. The measured value of the data item type
      given by a sensor or encoder.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AllSubClassType ns=1;i=2484 -->
  <UAObjectType NodeId='ns=1;i=2484' BrowseName='1:AllSubClassType'>
    <DisplayName>AllSubClassType</DisplayName>
    <Description>
       The count of all the parts produced. If the subtype is not given, this is
      the default.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AlternatingSubClassType ns=1;i=2486 -->
  <UAObjectType NodeId='ns=1;i=2486' BrowseName='1:AlternatingSubClassType'>
    <DisplayName>AlternatingSubClassType</DisplayName>
    <Description>
      The measurement of a type occurring in turn repeatedly. The measurement of
      alternating voltage or current. If not specified further in statistic,
      defaults to RMS voltage. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AScaleSubClassType ns=1;i=2488 -->
  <UAObjectType NodeId='ns=1;i=2488' BrowseName='1:AScaleSubClassType'>
    <DisplayName>AScaleSubClassType</DisplayName>
    <Description>A Scale weighting factor for the measurement of sound level.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object AuxiliarySubClassType ns=1;i=2490 -->
  <UAObjectType NodeId='ns=1;i=2490' BrowseName='1:AuxiliarySubClassType'>
    <DisplayName>AuxiliarySubClassType</DisplayName>
    <Description>
      Example: When multiple locations on a piece of bar stock are referenced as
      the indication for the \mtmodel{END_OF_BAR}, the additional location(s)
      MUST be designated as \mtmodel{AUXILIARY} indication(s) for the
      \mtmodel{END_OF_BAR}. When multiple locations on a piece of bar stock are
      referenced as the indication for the endofbar event, the additional
      location(s) must be designated as auxiliary subtype indication(s) for the
      endofbar event. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object BadSubClassType ns=1;i=2492 -->
  <UAObjectType NodeId='ns=1;i=2492' BrowseName='1:BadSubClassType'>
    <DisplayName>BadSubClassType</DisplayName>
    <Description>
      Indicates the count of incorrect parts produced. Indicates the count of
      incorrect parts produced.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object BrinellSubClassType ns=1;i=2494 -->
  <UAObjectType NodeId='ns=1;i=2494' BrowseName='1:BrinellSubClassType'>
    <DisplayName>BrinellSubClassType</DisplayName>
    <Description>
      A scale to measure the resistance to deformation of a surface. A scale to
      measure the resistance to deformation of a surface.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object BScaleSubClassType ns=1;i=2496 -->
  <UAObjectType NodeId='ns=1;i=2496' BrowseName='1:BScaleSubClassType'>
    <DisplayName>BScaleSubClassType</DisplayName>
    <Description>B Scale weighting factor for the measurement of sound level.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object CommandedSubClassType ns=1;i=2498 -->
  <UAObjectType NodeId='ns=1;i=2498' BrowseName='1:CommandedSubClassType'>
    <DisplayName>CommandedSubClassType</DisplayName>
    <Description>
      The value as specified by the Controller type component. A value specified
      by the controller type component.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ControlSubClassType ns=1;i=2502 -->
  <UAObjectType NodeId='ns=1;i=2502' BrowseName='1:ControlSubClassType'>
    <DisplayName>ControlSubClassType</DisplayName>
    <Description>
      The state of the enabling signal or control logic that enables or disables
      the function or operation of the \textit{Structural Element}. The state of
      the enabling signal or control logic that enables or disables the function
      or operation of the structural element.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object CScaleSubClassType ns=1;i=2504 -->
  <UAObjectType NodeId='ns=1;i=2504' BrowseName='1:CScaleSubClassType'>
    <DisplayName>CScaleSubClassType</DisplayName>
    <Description>C Scale weighting factor for the measurement of sound level.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object DelaySubClassType ns=1;i=2506 -->
  <UAObjectType NodeId='ns=1;i=2506' BrowseName='1:DelaySubClassType'>
    <DisplayName>DelaySubClassType</DisplayName>
    <Description>
      Measurement of the time that a piece of equipment is waiting for an event
      or an action to occur. A piece of equipment waiting for an event or an
      action to occur.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object DirectSubClassType ns=1;i=2508 -->
  <UAObjectType NodeId='ns=1;i=2508' BrowseName='1:DirectSubClassType'>
    <DisplayName>DirectSubClassType</DisplayName>
    <Description>Measurement of DC current or voltage. The measurement of DC current or voltage.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object DryRunSubClassType ns=1;i=2510 -->
  <UAObjectType NodeId='ns=1;i=2510' BrowseName='1:DryRunSubClassType'>
    <DisplayName>DryRunSubClassType</DisplayName>
    <Description>
      A setting or operator selection used to execute a test mode to confirm the
      execution of machine functions.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object DScaleSubClassType ns=1;i=2512 -->
  <UAObjectType NodeId='ns=1;i=2512' BrowseName='1:DScaleSubClassType'>
    <DisplayName>DScaleSubClassType</DisplayName>
    <Description>D Scale weighting factor for the measurement of sound level.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object FixtureSubClassType ns=1;i=2514 -->
  <UAObjectType NodeId='ns=1;i=2514' BrowseName='1:FixtureSubClassType'>
    <DisplayName>FixtureSubClassType</DisplayName>
    <Description>Fixture denotes a specifc type of a piece of equipment.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object GoodSubClassType ns=1;i=2500 -->
  <UAObjectType NodeId='ns=1;i=2500' BrowseName='1:GoodSubClassType'>
    <DisplayName>GoodSubClassType</DisplayName>
    <Description>
      Indicates the count of correct parts made. Indicates the count of correct
      parts made.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object IncrementalSubClassType ns=1;i=2516 -->
  <UAObjectType NodeId='ns=1;i=2516' BrowseName='1:IncrementalSubClassType'>
    <DisplayName>IncrementalSubClassType</DisplayName>
    <Description>
      A small change which could be either positive or negative in a Type&apos;s
      value or function. Example: The position of a block of program code
      relative to the occurrence of the last \mtmodel{LINE_LABEL} encountered in
      the control program. The position of a block of program code relative to
      the occurrence of the last linelabel event encountered in the control
      program.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object JobSubClassType ns=1;i=2518 -->
  <UAObjectType NodeId='ns=1;i=2518' BrowseName='1:JobSubClassType'>
    <DisplayName>JobSubClassType</DisplayName>
    <Description>
      The value of a signal or calculation issued to adjust the feedrate of the
      axes associated with a Path component when the axes, or a single axis, are
      being operated in a manual mode or method (jogging).
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object KineticSubClassType ns=1;i=2520 -->
  <UAObjectType NodeId='ns=1;i=2520' BrowseName='1:KineticSubClassType'>
    <DisplayName>KineticSubClassType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LateralSubClassType ns=1;i=2522 -->
  <UAObjectType NodeId='ns=1;i=2522' BrowseName='1:LateralSubClassType'>
    <DisplayName>LateralSubClassType</DisplayName>
    <Description>
      An indication of the position of a mechanism that may move in a lateral
      direction. The mechanism is represented by a \mtmodel{Composition} type
      component. An indication of the position of a mechanism that may move in a
      lateral direction. The mechanism is represented by a composition type
      component. The position information indicates whether the composition
      element is positioned to the right, to the left, or is in transition. The
      valid data value must be right value, left value, or transitioning value.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LeebSubClassType ns=1;i=2524 -->
  <UAObjectType NodeId='ns=1;i=2524' BrowseName='1:LeebSubClassType'>
    <DisplayName>LeebSubClassType</DisplayName>
    <Description>
      A scale to measure the elasticity of a surface. A scale to measure the
      elasticity of a surface.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LengthSubClassType ns=1;i=2526 -->
  <UAObjectType NodeId='ns=1;i=2526' BrowseName='1:LengthSubClassType'>
    <DisplayName>LengthSubClassType</DisplayName>
    <Description>
      The measurement or extent of something from end to end. The measurement of
      the length of an object.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LinearSubClassType ns=1;i=2528 -->
  <UAObjectType NodeId='ns=1;i=2528' BrowseName='1:LinearSubClassType'>
    <DisplayName>LinearSubClassType</DisplayName>
    <Description>
      The direction of motion. A linear axis represents the movement of a
      physical piece of equipment, or a portion of the equipment, in a straight
      line. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LineSubClassType ns=1;i=2530 -->
  <UAObjectType NodeId='ns=1;i=2530' BrowseName='1:LineSubClassType'>
    <DisplayName>LineSubClassType</DisplayName>
    <Description>
      The state of the power source for the \textit{Structural Element}.
      DEPRECATED in Version 1.4.0.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object LoadedSubClassType ns=1;i=2532 -->
  <UAObjectType NodeId='ns=1;i=2532' BrowseName='1:LoadedSubClassType'>
    <DisplayName>LoadedSubClassType</DisplayName>
    <Description>
      An indication that the sub-parts of a piece of equipment are under load.
      Subparts of a piece of equipment are under load.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MachineAxisLockSubClassType ns=1;i=2534 -->
  <UAObjectType NodeId='ns=1;i=2534' BrowseName='1:MachineAxisLockSubClassType'>
    <DisplayName>MachineAxisLockSubClassType</DisplayName>
    <Description>
      A setting or operator selection that changes the behavior of the
      controller on a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MaintenanceSubClassType ns=1;i=2536 -->
  <UAObjectType NodeId='ns=1;i=2536' BrowseName='1:MaintenanceSubClassType'>
    <DisplayName>MaintenanceSubClassType</DisplayName>
    <Description>
      The identifier of the person currently responsible for performing
      maintenance on the piece of equipment. Action related to maintenance on
      the piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ManualUnclampSubClassType ns=1;i=2538 -->
  <UAObjectType NodeId='ns=1;i=2538' BrowseName='1:ManualUnclampSubClassType'>
    <DisplayName>ManualUnclampSubClassType</DisplayName>
    <Description>
      An indication of the state of an operator controlled interlock that can
      inhibit the ability to initiate an unclamp action of an electronically
      controlled chuck.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MaximumSubClassType ns=1;i=2540 -->
  <UAObjectType NodeId='ns=1;i=2540' BrowseName='1:MaximumSubClassType'>
    <DisplayName>MaximumSubClassType</DisplayName>
    <Description>
      Maximum or peak value recorded for the data item during the calculation
      period. The upper limit of data reported for a data item.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MinimumSubClassType ns=1;i=2542 -->
  <UAObjectType NodeId='ns=1;i=2542' BrowseName='1:MinimumSubClassType'>
    <DisplayName>MinimumSubClassType</DisplayName>
    <Description>
      Minimum value recorded for the data item during the calculation period.
      The lower limit of data reported for a data item.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MohsSubClassType ns=1;i=2544 -->
  <UAObjectType NodeId='ns=1;i=2544' BrowseName='1:MohsSubClassType'>
    <DisplayName>MohsSubClassType</DisplayName>
    <Description>
      A scale to measure the resistance to scratching of a surface. A scale to
      measure the resistance to scratching of a surface.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MoleSubClassType ns=1;i=2546 -->
  <UAObjectType NodeId='ns=1;i=2546' BrowseName='1:MoleSubClassType'>
    <DisplayName>MoleSubClassType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object MotionSubClassType ns=1;i=2548 -->
  <UAObjectType NodeId='ns=1;i=2548' BrowseName='1:MotionSubClassType'>
    <DisplayName>MotionSubClassType</DisplayName>
    <Description>
      An indication of the open or closed state of a mechanism. The mechanism is
      represented by a \mtmodel{Composition} type component. An indication of
      the open or closed state of a mechanism. The mechanism is represented by a
      composition type component. The operating state indicates whether the
      state of the composition element is open, closed, or unlatched. The valid
      data value must be open value, unlatched value, or closed value.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object NoScaleSubClassType ns=1;i=2550 -->
  <UAObjectType NodeId='ns=1;i=2550' BrowseName='1:NoScaleSubClassType'>
    <DisplayName>NoScaleSubClassType</DisplayName>
    <Description>No weighting factor on the frequency scale for the measurement of sound level.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object OperatingSubClassType ns=1;i=2552 -->
  <UAObjectType NodeId='ns=1;i=2552' BrowseName='1:OperatingSubClassType'>
    <DisplayName>OperatingSubClassType</DisplayName>
    <Description>
      An indication that the major sub-parts of a piece of equipment are powered
      or performing any activity whether producing a part or product or not.
      Example: For traditional machine tools, this includes when the piece of
      equipment is \mtmodel{WORKING} or it is idle. A piece of equipment are
      powered or performing any activity.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object OperatorSubClassType ns=1;i=2554 -->
  <UAObjectType NodeId='ns=1;i=2554' BrowseName='1:OperatorSubClassType'>
    <DisplayName>OperatorSubClassType</DisplayName>
    <Description>
      The identifier of the person currently responsible for operating the piece
      of equipment. The identifier of the person currently responsible for
      operating the piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object OptionalStopSubClassType ns=1;i=2556 -->
  <UAObjectType NodeId='ns=1;i=2556' BrowseName='1:OptionalStopSubClassType'>
    <DisplayName>OptionalStopSubClassType</DisplayName>
    <Description>
      A setting or operator selection that changes the behavior of the
      controller on a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object OverrideSubClassType ns=1;i=2558 -->
  <UAObjectType NodeId='ns=1;i=2558' BrowseName='1:OverrideSubClassType'>
    <DisplayName>OverrideSubClassType</DisplayName>
    <Description>
      The operator&apos;s overridden value. DEPRECATED: The operators overridden
      value.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PoweredSubClassType ns=1;i=2562 -->
  <UAObjectType NodeId='ns=1;i=2562' BrowseName='1:PoweredSubClassType'>
    <DisplayName>PoweredSubClassType</DisplayName>
    <Description>
      An indication that primary power is applied to the piece of equipment and,
      as a minimum, the controller or logic portion of the piece of equipment is
      powered and functioning or components that are required to remain on are
      powered. Primary power is applied to the piece of equipment and, as a
      minimum, the controller or logic portion of the piece of equipment is
      powered and functioning or components that are required to remain on are
      powered.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object PrimarySubClassType ns=1;i=2560 -->
  <UAObjectType NodeId='ns=1;i=2560' BrowseName='1:PrimarySubClassType'>
    <DisplayName>PrimarySubClassType</DisplayName>
    <Description>
      Specific applications MAY reference one or more locations on a piece of
      bar stock as the indication for the \mtmodel{END_OF_BAR}. The main or most
      important location MUST be designated as the \mtmodel{PRIMARY} indication
      for the \mtmodel{END_OF_BAR}. Specific applications MAY reference one or
      more locations on a piece of bar stock as the indication for the endofbar
      event. The main or most important location must be designated as the
      primary subtype indication for the endofbar event. If no subtype is
      specified, primary subtype must be the default endofbar event indication.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ProbeSubClassType ns=1;i=2564 -->
  <UAObjectType NodeId='ns=1;i=2564' BrowseName='1:ProbeSubClassType'>
    <DisplayName>ProbeSubClassType</DisplayName>
    <Description>
      The position provided by a measurement probe. The position provided by a
      measurement probe.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ProcessSubClassType ns=1;i=2566 -->
  <UAObjectType NodeId='ns=1;i=2566' BrowseName='1:ProcessSubClassType'>
    <DisplayName>ProcessSubClassType</DisplayName>
    <Description>
      The measurement of the time from the beginning of production of a part or
      product on a piece of equipment until the time that production is complete
      for that part or product on that piece of equipment. This includes the
      time that the piece of equipment is running, producing parts or products,
      or in the process of producing parts. The measurement of the time from the
      beginning of production of a part or product on a piece of equipment until
      the time that production is complete for that part or product on that
      piece of equipment. This includes the time that the piece of equipment is
      running, producing parts or products, or in the process of producing
      parts.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ProgrammedSubClassType ns=1;i=2568 -->
  <UAObjectType NodeId='ns=1;i=2568' BrowseName='1:ProgrammedSubClassType'>
    <DisplayName>ProgrammedSubClassType</DisplayName>
    <Description>
      The value of a signal or calculation issued to adjust the feedrate of the
      axes associated with a \mtmodel{Path} component when the axes, or a single
      axis, are operating as specified by a logic or motion program or set by a
      switch. The value of a signal or calculation specified by a logic or
      motion program or set by a switch.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object RadialSubClassType ns=1;i=2570 -->
  <UAObjectType NodeId='ns=1;i=2570' BrowseName='1:RadialSubClassType'>
    <DisplayName>RadialSubClassType</DisplayName>
    <Description>
      A reference to a radial type tool offset variable. A reference to a radial
      type tool offset variable.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object RapidSubClassType ns=1;i=2572 -->
  <UAObjectType NodeId='ns=1;i=2572' BrowseName='1:RapidSubClassType'>
    <DisplayName>RapidSubClassType</DisplayName>
    <Description>
      The value of a signal or calculation issued to adjust the feedrate of the
      axes associated with a \mtmodel{Path} component when the axes, or a single
      axis, are being operated in a rapid positioning mode or method (rapid).
      The value of a signal or calculation issued to adjust the feedrate of a
      component or composition that is operating in a rapid positioning mode.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object RelativeSubClassType ns=1;i=2574 -->
  <UAObjectType NodeId='ns=1;i=2574' BrowseName='1:RelativeSubClassType'>
    <DisplayName>RelativeSubClassType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object RemainingSubClassType ns=1;i=2576 -->
  <UAObjectType NodeId='ns=1;i=2576' BrowseName='1:RemainingSubClassType'>
    <DisplayName>RemainingSubClassType</DisplayName>
    <Description>
      The remaining amount of the type specified. Remaining measure of an object
      or an action.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object RequestSubClassType ns=1;i=2578 -->
  <UAObjectType NodeId='ns=1;i=2578' BrowseName='1:RequestSubClassType'>
    <DisplayName>RequestSubClassType</DisplayName>
    <Description>
      \mtmodel{Request} subtype identifies if the data item defined for
      MTConnect Interaction Model \cite{MTCPart5} represents a request. A
      subtype of an interface dataitem type to communicate a request. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ResponseSubClassType ns=1;i=2580 -->
  <UAObjectType NodeId='ns=1;i=2580' BrowseName='1:ResponseSubClassType'>
    <DisplayName>ResponseSubClassType</DisplayName>
    <Description>
      \mtmodel{Response} subtype identifies if the data item defined for
      MTConnect Interaction Model \cite{MTCPart5} represents a response. A
      subtype of an interface dataitem type to communicate a response.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object RockwellSubClassType ns=1;i=2582 -->
  <UAObjectType NodeId='ns=1;i=2582' BrowseName='1:RockwellSubClassType'>
    <DisplayName>RockwellSubClassType</DisplayName>
    <Description>
      A scale to measure the resistance to deformation of a surface. A scale to
      measure the resistance to deformation of a surface.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object RotarySubClassType ns=1;i=2584 -->
  <UAObjectType NodeId='ns=1;i=2584' BrowseName='1:RotarySubClassType'>
    <DisplayName>RotarySubClassType</DisplayName>
    <Description>
      The rotational direction of a rotary motion using the right hand rule
      convention. A rotary axis represents any non-linear or rotary movement of
      a physical piece of equipment or a portion of the equipment. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object SetUpSubClassType ns=1;i=2586 -->
  <UAObjectType NodeId='ns=1;i=2586' BrowseName='1:SetUpSubClassType'>
    <DisplayName>SetUpSubClassType</DisplayName>
    <Description>
      The identifier of the person currently responsible for operating the piece
      of equipment. A structural element is being prepared or modified to begin
      production of product.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ShoreSubClassType ns=1;i=2588 -->
  <UAObjectType NodeId='ns=1;i=2588' BrowseName='1:ShoreSubClassType'>
    <DisplayName>ShoreSubClassType</DisplayName>
    <Description>
      A scale to measure the resistance to deformation of a surface. A scale to
      measure the resistance to deformation of a surface.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object StandardSubClassType ns=1;i=2590 -->
  <UAObjectType NodeId='ns=1;i=2590' BrowseName='1:StandardSubClassType'>
    <DisplayName>StandardSubClassType</DisplayName>
    <Description>
      The standard or original value of an object. The standard or original
      length of an object.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object SwitchedSubClassType ns=1;i=2592 -->
  <UAObjectType NodeId='ns=1;i=2592' BrowseName='1:SwitchedSubClassType'>
    <DisplayName>SwitchedSubClassType</DisplayName>
    <Description>
      An indication of the activation state of a mechanism represented by a
      \mtmodel{Composition} type component. The activation state indicates
      whether the \mtmodel{Composition} element is activated or not. An
      indication of the activation state of a mechanism represented by a
      composition type component. The activation state indicates whether the
      composition element is activated or not. The valid data value must be on
      value or off value.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object TargetSubClassType ns=1;i=2594 -->
  <UAObjectType NodeId='ns=1;i=2594' BrowseName='1:TargetSubClassType'>
    <DisplayName>TargetSubClassType</DisplayName>
    <Description>
      Indicates the number of parts that are projected or planned to be
      produced. The desired measure or count for a data item value.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ToolChangeStopSubClassType ns=1;i=2596 -->
  <UAObjectType NodeId='ns=1;i=2596' BrowseName='1:ToolChangeStopSubClassType'>
    <DisplayName>ToolChangeStopSubClassType</DisplayName>
    <Description>
      A setting or operator selection that changes the behavior of the
      controller on a piece of equipment.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ToolEdgeSubClassType ns=1;i=2598 -->
  <UAObjectType NodeId='ns=1;i=2598' BrowseName='1:ToolEdgeSubClassType'>
    <DisplayName>ToolEdgeSubClassType</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ToolGroupSubClassType ns=1;i=2600 -->
  <UAObjectType NodeId='ns=1;i=2600' BrowseName='1:ToolGroupSubClassType'>
    <DisplayName>ToolGroupSubClassType</DisplayName>
    <Description>
      The tool group a specific tool is assigned to in the part program. An
      identifier for the tool group associated with a specific tool. Commonly
      used to designate spare tools.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object ToolSubClassType ns=1;i=2602 -->
  <UAObjectType NodeId='ns=1;i=2602' BrowseName='1:ToolSubClassType'>
    <DisplayName>ToolSubClassType</DisplayName>
    <Description>
       coordinate system referenced to the tool or to the end effector attached
      to the mechanical interface. Ref:ISO 9787:2013
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object UasbleSubClassType ns=1;i=2604 -->
  <UAObjectType NodeId='ns=1;i=2604' BrowseName='1:UasbleSubClassType'>
    <DisplayName>UasbleSubClassType</DisplayName>
    <Description>The remaining useable value of an object.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object VerticalSubClassType ns=1;i=2606 -->
  <UAObjectType NodeId='ns=1;i=2606' BrowseName='1:VerticalSubClassType'>
    <DisplayName>VerticalSubClassType</DisplayName>
    <Description>
      An indication of the position of a mechanism that may move in a vertical
      direction. An indication of the position of a mechanism that may move in a
      vertical direction. The mechanism is represented by a composition type
      component. The position information indicates whether the composition
      element is positioned to the top, to the bottom, or is in transition. The
      valid data value must be up value, down value, or transitioning value.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object VickersSubClassType ns=1;i=2610 -->
  <UAObjectType NodeId='ns=1;i=2610' BrowseName='1:VickersSubClassType'>
    <DisplayName>VickersSubClassType</DisplayName>
    <Description>
      A scale to measure the resistance to deformation of a surface. A scale to
      measure the resistance to deformation of a surface.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object VolumeSubClassType ns=1;i=2608 -->
  <UAObjectType NodeId='ns=1;i=2608' BrowseName='1:VolumeSubClassType'>
    <DisplayName>VolumeSubClassType</DisplayName>
    <Description>A measurement of space accupied by a physical object.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object WeightSubClassType ns=1;i=2612 -->
  <UAObjectType NodeId='ns=1;i=2612' BrowseName='1:WeightSubClassType'>
    <DisplayName>WeightSubClassType</DisplayName>
    <Description>
      A physical object&apos;s relative mass. The total weight of the Cutting
      Tool in grams. The force exerted by the mass of the Cutting Tool. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object WorkingSubClassType ns=1;i=2614 -->
  <UAObjectType NodeId='ns=1;i=2614' BrowseName='1:WorkingSubClassType'>
    <DisplayName>WorkingSubClassType</DisplayName>
    <Description>
      An indication that a piece of equipment is performing any activity. A
      piece of equipment performing any activity, the equipment is active and
      performing a function under load or not.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Object WorkpieceSubClassType ns=1;i=2616 -->
  <UAObjectType NodeId='ns=1;i=2616' BrowseName='1:WorkpieceSubClassType'>
    <DisplayName>WorkpieceSubClassType</DisplayName>
    <Description>
      A physical object being or to be worked on with a tool or machine. An
      object or material on which a form of work is performed.
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - MTDataItemSubClassType ns=1;i=2476   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>ns=1;i=2476</Reference>
    </References>
  </UAObjectType>
  <!-- Definition of Reference HasMTClassType ns=1;i=2680 -->
  <UAReferenceType NodeId='ns=1;i=2680' BrowseName='1:HasMTClassType' Symmetric='false'>
    <DisplayName>HasMTClassType</DisplayName>
    <Description>
      A \gls{MTDataItem} is representated in OPC UA as a sub-type of the most
      appropriate \uamodel{BaseDataVariableType}. The type is derived from the
      MTConnect \gls{type} attribute and references the corect
      \mtmodel{..ClassType} 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - NonHierarchicalReferences i=32   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=32</Reference>
    </References>
  </UAReferenceType>
  <!-- Definition of Reference HasMTComposition ns=1;i=2687 -->
  <UAReferenceType NodeId='ns=1;i=2687' BrowseName='1:HasMTComposition' Symmetric='true'>
    <DisplayName>HasMTComposition</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - NonHierarchicalReferences i=32   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=32</Reference>
    </References>
  </UAReferenceType>
  <!-- Definition of Reference HasMTReference ns=1;i=2672 -->
  <UAReferenceType NodeId='ns=1;i=2672' BrowseName='1:HasMTReference' Symmetric='true'>
    <DisplayName>HasMTReference</DisplayName>
    <References>
      <!-- HasSubtype - (Reverse) - NonHierarchicalReferences i=32   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=32</Reference>
    </References>
  </UAReferenceType>
  <!-- Definition of Reference HasMTSource ns=1;i=2689 -->
  <UAReferenceType NodeId='ns=1;i=2689' BrowseName='1:HasMTSource' Symmetric='true'>
    <DisplayName>HasMTSource</DisplayName>
    <Description>The \mtmodel{Source} relation to a \gls{MTComponent} or \gls{MTDataItem}.</Description>
    <References>
      <!-- HasSubtype - (Reverse) - NonHierarchicalReferences i=32   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=32</Reference>
    </References>
  </UAReferenceType>
  <!-- Definition of Reference HasMTSubClassType ns=1;i=2683 -->
  <UAReferenceType NodeId='ns=1;i=2683' BrowseName='1:HasMTSubClassType' Symmetric='false'>
    <DisplayName>HasMTSubClassType</DisplayName>
    <Description>
      A \gls{MTDataItem} is representated in OPC UA as a sub-type of the most
      appropriate \uamodel{BaseDataVariableType}. The sub-type is derived from
      the MTConnect \gls{subType} attribute and references the corect
      \mtmodel{..ClassType}. 
    </Description>
    <References>
      <!-- HasSubtype - (Reverse) - NonHierarchicalReferences i=32   -->
      <Reference ReferenceType='HasSubtype' IsForward='false'>i=32</Reference>
    </References>
  </UAReferenceType>
</UANodeSet>
